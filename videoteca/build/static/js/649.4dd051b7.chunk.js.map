{"version":3,"file":"static/js/649.4dd051b7.chunk.js","mappings":"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","sources":["axios.js","components/Notification.js","components/users/login.js","hooks/useUser.js","services/auth.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//toc贸 cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Funci贸n que valida si existe y es valido un access_token para manejo de sesi贸n\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n}));\r\n/**\r\n * \r\n * @returns Componente con mensaje de alerta al ingresar mal las credenciales de autenticaci贸n\r\n */\r\nfunction Notification() {\r\n  const classes = useStyles();\r\n\r\n  return function ntf({ message, ...props }) {\r\n    if (!message) return <p></p>;\r\n    return (\r\n      <p className={classes.link} style={{ fontSize: \"25px\", color: \"red\" }}>\r\n        {message}\r\n      </p>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Notification;\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\n//dependencies\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useUser from \"../../hooks/useUser\"\r\n//MaterialUI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Notification from \"../Notification\";\r\nimport Swal from \"sweetalert2\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: 'white',\r\n    color:'black',\r\n    padding:'30px',\r\n    borderRadius:'15px',  \r\n    boxShadow:'5px 5px 10px #222261'\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: 'dark',\r\n    width:'80px',\r\n    height:'80px',\r\n    border:'2px solid #4949a5'\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),   \r\n    \r\n  },\r\n  texto: {\r\n\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding:'12px 0'\r\n  },\r\n  \r\n}));\r\n\r\n/**\r\n * Funci贸n para mostrar componente de login y hacer la validaci贸n de login con el backend.\r\n * @param {boolean} param0 \r\n * @returns redirecciona al index si es correcto el login, de lo contrario muestra mensaje de error.\r\n */\r\nexport default function SignIn({onLogin}) {\r\n  const history = useNavigate();\r\n  const {isLoginLoading, hasLoginError, login, isLogged, errLogin} = useUser()\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const initialFormData = Object.freeze({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const Notificacion = Notification();\r\n  const [formData, updateFormData] = useState(initialFormData);\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n\r\n  /**\r\n   * Verifica cambios en el formulario y agrega los valores al formData\r\n   * @param {*} e \r\n   */\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    updateFormData((prevData) => {\r\n      const newData = { ...prevData, [name]: value.trim() };\r\n      \r\n      // Habilita el bot贸n solo si ambos campos est谩n llenos\r\n      setIsButtonDisabled(!(newData.email && newData.password));\r\n      \r\n      return newData;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Valida si el login es correcto para redireccionar al index\r\n   */\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      Swal.fire({\r\n        title: \"Bienvenido(a) a SCCOTVIEW\",\r\n        html: \"Esta plataforma de videos tiene im谩genes y contenido sensible, fruto del dedicado esfuerzo de nuestros especialistas. Disfruta de esta herramienta exclusiva de la SCCOT, creada para ti. 隆Gracias por ser parte de nuestra comunidad y a nuestros expositores por su invaluable contribuci贸n a la ciencia y la investigaci贸n!\",\r\n        /* html: \"Esta plataforma de videos tiene im谩genes y contenido sensible, fruto del dedicado esfuerzo de nuestros especialistas. Disfruta de esta herramienta exclusiva de la SCCOT, creada para ti. 隆Gracias por ser parte de nuestra comunidad y a nuestros expositores por su invaluable contribuci贸n a la ciencia y la investigaci贸n!\", */\r\n        icon: \"info\",\r\n        confirmButtonText: \"Aceptar\", // Texto del bot贸n\r\n        confirmButtonColor: \"rgb(63, 81, 181)\", // Color verde\r\n      }).then(() => {\r\n        history('/');\r\n        onLogin && onLogin();\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }, [history, isLogged, onLogin]);\r\n  \r\n\r\n  /**\r\n   * Valida si el login es incorrecto para enviar mensaje de error\r\n   */\r\n  useEffect(() => {\r\n    if (hasLoginError) {\r\n      Swal.fire({\r\n        title: errLogin != '' ? errLogin : \"Lo sentimos no fue posible iniciar sesi贸n\",\r\n        html: \"Puede contactarnos al correo membresias@sccot.org.co <br /> <a href='wa.link/mmff0z'><input type='button' class='btn btn-outline-success' value='WhatsApp' /></a>\",\r\n        icon: \"error\"\r\n      });\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  }, [hasLoginError])\r\n  \r\n  /**\r\n   * Envia los datos del formulario a la funci贸n login que est谩 en el hook useUser para consultar con el backend.\r\n   * @param {*} e \r\n   */\r\n  const handleLogin = (e) => {\r\n    \r\n    e.preventDefault();    \r\n    login({\r\n      username: formData.email,\r\n      password: formData.password,\r\n    })    \r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"mt-4\">{isLoginLoading && <strong className=\"d-flex justify-content-center flex-column align-items-center\">\r\n      <div className=\"spinner-grow text-light \" role=\"status\">\r\n      </div>\r\n        <span className=\"sr-only d-inline h4 mt-1\">Espera por favor</span>\r\n      </strong>}\r\n      {!isLoginLoading &&\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          \r\n          <Avatar className={classes.avatar}></Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar sesi贸n\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              className={classes.texto} \r\n              \r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electr贸nico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n            className={classes.texto}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contrase帽a\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleLogin}\r\n              disabled={isButtonDisabled}\r\n            >\r\n              Ingresar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <a \r\n                  href=\"javascript:void(0);\" \r\n                  className=\"cursorPointer text-dark\"\r\n                  onClick={() => {\r\n                    Swal.fire({\r\n                      title: errLogin !== '' ? errLogin : \"驴Olvid贸 su contrase帽a?\",\r\n                      html: \"Puede contactarnos al correo membresias@sccot.org.co <br /> o cont谩ctenos por <a class='text-success' href='https://wa.link/mmff0z' target='_blank'>WhatsApp</a>\",\r\n                      confirmButtonText: 'Entendido',\r\n                      confirmButtonColor:'#3f51b5',\r\n                      icon: \"info\"\r\n                    });\r\n                  }}\r\n                >\r\n                  驴Olvid贸 su contrase帽a?\r\n                </a>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </form>        \r\n        </div>\r\n      </Container>\r\n       }\r\n       { hasLoginError &&  <Notificacion message={errorMessage} />\r\n       }\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//dependencias\r\nimport Context from \"../components/context/UserContext\";\r\nimport {Login} from \"../services/auth\";\r\nimport axiosInstance from \"../axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\n/**\r\n * Hook para realizar login y logout \r\n * @returns Funciones necesarias para login y logout.\r\n */\r\nexport default function useUser() {\r\n    const history = useNavigate();\r\n    const { jwt, setUSER, setJWT } = useContext(Context)\r\n    const [state, setState] = useState({ loading: false, error: false });\r\n    const [errLogin, setErrLogin] = useState('') \r\n\r\n    /**\r\n     * Funci贸n para validar con el backend si las credenciales son correctas.\r\n     */\r\n  const login = useCallback(\r\n    ({ username, password }) => {\r\n      setState({ loading: true, error: false });\r\n      Login({ username, password }).then(\r\n        (res) => {\r\n          window.localStorage.setItem(\"access_token\", res.data.access_token)\r\n          window.localStorage.setItem(\"refresh_token\", res.data.refresh_token)\r\n          window.localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n\r\n          axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + localStorage.getItem(\"access_token\");\r\n          setState({ loading: false, error: false })\r\n          setJWT(res.data.access_token)\r\n          setUSER(res.data.user)\r\n        })\r\n        .catch((err) => {\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          setState({ loading: false, error: true })\r\n          console.log(err)\r\n          setErrLogin(err.response.data.error || err.response.data.detail )\r\n        });\r\n    },[setJWT, setUSER]);\r\n\r\n  /**\r\n   * Funci贸n para realizar el logout.\r\n   */\r\n  const logout = useCallback(() => {\r\n    axiosInstance.post(\"logout/\", {\r\n        refresh_token: localStorage.getItem(\"refresh_token\"),\r\n      });\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    localStorage.removeItem(\"user\");\r\n  \r\n    axiosInstance.defaults.headers[\"Authorization\"] = null;\r\n    setJWT(null);\r\n    history(\"/\");\r\n    window.location.reload();\r\n  }, [history, setJWT]);\r\n\r\n  return {\r\n    isLogged: Boolean(jwt),\r\n    isLoginLoading: state.loading,\r\n    hasLoginError: state.error,\r\n    login,\r\n    logout,\r\n    errLogin\r\n\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar login\r\n * @param {formdata} credentials \r\n * @returns data enviada desde el backend\r\n */\r\nexport const Login = async (credentials) => {\r\n  \r\n  const data = await axios.post(API_URL + \"login/\", credentials);\r\n  console.log(data);\r\n  console.log(credentials);\r\n  return data;\r\n};\r\n/**\r\n * Funci贸n para consultar un usuario en espec铆fico.\r\n * @param {pk} userID\r\n * @returns data enviada desde el backend\r\n */\r\nexport const getUser = async (userID) => {\r\n  const response = await axiosInstance.get(`${API_URL}users/${userID}`);\r\n  if (response.status === 200) {\r\n    console.log(response)\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Funci贸n para actualizar la imagen de perfil de un usuario.\r\n * @param {id} userID \r\n * @param {img} updateImg \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateImage = async (userID,updateImg) => {\r\n  const response = await axiosInstance.patch(`${API_URL}users/${userID}/`,updateImg);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","link","margin","spacing","classes","message","className","style","fontSize","color","paper","marginTop","display","flexDirection","alignItems","backgroundColor","padding","borderRadius","boxShadow","avatar","width","height","border","form","texto","palette","common","white","submit","SignIn","onLogin","history","useNavigate","useUser","isLoginLoading","hasLoginError","login","isLogged","errLogin","useState","errorMessage","setErrorMessage","initialFormData","Object","freeze","email","password","Notificacion","Notification","formData","updateFormData","isButtonDisabled","setIsButtonDisabled","handleChange","e","target","name","value","prevData","newData","trim","useEffect","Swal","title","html","icon","confirmButtonText","confirmButtonColor","reload","setTimeout","role","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","onClick","preventDefault","username","disabled","Grid","container","item","xs","useContext","Context","jwt","setUSER","setJWT","loading","state","setState","setErrLogin","useCallback","Login","res","stringify","user","detail","logout","Boolean","credentials","getUser","userID","updateImage","updateImg"],"sourceRoot":""}