{"version":3,"file":"static/js/166.87f6dc26.chunk.js","mappings":"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","sources":["axios.js","components/navbar/navbar.js","Switch.js","components/navbar/navbarAd.js","components/navbar/drawer.js","components/navbar/sidebarUser.js","components/header.js","hooks/useUser.js","services/auth.js","services/category.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Lista de endpoints que no requieren autenticación\r\n * Puedes ajustar esto según los endpoints de tu backend que son públicos.\r\n */\r\nconst PUBLIC_ENDPOINTS = [\r\n  \"free/\",\r\n  \"free\",         // Para GET general de videos\r\n           // Para GET general de series\r\n];\r\n\r\n/**\r\n * Instancia de Axios para hacer peticiones al backend\r\n */\r\nconst token = localStorage.getItem(\"access_token\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",  // Cambiado según tu observación\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * Interceptor de request para agregar el token solo si la ruta NO es pública\r\n */\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // Detectar si la URL es pública\r\n  const isPublic = PUBLIC_ENDPOINTS.some(endpoint => config.url.includes(endpoint));\r\n\r\n  if (token && !isPublic) {\r\n    config.headers[\"Authorization\"] = \"JWT \" + token;\r\n  } else {\r\n    delete config.headers[\"Authorization\"]; // Asegura que no se mande nada si no es necesario\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n/**\r\n * Interceptor de respuesta para manejar expiración del token\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n        \"Looks like CORS might be the problem.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/userlogin1/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken) {\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n\r\n        const now = Math.ceil(Date.now() / 1000);\r\n\r\n        if (tokenParts.exp > now) {\r\n          try {\r\n            const response = await axiosInstance.post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            });\r\n\r\n            localStorage.setItem(\"access_token\", response.data.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.data.refresh_token);\r\n\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n            originalRequest.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n\r\n            return axiosInstance(originalRequest);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          localStorage.clear();\r\n          window.location.href = \"/userlogin2/\";\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n        localStorage.clear();\r\n        window.location.href = \"/userlogin3/\";\r\n      }\r\n    }\r\n\r\n    if (error.response.status === 401) {\r\n      localStorage.clear();\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","//components\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//dependencias\r\nimport useUser from '../../hooks/useUser'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n    textTransform:'capitalize'\r\n  },\r\n}));\r\n\r\n/**\r\n * Navbar para el header\r\n * @returns Navbar para el header, dependiendo si esta logeado se retorna un componente diferente\r\n */\r\nconst Navbar = () => {\r\n  const {isLogged, logout } = useUser()\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * Función para ejecutar logout del hook useUser.\r\n   * @param {*} e \r\n   */\r\n  const handleClick = e => {\r\n    e.preventDefault()\r\n    logout()\r\n  }\r\n\r\n  return (      \r\n      isLogged ?\r\n      <>\r\n      <Button\r\n        href=\"#\"\r\n        variant=\"outlined\"\r\n        sx={{ color: '#ffff' }} \r\n        className={classes.link}\r\n        component={NavLink}\r\n        to=\"/Perfil\"\r\n      >\r\n        <AccountCircleIcon fontSize=\"small\"></AccountCircleIcon> \r\n        &nbsp; \r\n      </Button>\r\n      <Button\r\n        href=\"#\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.link}\r\n        component={NavLink}\r\n        to='#' onClick={handleClick}\r\n      >\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n        <LogoutIcon fontSize=\"small\"></LogoutIcon>\r\n        &nbsp; \r\n        </div>\r\n      </Button>\r\n      </>\r\n      :\r\n      <>\r\n      <NavLink className={classes.link} component={NavLink} to=\"/\">\r\n          <Button color=\"primary\"\r\n          variant=\"outlined\"\r\n          sx={{ color: '#fff' }} >\r\n            INICIO\r\n          </Button>\r\n      </NavLink>\r\n      \r\n      <NavLink className={classes.link} component={NavLink} to=\"/Webinars\">\r\n          <Button color=\"primary\"\r\n          variant=\"outlined\"\r\n          sx={{ color: '#fff' }} >\r\n            WEBINARS\r\n          </Button>\r\n      </NavLink>\r\n     \r\n      <Button\r\n        href=\"#\"\r\n        color=\"primary\"\r\n        variant=\"outlined\"\r\n        className={classes.link}\r\n        component={NavLink}\r\n        to=\"/loginuser\">\r\n        <AccountCircleIcon fontSize=\"small\"></AccountCircleIcon> \r\n\r\n        &nbsp; INGRESAR\r\n      </Button>\r\n      </>    \r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import {useState,useEffect} from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  '& .MuiSwitch-switchBase': {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: 'translateX(5px)',\r\n    '&.Mui-checked': {\r\n      color: '#fff',\r\n      transform: 'translateX(5px)',\r\n      '& .MuiSwitch-thumb:before': {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\r\n    width: 32,\r\n    height: 32,\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        '#fff',\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n\r\n/**\r\n * \r\n * @returns Componente boton para realizar el cambio de tema en la aplicación (noche-dia)\r\n */\r\nexport default function CustomizedSwitches() {\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    const handleChange = (e) => setTheme(e.target.checked ? 'light' : 'dark')\r\n\r\n    useEffect(() => {\r\n        document.getElementById('carousel')\r\n        document.body.setAttribute('data-theme', theme);\r\n    }, [theme]);\r\n\r\n    return (\r\n        <>\r\n        {/* <FormControlLabel\r\n            control={<MaterialUISwitch sx={{ m: 1 }}  />}\r\n            label=\"Temas\"\r\n            onChange={handleChange} checked={theme === 'light'}\r\n        /> */}\r\n        </>\r\n    );\r\n}\r\n","//components\r\nimport { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {  useContext } from \"react\";\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\n//dependencias\r\nimport useUser from '../../hooks/useUser'\r\nimport Context from \"../context/UserContext\";\r\nimport NotificationsDropdown from './../notifications/notifications_navbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    margin: theme.spacing(3, 1),\r\n    color: \"black\",\r\n  },\r\n}));\r\n/**\r\n * Componente con botones para el nabvar\r\n * @returns Botones para el nabvar dependiendo si es admin o no\r\n */\r\n\r\nconst NavbarAd = () => {\r\n  \r\n  const { isLogged } = useUser()\r\n  const { user } = useContext(Context)\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const handleNotificationIconClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const dummyNotifications = [\r\n    { id: 1, text: 'Notificación 1' },\r\n    { id: 2, text: 'Notificación 2' },\r\n    { id: 3, text: 'Notificación 3' },\r\n  ];\r\n  return (\r\n    <>\r\n      {isLogged && user.is_superuser  &&\r\n      <>\r\n      {/* aqui es necesario ingresar restablecer  */}\r\n        <NavLink className={classes.link} component={NavLink} to=\"/\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            INICIO\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Videos\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            VIDEOS\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Series\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            SERIES\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Casos\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            CASOS\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Webinars\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            WEBINARS\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Ajustes\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            AJUSTES\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/VideoForm\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            AGREGAR VIDEO\r\n          </Button>\r\n        </NavLink>\r\n      </>\r\n      }\r\n      {isLogged && !user.is_superuser  &&\r\n        <div className=''>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            INICIO\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Videos\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            VIDEOS\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Series\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            SERIES\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Casos\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            CASOS\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.link} component={NavLink} to=\"/Webinars\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            WEBINARS\r\n          </Button>\r\n        </NavLink>\r\n        </div>\r\n      } \r\n      {!isLogged &&\r\n        <div className=''>\r\n        \r\n        <NavLink className={classes.link} component={NavLink} to=\"/Webinars\">\r\n          <Button sx={{ color: '#fff' }} >\r\n            WEBINARS\r\n          </Button>\r\n        </NavLink>\r\n        </div>\r\n      } \r\n    </>\r\n  )\r\n}  \r\n\r\nexport default NavbarAd;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport Switch from \"../../Switch\";\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n//componentes\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    margin: theme.spacing(1, 1),\r\n    color: \"black\",\r\n  },\r\n}));\r\n/**\r\n * Componente con los botones para el sidebar \r\n * @param {*} props \r\n * @returns Botones para el sidebar dependiendo si es admin o no\r\n */\r\nconst DrawerS = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n    if (props.user.is_superuser) {\r\n        return (\r\n            <Box onClick={props.handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n              <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/\">\r\n              <Button sx={{ color: '#fff' }} >\r\n               <LazyLoadImage effect=\"blur\"  src={'https://sccotview.com/media/videos/logoSCCOTView.png'} alt=\"\" className=\"\" style={{ width:\"220px\", objectFit:'contain',minHeight:\"2px\" }} />\r\n              </Button>\r\n              </NavLink>\r\n              <Divider />\r\n              <Box\r\n                display=\"flex\"\r\n                mt={2}\r\n                mr={2}\r\n                justifyContent=\"center\"\r\n                fontWeight={500}\r\n              >\r\n                <Typography component={\"span\"} variant={\"body2\"}>\r\n                  <Box ml={2} fontWeight=\"fontWeightLight\" fontSize={14}>\r\n                    <Switch></Switch> \r\n                  </Box>\r\n                  <Box ml={2} fontWeight=\"fontWeightLight\" fontSize={14} className=\"mb-4\">\r\n                    {props.user.name}\r\n                  </Box>\r\n                  \r\n                  <div className=\"d-flex flex-column\">\r\n\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      INICIO\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Videos\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      VIDEOS\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Series\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      SERIES\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Casos\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      CASOS\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Ajustes\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      AJUSTES\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/VideoForm\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      AGREGAR VIDEO\r\n                    </Button>\r\n                  </NavLink>\r\n                  </div>\r\n\r\n                </Typography>        \r\n              </Box>\r\n            </Box>\r\n            );\r\n    } else {\r\n        return (\r\n          <Box onClick={props.handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n              <div >\r\n                <img  src=\"https://sccotview.com/media/videos/logoSCCOTView.png\" style={{ width: \"170px\", objectFit:'contain',minHeight:\"2px\"}} />\r\n              </div>\r\n              <Divider />\r\n              <Box\r\n                display=\"flex\"\r\n                mt={2}\r\n                mr={2}\r\n                flexDirection={\"column\"}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"center\"}\r\n                fontWeight={500}\r\n              >\r\n                <Typography component={\"span\"} variant={\"body2\"}>\r\n                  <Box ml={2} fontWeight=\"fontWeightLight\" fontSize={14}>\r\n                    <Switch></Switch> \r\n                  </Box>\r\n                  <Box ml={2} fontWeight=\"fontWeightLight\" fontSize={14} className=\"my-4\">\r\n                    <h6>{props.user.name_odoo}</h6>\r\n                  </Box>\r\n                  <div className=\"d-flex flex-column\">\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      INICIO\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Videos\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      VIDEOS\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Series\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      SERIES\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Casos\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      CASOS\r\n                    </Button>\r\n                  </NavLink>\r\n                  <NavLink className={classes.link} component={NavLink} onClick={props.handleDrawerToggle} to=\"/Webinars\">\r\n                    <Button sx={{ color: '#fff' }} >\r\n                      WEBINARS\r\n                    </Button>\r\n                  </NavLink>\r\n                  \r\n                  </div>\r\n\r\n                </Typography>        \r\n              </Box>\r\n            </Box>\r\n            );\r\n    }\r\n    \r\n};\r\n\r\nexport default DrawerS ;","import { useState,useEffect,Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//dependencies\r\nimport NavbarAd from \"./navbarAd\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport DrawerS from \"./drawer\";\r\nimport Switch from \"../../Switch\";\r\n//componentes\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Toolbar,\r\n  Typography,\r\n  Drawer,\r\n  AppBar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../../styles/styles.css'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  \r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  \r\n}));\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: \"flex-end\",\r\n}));\r\n\r\nconst drawerWidth = 350;\r\n/**\r\n * Componente para nabvar y sidebar \r\n * @param {*} props \r\n * @returns Componente para nabvar y sidebar \r\n */\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <DrawerS \r\n      user = {props.user}\r\n      handleDrawerToggle = {handleDrawerToggle}\r\n    >\r\n    </DrawerS>\r\n  );\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    \r\n    <Fragment>\r\n    \r\n    \r\n      <Box>\r\n        <AppBar \r\n          position=\"relative\"\r\n          color=\"default\"\r\n          component=\"nav\"\r\n          className={classes.appBar}\r\n        >\r\n          <Toolbar >\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              sx={{ mr: 2, display: { sm: 'none' } }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              className={classes.toolbarTitle}\r\n              sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n            >\r\n                <div className=\"\">\r\n                <a  component={NavLink} href=\"/\">\r\n                  <LazyLoadImage effect=\"blur\" src={'https://sccotview.com/media/videos/logoSCCOTView.png'} alt=\"\" className=\"\" style={{ width: \"170px\", objectFit:'contain',minHeight:\"2px\" }} />\r\n                </a>\r\n                  \r\n                </div>\r\n           \r\n            </Typography>\r\n            <div className=\"containerLinksNavbar\">\r\n                <NavbarAd></NavbarAd>\r\n                <Switch></Switch> \r\n            </div>\r\n                         \r\n            <Navbar></Navbar>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box component=\"nav\"> \r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen} \r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            sx={{\r\n              display: { xs: 'flex', sm: 'none' },\r\n              '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n            }}\r\n            >\r\n            <DrawerHeader>\r\n              <IconButton onClick={handleDrawerToggle}>✖</IconButton>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            {drawer}\r\n          </Drawer>\r\n        </Box>        \r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import  { useEffect, useState, Fragment } from \"react\";\r\nimport Navbar from \"./navbar/navbar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Switch from \"../Switch\"\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport Context from \"./context/UserContext\";\r\nimport useUser from '../hooks/useUser'\r\nimport Sidebar from \"./navbar/sidebarUser\";\r\nimport { ListCategorias } from \"../services/category\";\r\n//componentes\r\nimport {  Toolbar, Typography, AppBar,Box } from \"@material-ui/core\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderBottom: `4px solid ${theme.palette.divider}`,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\n/**\r\n * Componente Header\r\n * @returns Componentes de header, si está logeado se envia sidebar\r\n */\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const { isLogged } = useUser()\r\n\r\n  const [open] = useState(false);\r\n  const [categories, setCategories] = useState(\"\");\r\n  const { user } = useContext(Context)\r\n\r\n  /**\r\n   * Función para enviar la consulta de categorias al backend\r\n   */\r\n  const listCategorias = async () => {\r\n    try {\r\n      const res = await ListCategorias();\r\n      setCategories(res);\r\n    } catch (error) {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * hook para ejecutar la función listCategorias solo si está logeado.\r\n   */\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      listCategorias();\r\n      \r\n    }\r\n  }, [isLogged]);\r\n\r\n  if (isLogged && categories) {\r\n    return <Sidebar user={user} categories={categories} />;\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Box>\r\n          <AppBar\r\n            position=\"relative\"\r\n            open={open}\r\n            color=\"default\"\r\n            elevation={0}\r\n            className={classes.appBar}\r\n          >\r\n            <Toolbar className={classes.toolbar}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.toolbarTitle}\r\n              >\r\n                <a  component={NavLink} href=\"/\">\r\n                \r\n                  <LazyLoadImage effect=\"blur\"  src={'https://sccotview.com/media/videos/logoSCCOTView.png'} alt=\"\" className=\"\" style={{ width:\"170px\", objectFit:'contain',minHeight:\"2px\" }} />\r\n                </a>\r\n                 \r\n              </Typography>\r\n              <Switch></Switch> \r\n              <Navbar></Navbar>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","import { useCallback, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Context from \"../components/context/UserContext\";\r\nimport { Login } from \"../services/auth\";\r\nimport axiosInstance from \"../axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/**\r\n * Hook para realizar login y logout \r\n * @returns Funciones necesarias para login y logout.\r\n */\r\nexport default function useUser() {\r\n  const history = useNavigate();\r\n  const { jwt, setUSER, setJWT } = useContext(Context);\r\n  const [state, setState] = useState({ loading: false, error: false });\r\n  const [errLogin, setErrLogin] = useState('');\r\n\r\n  /**\r\n   * Función para validar con el backend si las credenciales son correctas.\r\n   */\r\n  const login = useCallback(\r\n    ({ username, password }) => {\r\n      setState({ loading: true, error: false });\r\n      Login({ username, password }).then(\r\n        (res) => {\r\n          // Establece las cookies\r\n          window.localStorage.setItem(\"access_token\", res.data.access_token)\r\n          window.localStorage.setItem(\"refresh_token\", res.data.refresh_token)\r\n          window.localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n\r\n          axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + localStorage.getItem(\"access_token\");\r\n          setState({ loading: false, error: false })\r\n          setJWT(res.data.access_token)\r\n          setUSER(res.data.user)\r\n        })\r\n        .catch((err) => {\r\n          // Elimina las cookies en caso de error\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          setState({ loading: false, error: true })\r\n          console.log(err)\r\n          setErrLogin(err.response.data.error || err.response.data.detail )\r\n        });\r\n    }, [setJWT, setUSER]);\r\n\r\n  /**\r\n   * Función para realizar el logout.\r\n   */\r\n  const logout = useCallback(() => {\r\n    axiosInstance.post(\"logout/\", {\r\n        refresh_token: localStorage.getItem(\"refresh_token\"),\r\n      });\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    localStorage.removeItem(\"user\");\r\n  \r\n    axiosInstance.defaults.headers[\"Authorization\"] = null;\r\n    setJWT(null);\r\n    history(\"/\");\r\n    window.location.reload();\r\n  }, [history, setJWT]);\r\n\r\n  return {\r\n    isLogged: Boolean(jwt),\r\n    isLoginLoading: state.loading,\r\n    hasLoginError: state.error,\r\n    login,\r\n    logout,\r\n    errLogin\r\n\r\n  };\r\n}","import axios from \"axios\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar login\r\n * @param {formdata} credentials \r\n * @returns data enviada desde el backend\r\n */\r\nexport const Login = async (credentials) => {\r\n  \r\n  const data = await axios.post(API_URL + \"login/\", credentials);\r\n \r\n  console.log(credentials);\r\n  return data;\r\n};\r\n/**\r\n * Función para consultar un usuario en específico.\r\n * @param {pk} userID\r\n * @returns data enviada desde el backend\r\n */\r\nexport const getUser = async (userID) => {\r\n  const response = await axiosInstance.get(`${API_URL}users/${userID}`);\r\n  if (response.status === 200) {\r\n    console.log(response)\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar la imagen de perfil de un usuario.\r\n * @param {id} userID \r\n * @param {img} updateImg \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateImage = async (userID,updateImg) => {\r\n  const response = await axiosInstance.patch(`${API_URL}users/${userID}/`,updateImg);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(API_URL);\r\n    return response.data; // no es necesario el await aquí\r\n  } catch (error) {\r\n    console.error(\"Error en ListCategorias:\", error);\r\n    throw error; // para que el componente lo capture\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["API_URL","PUBLIC_ENDPOINTS","axiosInstance","localStorage","getItem","axios","baseURL","timeout","headers","accept","interceptors","request","use","config","token","isPublic","some","endpoint","url","includes","response","error","originalRequest","console","warn","Promise","reject","status","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","exp","post","refresh","setItem","access_token","refresh_token","defaults","log","clear","useStyles","makeStyles","theme","link","margin","spacing","textTransform","useUser","isLogged","logout","classes","Button","variant","sx","color","className","component","NavLink","to","AccountCircle","fontSize","onClick","e","preventDefault","Logout","styled","Switch","width","height","padding","transform","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","CustomizedSwitches","useState","useEffect","document","getElementById","body","setAttribute","user","useContext","Context","is_superuser","props","Box","handleDrawerToggle","textAlign","LazyLoadImage","effect","src","alt","style","objectFit","minHeight","Divider","display","mt","mr","justifyContent","fontWeight","Typography","ml","name","flexDirection","alignItems","name_odoo","appBar","borderBottom","divider","toolbarTitle","flexGrow","paper","DrawerHeader","mixins","toolbar","mobileOpen","setMobileOpen","drawer","container","undefined","Fragment","AppBar","Toolbar","IconButton","edge","sm","Menu","xs","Drawer","open","onClose","ModalProps","keepMounted","boxSizing","categories","setCategories","listCategorias","ListCategorias","res","elevation","noWrap","history","useNavigate","jwt","setUSER","setJWT","loading","state","setState","errLogin","setErrLogin","login","useCallback","username","password","Login","then","stringify","catch","err","removeItem","detail","reload","Boolean","isLoginLoading","hasLoginError","credentials","getUser","userID","updateImage","updateImg","RegisterCategory","newCategory","updateCategory","id","updCategory"],"sourceRoot":""}