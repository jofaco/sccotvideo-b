{"version":3,"file":"static/js/634.c8c4d228.chunk.js","mappings":"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","sources":["axios.js","components/especialidades/palabraclaveModal.js","components/videos/videoForm.js","hooks/useModal.js","services/category.js","services/especialidad.js","services/palabraClave.js","services/serie.js","services/subEspecialidad.js","services/temporada.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalPalabraClave = ({ handleClose, show, palabraclave_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!palabraclave_id) {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.RegisterPalabraClave(formData);\r\n      } else {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.updatePalabraClave(palabraclave_id, formData);        \r\n      }\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      props.setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" ><h2>{palabraclave_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"palabraClave\"\r\n            value={newData.palabraClave || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {palabraclave_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalPalabraClave;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n//import Select from \"react-select\";\r\nimport * as VideoServer from \"../../services/videoServer\";\r\nimport * as CategoriaServer from \"../../services/category\";\r\nimport * as EspecialidadServer from \"../../services/especialidad\";\r\nimport * as SubEspecialidadServer from \"../../services/subEspecialidad\";\r\nimport * as PalabraClaveServer from \"../../services/palabraClave\";\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport PalabrasClavesModal from \"../especialidades/palabraclaveModal\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n\r\n//components\r\n//import Select from \"@mui/material/Select\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Swal from \"sweetalert2\";\r\n/**\r\n * Función para realizar las operaciones necesarias para crear o editar un video. \r\n * @returns Componente con el formulario para Agregar nuevo video o editar un video.\r\n */\r\nconst VideoForm = () => {\r\n  const history = useNavigate();\r\n  const params = useParams();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const initialState = {\r\n    id: 0,\r\n    code_esp: \"\",\r\n    code_engl: \"\",\r\n    title_espanol: \"\",\r\n    title_english: \"\",\r\n    title_cap_esp: \"\",\r\n    title_cap_english: \"\",\r\n    description_esp: \"\",\r\n    description_english: \"\",\r\n    tipe_of_video: 1,\r\n    languages: [1],\r\n    categorias: [1],\r\n    especialidades: [1],\r\n    subEspecialidades: [1],\r\n    palabrasClaves: [1],\r\n    serie: 0,\r\n    temporada: 0,\r\n  };\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [video, setVideo] = useState(initialState);\r\n  const [categorias, setCategorias] = useState();\r\n  const [especialidades, setEspecialidades] = useState();\r\n  const [subEspecialidades, setSubEspecialidades] = useState();\r\n  const [palabrasClaves, setPalabrasClaves] = useState();\r\n  const [series, setSeries] = useState();\r\n  const [temporadas, setTemporadas] = useState();\r\n  const [isSerieSelectEnabled, setIsSerieSelectEnabled] = useState(false);\r\n  const [isTempSelectEnabled, setIsTempSelectEnabled] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const initialFormData = {palabrasClaves:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n\r\n  const optionesTipoVideo = [\r\n    { value: '1', label: 'Video' },\r\n    { value: '2', label: 'Serie' },\r\n    { value: '3', label: 'Casos' },\r\n  ];\r\n\r\n  const handleSelectTypeVideo = (selectedValue, fielName) => {\r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 2){\r\n      setIsSerieSelectEnabled(true);\r\n    }\r\n    else{\r\n      setIsSerieSelectEnabled(false)\r\n      setIsTempSelectEnabled(false)\r\n      \r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza el estado del idioma seleccionado en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleSelectIdioma = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n\r\n    let value = Array.from(target.selectedOptions, (option) => option.value);\r\n    setVideo({ ...video, [name]: value });\r\n  };\r\n  /**\r\n   * Actualiza el estado de la categoria seleccionada en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const registrar = () =>{\r\n    /* AQUI CODE */\r\n  setId(null);\r\n  setCurrentItem({});\r\n  setFormData({palabrasClaves:\"\"});\r\n  handleShow(true)\r\n}\r\n  const handleSelectCategoryEspSub = (selectedValues, fielName) => {\r\n    let value = Array.from(selectedValues, (option) => option.value);\r\n    setVideo({ ...video, [fielName]: value });\r\n  };\r\n  //REVISAR AQUI FALTARIA ESTO EN PALABRAS CLAVES Y CONSIGUIENTES\r\n\r\n  const handleSelectSerie = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 0){\r\n      setIsTempSelectEnabled(false);\r\n    }\r\n    else{\r\n      setIsTempSelectEnabled(true)\r\n    }\r\n  };\r\n  const handleSelectTem = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n  }\r\n  /**\r\n   * Actualiza el estado de demás campos seleccionados en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    if (name === \"image\") {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n    else if (name === \"min_image\"){\r\n      setSelectedFile2(e.target.files[0]);\r\n    }\r\n    else {\r\n      setVideo({ ...video, [name]: e.target.value });\r\n    }\r\n  };\r\n  /**\r\n   * Guarda la información llenada en el formulario y la envia al backend para su registro o actualización.\r\n   * Al finalizar si el proceso es exitoso redirecciona al index.\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let featured_image;\r\n    let min_image;\r\n    const formData = new FormData();\r\n\r\n    if (selectedFile) {\r\n      featured_image = selectedFile;\r\n      formData.append(\"featured_image\", featured_image);\r\n\r\n    }\r\n    if (selectedFile2) {\r\n      min_image = selectedFile2;\r\n      formData.append(\"min_image\", min_image);\r\n    }\r\n\r\n    try {\r\n      //let res;\r\n      formData.append(\"code_esp\", video.code_esp);\r\n      formData.append(\"code_engl\", video.code_engl);\r\n      formData.append(\"title_espanol\", video.title_espanol);\r\n      formData.append(\"title_english\", video.title_english);\r\n      formData.append(\"title_cap_esp\", video.title_cap_esp);\r\n      formData.append(\"title_cap_english\", video.title_cap_english);\r\n      formData.append(\"description_esp\", video.description_esp);\r\n      formData.append(\"description_english\", video.description_english);\r\n      formData.append(\"tipe_of_video\", video.tipe_of_video);\r\n      /* formData.append(\"temporada\", video.temporada);\r\n      formData.append(\"serie\", video.serie); */\r\n\r\n      if(isSerieSelectEnabled){\r\n        formData.append(\"temporada\", video.temporada);\r\n        formData.append(\"serie\", video.serie); \r\n      }\r\n    \r\n     \r\n\r\n\r\n      for (let i = 0; i <= video.languages.length - 1; i++) {\r\n        formData.append(\"languages\", video.languages[i]);\r\n      }\r\n      for (let i = 0; i <= video.categorias.length - 1; i++) {\r\n        formData.append(\"categorias\", video.categorias[i]);\r\n      }\r\n      for (let i = 0; i <= video.especialidades.length - 1; i++) {\r\n        formData.append(\"especialidad\", video.especialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.subEspecialidades.length - 1; i++) {\r\n        formData.append(\"subEspecialidad\", video.subEspecialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.palabrasClaves.length - 1; i++) {\r\n        formData.append(\"palabraClave\", video.palabrasClaves[i]);\r\n      }\r\n    \r\n      let res;\r\n      if (!params.id) {\r\n        res = await VideoServer.RegisterVideo(formData);\r\n      } else {\r\n        res = await VideoServer.UpdateVideo(params.id, formData);        \r\n      }\r\n      Swal.fire({\r\n        title: res.message,\r\n        icon: \"success\"\r\n      }).then(res=>{\r\n        history(\"/\");\r\n        window.location.reload();\r\n      })\r\n      } catch (error) {\r\n        console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * Función para obtener el video con sus campos a editar.\r\n   * @param {*} videoID \r\n   */\r\n  const getVideo = async (videoID) => {\r\n    try {\r\n      const res = await VideoServer.getVideoDT(videoID);\r\n      const data = await res;\r\n      if(isSerieSelectEnabled){\r\n\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada,\r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada\r\n        });\r\n      }else{\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          palabrasClaves,\r\n         \r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          palabrasClaves,\r\n          \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener todas las categorias en la base de datos.\r\n   */\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await CategoriaServer.ListCategorias();\r\n      const data = await res;\r\n      setCategorias(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getEspecialidades = async () => {\r\n    try {\r\n      const res = await EspecialidadServer.ListEspecialidades()\r\n      const data = await res;\r\n      setEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getSubEspecialidades = async () => {\r\n    try {\r\n      const res = await SubEspecialidadServer.ListSubEspecialidades()\r\n      const data = await res;\r\n      setSubEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getPalabraClaves = async () => {\r\n    try {\r\n      const res = await PalabraClaveServer.ListPalabrasClaves()\r\n      const data = await res;\r\n      setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n \r\n  const getSeries = async () => {\r\n    try {\r\n      const res = await SerieServer.ListSeries()\r\n      const data = await res;\r\n      setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getTemporadas = async () => {\r\n    try {\r\n      const res = await TemporadaServer.ListTemporadas()\r\n      const data = await res;\r\n      setTemporadas(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const obtenerVideoEnviar = () => {\r\n    console.log(video);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategorias();\r\n    getEspecialidades();\r\n    getSubEspecialidades();\r\n    getPalabraClaves();\r\n    getSeries();\r\n    getTemporadas();\r\n    if (params.id) {\r\n      getVideo(params.id);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (series) {\r\n    var optionsSeries = series.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.serie,\r\n    }));\r\n  }\r\n  if (temporadas) {\r\n    var optionsTemporadas = temporadas.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.temporada,\r\n    }));\r\n  }\r\n\r\n  if (categorias && especialidades && subEspecialidades && palabrasClaves ) {\r\n    const optionsCategorias = categorias.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.categoria,\r\n    }));\r\n    const optionsEspecialidades = especialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.especialidad,\r\n    }));\r\n    const optionsSubEspecialidades = subEspecialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.subEspecialidad,\r\n    }));\r\n    const optionsPalabrasClaves = palabrasClaves.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.palabraClave,\r\n    }));\r\n \r\n    return (\r\n      <Container>\r\n      <div className=\"col-md-9 mx-auto\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"tipeOfVideo\">\r\n              Tipo de video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionesTipoVideo}\r\n              options={optionesTipoVideo}\r\n              onChange={(selectedValue) => handleSelectTypeVideo(selectedValue, 'tipe_of_video')}\r\n            />\r\n          </div>\r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"tipeOfVideo\">\r\n              Serie\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={video.serie || 0}             \r\n              options={optionsSeries}\r\n              onChange={(selectedValue) => handleSelectSerie(selectedValue, 'serie')}\r\n              />\r\n          </div>\r\n          )}\r\n          {isTempSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\" htmlFor=\"otroCampo\">\r\n                Temporada\r\n              </label>\r\n              <Select\r\n              className=\"form-select\"\r\n              defaultValue={video.temporada || 0}             \r\n              options={optionsTemporadas}\r\n              onChange={(selectedValue) => handleSelectTem(selectedValue, 'temporada')}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"languages\">\r\n              Idiomas del video\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"languages\"\r\n              name=\"languages\"\r\n              value={video.languages || null}\r\n              onChange={handleSelectIdioma}\r\n              aria-label=\"languages\"\r\n              multiple={true}\r\n              required\r\n            >\r\n              <option value=\"1\">Español</option>\r\n              <option value=\"2\">Ingles</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"categorias\">\r\n              Categorias del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsCategorias}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'categorias')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"Especialidades\">\r\n              Especialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsEspecialidades}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'especialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"SubEspecialidades\">\r\n              SubEspecialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsSubEspecialidades}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'subEspecialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"PalabrasClaves\">\r\n              PalabrasClaves del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsPalabrasClaves}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'palabrasClaves')}\r\n              isMulti\r\n            />\r\n             <div>\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"submit\"\r\n                  onClick={()=>registrar()}>\r\n                    Registrar Palabras Claves\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"codeEsp\">\r\n              Código vimeo del video en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"code_esp\"\r\n              name=\"code_esp\"\r\n              value={video.code_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Código del video en español\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"codeEngl\">\r\n              Código vimeo del video en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"codeEngl\"\r\n              name=\"code_engl\"\r\n              value={video.code_engl || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Código del video en ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"titleEspanol\">\r\n              Titulo en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEspanol\"\r\n              name=\"title_espanol\"\r\n              value={video.title_espanol}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en español\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"titleEnglish\">\r\n              Titulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEnglish\"\r\n              name=\"title_english\"\r\n              value={video.title_english}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en Ingles\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          \r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n          <label className=\"form-label\" htmlFor=\"titleCapEsp\">\r\n            Titulo del capitulo en Español\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"titleCapEsp\"\r\n            name=\"title_cap_esp\"\r\n            value={video.title_cap_esp || \"\"}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Titulo del capitulo en Español\"\r\n            maxLength=\"150\"\r\n          />\r\n        </div>\r\n          )}\r\n           {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"titleCapEnglish\">\r\n              Titulo del capitulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleCapEnglish\"\r\n              name=\"title_cap_english\"\r\n              value={video.title_cap_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo del capitulo en Ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          )}\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"descriptionEsp\">\r\n              Descripción en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEsp\"\r\n              name=\"description_esp\"\r\n              value={video.description_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en español\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"descriptionEnglish\">\r\n              Descripción en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEnglish\"\r\n              name=\"description_english\"\r\n              value={video.description_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en ingles\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"featuredImage\">\r\n              Imagen para banner\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"featuredImage\"\r\n              name=\"image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para banner\"              \r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"minImage\">\r\n              Imagen para email\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"min_image\"\r\n              name=\"min_image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para Email\"                \r\n              />\r\n          </div>\r\n            <input  type=\"button\" onClick={obtenerVideoEnviar} value=\"Ver log\"/>\r\n          <div className=\"d-grid\">\r\n            {params.id ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Update\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <PalabrasClavesModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          palabrasclaves_id ={id}\r\n          currentItem={currentItem}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></PalabrasClavesModal>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VideoForm;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/especialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterEspecialidad = async (newEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getEspecialidad = async (especialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${especialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateEspecialidad = async(id,updEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/palabrasclaves/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListPalabrasClaves = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getPalabraClave = async (PalabraClaveID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${PalabraClaveID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Función para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/subespecialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSubEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSubEspecialidad = async (newSubEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newSubEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSubEspecialidad = async (SubespecialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${SubespecialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateSubEspecialidad = async(id,updSubEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSubEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Función para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  console.log(\"listar videos de la serie\" + temporadaId);\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/`);\r\n  console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","palabraclave_id","setFormData","currentItem","newData","props","handleSubmit","e","preventDefault","formData","FormData","append","palabraClave","palabraClaveServer","res","setPalabrasClaves","classes","onHide","contentClassName","cloud","centered","closeButton","id","onSubmit","className","controlId","type","rows","name","value","onChange","target","variant","onClick","history","useNavigate","params","useParams","animatedComponents","makeAnimated","useModal","handleShow","useState","selectedFile","setSelectedFile","selectedFile2","setSelectedFile2","code_esp","code_engl","title_espanol","title_english","title_cap_esp","title_cap_english","description_esp","description_english","tipe_of_video","languages","categorias","especialidades","subEspecialidades","palabrasClaves","serie","temporada","video","setVideo","setCategorias","setEspecialidades","setSubEspecialidades","series","setSeries","temporadas","setTemporadas","isSerieSelectEnabled","setIsSerieSelectEnabled","isTempSelectEnabled","setIsTempSelectEnabled","setId","setCurrentItem","optionesTipoVideo","label","handleSelectCategoryEspSub","selectedValues","fielName","Array","from","option","handleInputChange","files","featured_image","min_image","i","length","VideoServer","Swal","title","message","icon","reload","getVideo","videoID","getCategorias","CategoriaServer","getEspecialidades","EspecialidadServer","getSubEspecialidades","SubEspecialidadServer","getPalabraClaves","PalabraClaveServer","getSeries","SerieServer","getTemporadas","TemporadaServer","useEffect","optionsSeries","map","opcion","optionsTemporadas","optionsCategorias","categoria","optionsEspecialidades","especialidad","optionsSubEspecialidades","subEspecialidad","optionsPalabrasClaves","htmlFor","defaultValue","options","selectedValue","handleSelectTypeVideo","handleSelectSerie","handleSelectTem","selectedOptions","multiple","required","closeMenuOnSelect","components","isClearable","isMulti","alignItems","color","placeholder","maxLength","palabrasclaves_id","initialValue","setShow","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","ListEspecialidades","RegisterEspecialidad","newEspecialidad","updateEspecialidad","updEspecialidad","ListPalabrasClaves","RegisterPalabraClave","newPalabraClave","updatePalabraClave","updPalabraClave","ListSeries","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListSubEspecialidades","RegisterSubEspecialidad","newSubEspecialidad","updateSubEspecialidad","updSubEspecialidad","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada","ListVideos","ListPeliculas","ListVideosPorTemporada","temporadaId","ListCasos","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}