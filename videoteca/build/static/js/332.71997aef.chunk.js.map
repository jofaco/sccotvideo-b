{"version":3,"file":"static/js/332.71997aef.chunk.js","mappings":"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","sources":["components/videos/videoListUser.js","components/videos/series.js","paginas/Series.js","services/serie.js","services/temporada.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {  useContext } from \"react\";\r\n\r\n//components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n//dependencies\r\nimport VideosItem from \"./videosItem\";\r\nimport VideosCategoriaFila from \"./videosCategoriaFila\";\r\nimport * as HistorialUserServer from \"../../services/historialUser\";\r\nimport * as PreferenciasUserServer from \"../../services/preferenciasUser\";\r\nimport Context from \"../context/UserContext\";\r\nimport VideoListSearch from \"./videoListSearch\";\r\nimport \"../../styles/styles.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"auto\",\r\n  },\r\n  \"@media (max-width: 1248px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  \"@media (max-width: 768px)\": {\r\n    root: {\r\n    },\r\n  },\r\n \r\n}));\r\n\r\n/**\r\n * Componente para organizar en el index los videos en su respectiva categoria, con un buscador y filtro\r\n * @param {*} videos\r\n * @param {*} categories\r\n * @returns Contenedor con los videos y categorias \r\n */\r\nfunction VideosListUser({videos, categories, ...props}) {\r\n  const history = useNavigate();\r\n\r\n  const [histUsers, setHistUsers] = useState(null);\r\n  const [prefUsers, setPrefUsers] = useState(null); \r\n  const [categoriasTotales, setCategoriasTotales] = useState(null);\r\n  const { user } = useContext(Context)\r\n\r\n/**\r\n * FunciÃ³n para obtener el historial de los usuarios.\r\n */\r\n  const getHistorialUsers = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const res = await HistorialUserServer.ListHistorialUser({'user_id':user.id});\r\n      setHistUsers(res);\r\n      //console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n/**\r\n * FunciÃ³n para obtener las preferencias de los usuarios\r\n */\r\n  const getPreferenciasUser = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const res = await PreferenciasUserServer.ListPreferenciaUser({'user_id':user.id});   \r\n      setPrefUsers(res);\r\n     // console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (user) {\r\n\r\n      \r\n      getHistorialUsers();\r\n      getPreferenciasUser();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  /**\r\n   * FunciÃ³n para organizar las categorias de videos dependiendo de las preferencias.\r\n   */\r\n  useEffect(() => {\r\n    \r\n    \r\n    if(prefUsers && categories) {\r\n      let array = [];\r\n      let array1 =[];\r\n      let array2 = [];\r\n\r\n      for (let i = 0; i < prefUsers.length; i++) {\r\n        array1.push(prefUsers[i].categoria);        \r\n      } \r\n      for (let i = 0; i < categories.length; i++) {\r\n        array2.push(categories[i]);        \r\n      }    \r\n      \r\n      for (var i = 0; i < array2.length; i++) {\r\n          var igual=false;\r\n           for (var j = 0; j < array1.length & !igual; j++) {\r\n               if(array2[i].categoria === array1[j] )\r\n                igual=true;\r\n              }\r\n          array = prefUsers\r\n          if(!igual) array.push(array2[i]);\r\n        }\r\n        \r\n      if (array) {\r\n        //aqui se soluciona esto toca hacer que se coloque el prefUser al inicio y no al final\r\n        \r\n        setCategoriasTotales(array);\r\n      }\r\n      else {\r\n        setCategoriasTotales(null);\r\n      }\r\n\r\n    }\r\n  },[categories, prefUsers])\r\n\r\n  /**\r\n   * FunciÃ³n para redireccionar al reproductor del video seleccionado, se crea un nuevo historial de usuario si es la primera vez en ver el video, de lo contrario se envÃ­a este historial como state\r\n   * @param {*} id \r\n   */\r\nconst verVideo = async (id, categories) => {\r\n  //console.log(\"CATListUser2\", categories);\r\n\r\n  // Si no hay usuario logueado y el video es un webinar (categorÃ­a 3), redirige directo sin guardar historial\r\n  if (!user?.id && categories === 13) {\r\n    history(`/seeWebinar/${id}`);\r\n    return;\r\n  }\r\n\r\n  // Si hay usuario logueado o no es webinar, registrar historial y redirigir\r\n  if (user?.id) {\r\n    const formData = new FormData();\r\n    formData.append(\"usuario\", user.id);\r\n    formData.append(\"video\", id);\r\n\r\n    let histUser = null;\r\n\r\n    try {\r\n      // Verificar si ya existe historial para este usuario y video\r\n      const existente = histUsers.find(\r\n        (h) => h.usuario?.id === user.id && h.video === id\r\n      );\r\n\r\n      if (existente) {\r\n        histUser = existente;\r\n      } else {\r\n        const hu = await HistorialUserServer.RegisterHistorialUser(formData);\r\n        histUser = hu.data;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registrando historial:\", error);\r\n    }\r\n\r\n    // Redirigir al video con historial\r\n    history(`/seeVideo/${id}`, { state: histUser });\r\n  } else {\r\n    // Si no hay usuario logueado y no es webinar, redirige directo a ver video sin historial\r\n    history(`/seeVideo/${id}`);\r\n  }\r\n};\r\n\r\n  //console.log(categoriasTotales);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <div id=\"carousel_videos\" className=\" \">\r\n        {/* <h2 className=\"pb-2\">ğ Ãltimos videos</h2> */}\r\n        {/* videos carousel usuario */}\r\n        {/* aca se coloca los ultimos videos traidos del histVisdeoUser */}\r\n        <Carousel  className={classes.root} id=\"carousel\" >\r\n          {videos &&\r\n            props.search(videos).slice(0, 6).map((video,index) => (\r\n              <Carousel.Item key={index} style={{ minHeight: \"400px\" }}>\r\n                <VideosItem\r\n                  key={video.id}\r\n                  video={video}\r\n                  listVideos={props.listVideos}\r\n                  histUsers={histUsers}\r\n                  user={user}\r\n                  verVideo={verVideo}\r\n                />\r\n              </Carousel.Item>\r\n\r\n            ) )}\r\n        </Carousel>\r\n      </div>\r\n     <br></br>\r\n     <br></br>\r\n      \r\n      <div id=\"card_videos\" className=\"mt-5\"   > \r\n      \r\n        {videos && prefUsers ? \r\n          <div className=\"\">\r\n            {/* videos por categorias usuario */}\r\n              {            \r\n              categoriasTotales && props.search2(categoriasTotales).map((element, index) => (\r\n                <>\r\n                { props.search2(categoriasTotales).length <= 1 ?\r\n                  \r\n                <VideoListSearch \r\n                  key= {index}\r\n                  categoria ={element}\r\n                  videos={videos}\r\n                  search={props.search}\r\n                  histUsers = {histUsers}\r\n                  user = {user}\r\n                  verVideo= {verVideo}\r\n                >\r\n                </VideoListSearch>\r\n                :\r\n                <VideosCategoriaFila\r\n                  key= {index}\r\n                  categoria ={element}\r\n                  videos={videos}\r\n                  search={props.search}\r\n                  histUsers = {histUsers}\r\n                  user = {user}\r\n                  verVideo= {verVideo}  \r\n                  >\r\n                </VideosCategoriaFila>\r\n                }   \r\n                  </>\r\n                ))\r\n              }\r\n          </div>\r\n        :\r\n        props.search2(categories).map((element,index) => (\r\n          <div key={index} >\r\n            {props.search2(categories).length <= 1 ?\r\n            <VideoListSearch \r\n            key= {index}\r\n            categoria ={element}\r\n            videos={videos}\r\n            search={props.search}\r\n            histUsers = {histUsers}\r\n            user = {user}\r\n            verVideo= {verVideo}\r\n            >\r\n\r\n            </VideoListSearch>\r\n            :\r\n              <VideosCategoriaFila\r\n                key= {index}\r\n                categoria ={element}\r\n                videos={videos}\r\n                search={props.search}\r\n                histUsers = {histUsers}\r\n                user = {user}\r\n                verVideo= {verVideo}\r\n              >\r\n              </VideosCategoriaFila>\r\n            }\r\n\r\n              </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideosListUser;\r\n","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\n//dependencies\r\nimport { ErrorBoundary } from \"./errorsBoundary\";\r\nimport { ListCategorias } from \"../../services/category\";\r\n\r\nimport SearchComponent from \"./search\";\r\n//import VideosListUser2 from \"./videoListUser2\";\r\nimport VideosListUser from \"./videoListUser\";\r\n\r\n/**\r\n * FunciÃ³n para mostrar los videos con tipo Serie en la pestaÃ±a Series\r\n * @param {object} series\r\n * @returns Componente del buscador y componente lista (Dependendiendo si el usuario es admin o no, se retorna un componente distinto)\r\n */\r\nconst SeriesList = ({series, ...props}) => {\r\n  const contenedorCarousel = document.getElementById(\"carousel\");\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [categories, setCategories] = useState(\"\");\r\n  const [searchParam] = useState([\"title_espanol\"]);\r\n  const [searchParam2] = useState([\"categoria\"]);\r\n\r\n  const [filterParam, setFilterParam] = useState([\"All\"]);\r\n\r\n  const data = localStorage.getItem(\"user\");\r\n  const user = JSON.parse(data);\r\n\r\n  /**\r\n   * FunciÃ³n para traer la lista de categorias \r\n   */\r\n  const listCategorias = async () => {\r\n    try {\r\n      const res = await ListCategorias();\r\n      setCategories(res);\r\n    } catch (error) {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    listCategorias();\r\n  }, []);\r\n  \r\n  \r\n  /**\r\n   * FunciÃ³n para realizar la busqueda mediante el componente search\r\n   * @param {*} series \r\n   * @returns Parametros de la busqueda\r\n   */\r\n  const search = (videos) => {\r\n    if (!query) {\r\n      return videos\r\n    }\r\n    else if (query) {\r\n      contenedorCarousel.style.visibility = 'hidden'\r\n      contenedorCarousel.style.height = '10px';\r\n      const queryLowerCase = query.toLowerCase();\r\n      return videos.filter((dato) => {\r\n        const titleMatches = dato.title_espanol\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(queryLowerCase) > -1;\r\n  \r\n        if (!titleMatches) {\r\n          const descriptionMatches = dato.categorias.some((categoria) =>\r\n          categoria.categoria.toLowerCase().includes(queryLowerCase)\r\n        );\r\n          return descriptionMatches\r\n        }\r\n        return titleMatches\r\n      })\r\n    }\r\n     else {      \r\n      return videos.filter((dato)=>\r\n      dato.categorias.categoria.toString()\r\n      .toLowerCase()\r\n      .indexOf(query.toLowerCase()) > -1\r\n      )\r\n    }\r\n    \r\n  };\r\n  /**\r\n   * FunciÃ³n para realizar el filtro por categoria\r\n   * @param {*} categories \r\n   * @returns Resultado del filtro\r\n   */\r\n  const search2 = (categories) => {\r\n    return categories.filter((item) => {\r\n      if (item.categoria === filterParam) {\r\n        contenedorCarousel.style.visibility = \"hidden\";\r\n        contenedorCarousel.style.height = \"10px\";\r\n\r\n        return searchParam2.some((parameter) => {\r\n          return (\r\n            item[parameter]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n          );\r\n        });\r\n      }\r\n      // eslint-disable-next-line eqeqeq\r\n      else if (filterParam == \"All\") {\r\n        contenedorCarousel.style.visibility = \"visible\";\r\n        contenedorCarousel.style.height = \"100%\";\r\n        return series.filter((item) => {\r\n          return searchParam.some((parameter) => {\r\n            return (\r\n              item[parameter]\r\n                .toString()\r\n                .toLowerCase()\r\n                .indexOf(query.toLowerCase()) > -1\r\n            );\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user && series) {\r\n    if (user.is_superuser) {\r\n      return (\r\n        <div>\r\n          <SearchComponent\r\n            query={query}\r\n            setQuery={setQuery}\r\n            filterParam={filterParam}\r\n            setFilterParam={setFilterParam}\r\n            categories={categories}\r\n          ></SearchComponent>\r\n          <ErrorBoundary>\r\n            <VideosListUser\r\n              videos={series}\r\n              categories={categories}\r\n              search={search}\r\n              search2={search2}\r\n            />\r\n          </ErrorBoundary>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <SearchComponent\r\n          query={query}\r\n          setQuery={setQuery}\r\n          filterParam={filterParam}\r\n          setFilterParam={setFilterParam}\r\n          categories={categories}\r\n        ></SearchComponent>\r\n        <ErrorBoundary>\r\n        <VideosListUser\r\n            videos={series}\r\n            categories={categories}\r\n            search={search}\r\n            search2={search2}\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesiÃ³n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default SeriesList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//import { Link } from 'react-router-dom';\r\n//dependencies\r\nimport * as SerieServer from \"../services/serie\";\r\nimport * as TemporadaServer from \"../services/temporada\";\r\nimport * as VideoServer from \"../services/videoServer\";\r\nimport * as HistorialUserServer from \"../services/historialUser\";\r\n\r\nimport SeriesList from \"../components/videos/series\";\r\nimport VideoLoadingComponent from \"../components/videos/videoLoading\";\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n/**\r\n * Carga todos los videos que sean 'Series' para el modulo Series de la aplicaciÃ³n\r\n */\r\nfunction AppSeries() {\r\n  const VideoLoading = VideoLoadingComponent(SeriesList);\r\n  const history = useNavigate();\r\n  const [histUsers, setHistUsers] = useState();\r\n  // \r\n  const [series, setSeries] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n  const [idSerie, setIdSerie] = useState(0);\r\n  const [temporadas, setTemporadas] = useState([]);\r\n  const [idTemporada, setIdTemporada] = useState(0);\r\n  const [appState, setAppState] = useState({\r\n    loading: true,\r\n    videos: null,\r\n  });\r\n  const [videoCounts, setVideoCounts] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getSeries = async () => {\r\n      // ğ¹ Establecer el estado de carga en true antes de la peticiÃ³n\r\n      setAppState({ loading: true });\r\n  \r\n      try {\r\n        const res = await SerieServer.ListSeries();\r\n        setSeries(res); \r\n      } catch (error) {\r\n        console.error(\"Error cargando series:\", error);\r\n      }\r\n  \r\n      // ğ¹ Una vez que termina la carga, establecemos loading en false\r\n    };\r\n  \r\n    getSeries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getTemporadas = async () => {\r\n      const res = await TemporadaServer.ListTemporadas();\r\n      const temporadas = res;\r\n      setTemporadas(temporadas);\r\n    };\r\n    getTemporadas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchVideoCounts = async () => {\r\n      const counts = {};\r\n      for (const serie of series) {\r\n        counts[serie.id] = await getTotalVideosSerie(serie.id);\r\n      }\r\n      setVideoCounts(counts);\r\n    };\r\n\r\n    if (series.length > 0) {\r\n      fetchVideoCounts();\r\n\r\n    }\r\n  }, [series]);\r\n\r\n  const getHistorialUsers = async () => {\r\n    try {\r\n      const res = await HistorialUserServer.ListHistorial();\r\n      setHistUsers(res);\r\n      setAppState({ loading: false });\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    getHistorialUsers();\r\n  }, []);\r\n\r\n  /**\r\n   * FunciÃ³n para redireccionar al reproductor del video seleccionado, se crea un nuevo historial de usuario si es la primera vez en ver el video, de lo contrario se envÃ­a este historial como state\r\n   * @param {*} id\r\n   */\r\n/*   const entrarVideo = async (id) => {\r\n    const formData = new FormData();\r\n    let histUser;\r\n    let contador = 0;\r\n    formData.append(\"usuario\", user.id);\r\n    formData.append(\"video\", id);\r\n    try {\r\n      for (let index = 0; index < histUsers.length; index++) {\r\n        const element = histUsers[index];\r\n        if (element.usuario.id === user.id && element.video === id) {\r\n          histUser = element;\r\n          contador++;\r\n        }\r\n      }\r\n      if (contador === 0) {\r\n        const hu = await HistorialUserServer.RegisterHistorialUser(formData);\r\n        histUser = hu.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    history(`/seeVideo/${id}`, { state: histUser });\r\n  }; */\r\n\r\n  const entrarTemporada = (temporadaId) => {\r\n    if (!histUsers) {\r\n      console.warn(\"Historial de usuarios aÃºn no ha cargado\");\r\n      return;\r\n    }\r\n    history(`/seeTemporada/${temporadaId}`, { state: histUsers });\r\n  };\r\n  \r\n  \r\n  const entrarSerie = (serieId) => {\r\n    if (!histUsers) {\r\n      console.warn(\"Historial de usuarios aÃºn no ha cargado\");\r\n      return;\r\n    }\r\n    history(`/seeSerie/${serieId}`, { state: histUsers });\r\n    setIdSerie(serieId);\r\n\r\n\r\n  };\r\n \r\n  const getTotalVideosSerie = async (idSerie) => {\r\n    const res = await VideoServer.ListVideos();\r\n   // console.log(res);\r\n    const videos = res.videos.filter(video => video.tipe_of_video == 2 && video.serie == idSerie && video.state == 1);\r\n    //console.log(videos);\r\n    return videos.length;\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div style={{ maxWidth: \"1450px\", minWidth: \"50%\", padding: \"20px\" }}>\r\n        {appState.loading ? (<VideoLoading isLoading={appState.loading} series={series} />) : (\r\n          <>\r\n          <div className=\"d-flex justify-content-end\">\r\n              <button onClick={() => window.history.back()} className=\"btn btn-light mt-4\" value=\"Volver\">Volver</button>\r\n            </div>\r\n            <h2 className=\"px-2 mb-3\">Listado de Series</h2>\r\n            <div className=\"d-flex flex-wrap\">\r\n              {histUsers &&\r\n              series.map((serie, index) => {\r\n                return (\r\n                  <div className=\"border rounded cursorPointer card-width p-2 m-3\" key={index}>\r\n                    <div onClick={() => { entrarSerie(serie.id) }}>\r\n                      {videoCounts[serie.id] > 0 &&\r\n                      <div className=\"d-flex justify-content-end mb-1\"><small> {videoCounts[serie.id] || ''} Videos</small></div>\r\n                      }\r\n                      <LazyLoadImage effect=\"blur\" src={'https://sccotview.com' + serie.featured_image} className=\"rounded mb-2\" alt=\"\" />\r\n                      <h5 className=\"text-capitalize truncate-text\">{serie.serie}</h5>\r\n                      <small className=\"truncate-text mb-0\">{serie.description}</small>\r\n                    </div>\r\n                    <div>\r\n                      {temporadas.map((temporada, index) => {\r\n                        if (serie.id === temporada.serie) {\r\n                          return (\r\n                            <div key={index}>\r\n                              {/* AquÃ­ puedes agregar mÃ¡s contenido de la temporada si es necesario */}\r\n                            </div>\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n              }\r\n            </div>\r\n          </>\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppSeries;\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * FunciÃ³n para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * FunciÃ³n para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["useStyles","makeStyles","theme","root","margin","display","videos","categories","props","history","useNavigate","useState","histUsers","setHistUsers","prefUsers","setPrefUsers","categoriasTotales","setCategoriasTotales","user","useContext","Context","getHistorialUsers","HistorialUserServer","id","res","console","log","getPreferenciasUser","PreferenciasUserServer","useEffect","array","array1","array2","i","length","push","categoria","igual","j","verVideo","formData","FormData","append","histUser","existente","find","h","usuario","video","hu","data","error","state","classes","className","search","slice","map","index","style","minHeight","listVideos","search2","element","series","contenedorCarousel","document","getElementById","query","setQuery","setCategories","searchParam","searchParam2","filterParam","setFilterParam","localStorage","getItem","JSON","parse","listCategorias","ListCategorias","visibility","height","queryLowerCase","toLowerCase","filter","dato","titleMatches","title_espanol","toString","indexOf","categorias","some","includes","item","parameter","is_superuser","fontSize","VideoLoading","VideoLoadingComponent","SeriesList","setSeries","setIdSerie","temporadas","setTemporadas","loading","appState","setAppState","videoCounts","setVideoCounts","getSeries","SerieServer","getTemporadas","TemporadaServer","fetchVideoCounts","counts","serie","getTotalVideosSerie","idSerie","VideoServer","tipe_of_video","maxWidth","minWidth","padding","isLoading","onClick","window","back","value","serieId","warn","LazyLoadImage","effect","src","featured_image","alt","description","temporada","API_URL","ListSeries","axiosInstance","response","status","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada"],"sourceRoot":""}