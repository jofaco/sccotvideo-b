{"version":3,"file":"static/js/526.de8ea25d.chunk.js","mappings":"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","sources":["axios.js","components/Icon/IconArrowDown.js","components/context/SliderContext.js","components/slider/ShowDetailsButton.js","components/videos/errorsBoundary.js","components/videos/search.js","components/videos/videoListSearch.js","components/videos/videoLoading.js","components/videos/videosCategoriaFila.js","components/videos/videosItem.js","services/category.js","services/historialUser.js","services/preferenciasUser.js","services/tipoVideo.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from 'react';\r\n\r\n/**\r\n * Componente para obtener el icon de flecha hacia abajo\r\n * @returns Icono flecha hacia abajo usado en el Slider\r\n */\r\nconst IconArrowDown = () => (\r\n  <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default IconArrowDown;","import {createContext} from 'react';\r\n\r\nconst SliderContext = createContext();\r\n\r\nexport default SliderContext;","import React from 'react';\r\nimport IconArrowDown from '../Icon/IconArrowDown'\r\nimport './ShowDetailsButton.scss'\r\n\r\n/**\r\n * Componente con el boton para mostrar los detalles del elemento\r\n * @param {Function} onClick \r\n * @returns \r\n */\r\nconst ShowDetailsButton = ({ onClick }) => (\r\n  <button onClick={onClick} className=\"show-details-button mt-2\">\r\n    <span>\r\n      <IconArrowDown />\r\n    </span>\r\n  </button>\r\n);\r\n\r\nexport default ShowDetailsButton;","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({ error });\r\n  }\r\n\r\n  reloadPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n          <h3>Ha ocurrido un error por favor volver a cargar la página</h3>\r\n          <p>{error.toString()}</p>\r\n          <button onClick={this.reloadPage} className=\"btn btn-light mt-4\">Recargar página</button>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\r\nimport \"../../index.css\";\r\nimport { IconButton, Button } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nconst SearchComponent = (props) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [searchTerm, setSearchTerm] = useState(props.query); // Estado local para el input\r\n  const [btnQuitarFiltro, setBtnQuitarFiltro] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCategories(props.categories);\r\n  }, [props.categories]);\r\n\r\n  const handleCategoryChange = (e) => {\r\n    const newCategory = e.target.value;\r\n    setSelectedCategory(newCategory);\r\n    props.setFilterParam(newCategory);\r\n    setSearchTerm(\"\"); // Limpiar el input\r\n    props.setQuery(\"\"); // Limpiar el estado global del buscador\r\n    setBtnQuitarFiltro(newCategory !== \"All\"); // ✅ Activar botón si la categoría no es \"All\"\r\n    Swal.close();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchTerm(e.target.value); // Solo actualiza el estado local sin buscar\r\n  };\r\n\r\n  const executeSearch = () => {\r\n    setBtnQuitarFiltro(true); // ✅ Activar botón al hacer una búsqueda\r\n    console.log(\"🔍 Buscando:\", searchTerm);\r\n    props.setQuery(searchTerm); // Ahora sí ejecuta la búsqueda con el término ingresado\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSelectedCategory(\"All\");\r\n    setSearchTerm(\"\");\r\n    props.setFilterParam(\"All\");\r\n    props.setQuery(\"\");\r\n    setBtnQuitarFiltro(false); // ✅ Desactivar botón cuando se limpian los filtros\r\n  };\r\n\r\n  const openFilterModal = () => {\r\n    Swal.fire({\r\n      title: \"Filtrar por Categoría\",\r\n      html: `\r\n        <select id=\"category-select\" class=\"form-control\" onchange=\"window.handleCategoryChange(event)\">\r\n          <option value=\"All\">Todas las categorías 🔠</option>\r\n          ${categories\r\n            .slice()\r\n            .sort((a, b) => a.categoria.localeCompare(b.categoria))\r\n            .map((categ) => `<option value=\"${categ.categoria}\">${categ.categoria}</option>`)\r\n            .join(\"\")}\r\n        </select>\r\n      `,\r\n      showCancelButton: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        window.handleCategoryChange = handleCategoryChange;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper mb-4 mt-3\">\r\n      <div className=\"search-wrapper col-sm-12 d-lg-flex justify-content-start align-items-center\">\r\n        <div className=\"d-flex border border-light rounded overflow-hidden bg-light container-search-shadow\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"search-form\"\r\n            id=\"search-form\"\r\n            className=\"form-control border-0 bg-light px-3 py-0\"\r\n            placeholder=\"Buscas algo?\"\r\n            value={searchTerm}\r\n            onChange={handleInputChange} // ✅ Ahora solo guarda el texto pero no busca automáticamente\r\n            title=\"Buscar\"\r\n          />\r\n          <IconButton\r\n            aria-label=\"buscar\"\r\n            size=\"large\"\r\n            className=\"text-light\"\r\n            title=\"Buscar\"\r\n            onClick={executeSearch} // ✅ Solo busca cuando se da clic\r\n            style={{ backgroundColor: \"#3f51b5\", borderRadius: 0, width: \"50px\", height: \"50px\" }} // 🔳 Cuadrado\r\n          >\r\n            <SearchIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            aria-label=\"filtrar\"\r\n            size=\"large\"\r\n            className=\"bg-light\"\r\n            title=\"Filtrar por categoría\"\r\n            onClick={openFilterModal}\r\n            style={{ color: \"#3f51b5\" }}\r\n          >\r\n            <FilterAltIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        </div>\r\n\r\n        {/* 🔴 BOTÓN QUITAR FILTRO (solo si hay un filtro aplicado) */}\r\n        {btnQuitarFiltro && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={clearFilters}\r\n            startIcon={<ClearIcon />}\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Quitar Filtro\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Rating from '@mui/material/Rating';\r\nimport getTipoVideo from '../../services/tipoVideo'\r\nimport cx from \"classnames\";\r\nimport SliderContext from \"../context/SliderContext\";\r\nimport ShowDetailsButton from '../slider/ShowDetailsButton';\r\n//Lazy loading\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport \"../slider/Item.scss\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\nimport { Container } from '@mui/material';\r\n\r\nconst VideoListSearch = ({ categoria, verVideo, ...props }) => {\r\n  const [duracion, setDuracion] = useState([]);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [tipoVideo, setTipoVideo] = useState('')\r\n\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n      /* if (tiempo[2] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n      } */\r\n    }\r\n    return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n  };\r\n  \r\n  /* const handleTipoVideo =  async () =>{\r\n    let idTipoVideo = video.tipe_of_video\r\n    const response = await getTipoVideo(idTipoVideo)\r\n    setTipoVideo(response)\r\n\r\n  } */\r\n\r\n    useEffect(()=>{\r\n      \r\n    },[])\r\n  if (categoria) {\r\n    const videosEnCategoria = props.videos.filter((video) => (\r\n      video.categorias.some((element) => categoria.categoria === element.categoria )\r\n    ));\r\n\r\n    return (\r\n      <div className='col-xl-9 mx-auto'> \r\n        {videosEnCategoria.length > 0 && (\r\n          <div className=\"\">\r\n            <div className=\"d-flex align-items-center \">\r\n              <h3 className=\"mx-3\" key={categoria.id}>| {categoria.categoria}<small > ▶ </small> </h3>\r\n            </div> \r\n            <div className=\"d-flex justify-content-center flex-wrap\">\r\n              {\r\n                videosEnCategoria.map((video)=>{\r\n                  return(\r\n\r\n            <div key={video.id} className=\"card cursorPointer card-video\">\r\n            <small className=\"d-flex justify-content-end px-3 pt-1 \">\r\n              {video.tipe_of_video == 1 ? \"Video\": \r\n                video.tipe_of_video == 2 ? \"Serie\" : \r\n                video.tipe_of_video == 3 ? \"Caso\" : \"\"  }\r\n            </small>\r\n              \r\n              <Button onClick={() => verVideo(video.id) }> {/* NO ME INTRA AL VIDEO  ARREGLAR EL BUSCAR QUE TAMPOCO SIRVE */}\r\n                <LazyLoadImage effect=\"blur\" src={`https://sccotview.com${video.featured_image}`} className=\"card-img-top cursorPointer\" alt=\"...\" />\r\n              </Button>\r\n              \r\n              <div className=\"card-body p-0 px-2 d-flex flex-column justify-content-between\" key={video.id}>\r\n                <p className=\"truncate-text\" onClick={(event) => {event.stopPropagation(); }}>\r\n                  {video.title_espanol}\r\n                  {console.log(video)}\r\n                </p>\r\n                <div className=\"d-flex justify-content-between align-items-end\" onClick={(event) => event.stopPropagation()}>\r\n                  <div>\r\n                    <p>{changeDuration(video.duration)}</p>\r\n                  </div>\r\n                  <div className=\"bg-secondary rounded-2 mb-2 pt-1\" onClick={(event) => event.stopPropagation()}>\r\n                    <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default VideoListSearch","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la función main de lo contrario retorna mensaje indicando que aún se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","/* eslint-disable array-callback-return */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {Navigation } from \"swiper/modules\";\r\nimport getTipoVideo from '../../services/tipoVideo'\r\n\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\n\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport { Container } from \"@material-ui/core\";\r\nconst VideosCategoriaFila = ({ categoria, verVideo, ...props }) => {\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(\":\");\r\n    let new_duration = \"\";\r\n\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n    }\r\n    return new_duration.trim();\r\n  };\r\n/*   const handleTipoVideo =  async (id) =>{\r\n    \r\n    const response = await getTipoVideo(id)\r\n    console.log(respo);\r\n    \r\n  }\r\n     */\r\n\r\n  if (!categoria) return null;\r\n\r\n  const videosEnCategoria =\r\n    props.videos &&\r\n    props.search(props.videos).filter((video) =>\r\n      video.categorias.some((element) => categoria.categoria === element.categoria)\r\n    );\r\n\r\n  // Creamos un identificador único basado en el nombre de la categoría\r\n  const categoriaId = `swiper-${categoria.categoria.replace(/\\s+/g, \"-\").toLowerCase()}`;\r\n\r\n  return (\r\n    <Container>\r\n      {videosEnCategoria.length > 0 && (\r\n        <div className=\"\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <h3 className=\"me-3\">| {categoria.categoria} <small>▶</small></h3>\r\n            <small className=\"border-bottom border-light mb-2\">{videosEnCategoria.length} Videos</small>\r\n          </div>\r\n\r\n          {/* Botones personalizados con identificador único */}\r\n          <div className=\"position-relative\">\r\n            <button className={`custom-prev-${categoriaId} swiper-button-prev`} style={styles.navButton}></button>\r\n            <button className={`custom-next-${categoriaId} swiper-button-next`} style={styles.navButton}></button>\r\n\r\n            <Swiper\r\n              spaceBetween={30}\r\n              loop={true}\r\n              breakpoints={{\r\n                1400: { slidesPerView: 4, spaceBetween: 25, slidesPerGroup:2 },\r\n                1200: { slidesPerView: 3, spaceBetween: 5 , slidesPerGroup:2},\r\n                992: { slidesPerView: 2.5, spaceBetween: 5 , slidesPerGroup:1},\r\n                768: { slidesPerView: 2.2, spaceBetween: 5 , slidesPerGroup:1},\r\n                576: { slidesPerView: 1.5, spaceBetween: 5 , slidesPerGroup:1}, // 1.3 para que asome la siguiente tarjeta\r\n                376: { slidesPerView: 1.2, spaceBetween: 10 , slidesPerGroup:1}, // 1.3 para que asome la siguiente tarjeta\r\n              }}\r\n              navigation={{\r\n                prevEl: `.custom-prev-${categoriaId}`,\r\n                nextEl: `.custom-next-${categoriaId}`,\r\n              }}\r\n              modules={[ Navigation]}\r\n              className=\"mySwiper\"\r\n            >\r\n              {videosEnCategoria.map((video) => (\r\n                <SwiperSlide key={video.id} >\r\n                  <div onClick={()=>verVideo(video.id)} className=\"card cursorPointer card-video px-2\">\r\n                  <small className=\"d-flex justify-content-end px-3 pt-1  \">\r\n                     {video.tipe_of_video  == 1 && \"video\" }\r\n                     {video.tipe_of_video  == 2 && \"serie\" }\r\n                     {video.tipe_of_video  == 3 && \"caso\" }\r\n                  </small>\r\n                    <LazyLoadImage\r\n                      effect=\"blur\"\r\n                      src={`https://sccotview.com${video.featured_image}`}\r\n                      className=\"card-img-top cursorPointer py-1 \"\r\n                      alt=\"...\"\r\n                      placeholder={\r\n                        <div style={styles.placeholder}>\r\n                        </div>\r\n                      }\r\n                    />\r\n                    <p className=\"truncate-text\">{video.title_espanol}</p>\r\n                    <div className=\"d-flex justify-content-between align-items-end\" onClick={(event) => event.stopPropagation()}>\r\n                      <div>\r\n                        <p>{changeDuration(video.duration)}</p>\r\n                      </div>\r\n                      <div className=\"bg-secondary rounded-2 mb-2 pt-1\">\r\n                        <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </SwiperSlide>\r\n              ))}\r\n            </Swiper>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  navButton: {\r\n    transform: \"translateY(-50%)\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: \"50%\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    fontSize: \"24px\",\r\n    cursor: \"pointer\",\r\n    transition: \"background 0.3s\",\r\n    zIndex: 10,\r\n  },\r\n  placeholder: {\r\n    width: \"100%\",\r\n    height: \"200px\", // Ajusta según el tamaño de tus imágenes\r\n    backgroundColor: \"transparent\", // Color gris claro\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"bold\",\r\n    color: \"#666\",\r\n    borderRadius: \"8px\",\r\n  },\r\n}\r\n\r\nexport default VideosCategoriaFila;\r\n","import React from \"react\";\r\n\r\n//components\r\nimport { Image } from \"react-bootstrap\";\r\n//Lazy Loading\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\n//MaterialUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport '../../styles/styles.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n  },\r\n  imagenCarousel: {\r\n    cursor:\"pointer\",\r\n    minWidth: \"100%\",\r\n    objectFit: \"contain\",\r\n    maxHeight: \"85vh\",\r\n    objectPosition: \"top\",\r\n  },\r\n  carouselText: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    background: \"linear-gradient(to bottom, transparent 20%, rgba(24, 26, 54, 0.95) 90%)\",\r\n    padding: \"300px 20px 20px\",\r\n  },\r\n  textTitle:{\r\n    fontSize:\"27px\"\r\n  },\r\n\r\n  \"@media (max-width: 500px)\": {\r\n    imagenCarousel: {\r\n      minWidth: \"100%\",\r\n      objectFit: \"cover\", // Cambia a 'cover' para que ocupe más espacio\r\n      maxHeight: \"100vh\", // Aumenta la altura en dispositivos pequeños\r\n      objectPosition: \"top\",\r\n    },\r\n    carouselText: {\r\n      padding: \"120px 20px 10px\", // Reduce el padding del título para que no tape la imagen\r\n      bottom:\"-24px\",\r\n      zIndex:\"10\"\r\n    },\r\n    textTitle:{\r\n      fontSize:\"18px\"\r\n    },\r\n    containerRating:{\r\n      display:\"none\"\r\n    }\r\n    \r\n  },\r\n}));\r\nconst changeDuration = (duration) => {\r\n  let tiempo = duration.split(':');\r\n  let new_duration = \"\";\r\n  if (tiempo) {\r\n    if (tiempo[0] !== \"00\") {\r\n      new_duration = tiempo[0] + \"h\";\r\n    }\r\n    if (tiempo[1] !== \"00\") {\r\n      new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n    }\r\n    /* if (tiempo[2] !==\"00\") {\r\n      new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n    } */\r\n  }\r\n  return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n};\r\n/**\r\n * Componente para mostrar en el carousel los videos con algunos campos.\r\n * @param {*} video\r\n * @returns Item de un video.\r\n */\r\nconst VideosItem = ({ video,...props } ) => {\r\n  console.log(video);\r\n  const classes = useStyles();\r\n  return (\r\n    <div  id=\"contenedorItemVideo\" className=\"cursorPointer contenedorItemVideo\">\r\n      <div className={\"\"+classes.row} onClick={() => props.verVideo(video.id)}>\r\n        <div className={\" \"+classes.imagen}>\r\n            <Image\r\n              src={\"https://sccotview.com\" + video.featured_image}\r\n              className={classes.imagenCarousel +\" \"}\r\n              \r\n            >\r\n            </Image>\r\n          \r\n        </div>\r\n        <div className=\" col-12  \">\r\n        <div className={classes.carouselText }>\r\n          <div className=\"d-flex justify-content-end text-capitalize  \">\r\n            <Box sx={{'& > legend': { mt: 2 }}} className={classes.containerRating}>\r\n              <div className=\"bg-secondary d-inline pt-2 px-1 rounded-2\">\r\n                <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n              </div>\r\n            </Box>\r\n\r\n          </div>\r\n          <h3 className={`${classes.textTitle} text-light text-capitalize text-start border-bottom border-white pb-2`}>\r\n            {video.title_espanol}\r\n          </h3>\r\n\r\n          {/* <span className=\"text-light text-start font-weight-light text-capitalize truncate-text-6\">{video.description_esp}</span>\r\n          {video.categorias.length > 0 && (\r\n            <ul className=\"d-flex flex-wrap justify-content-start p-0 m-0 py-0 mt-2  text-light\">\r\n              <span className=\"text-capitalize me-1\">{video.categorias.length > 1 ? \"Categorías\" : \"Categoría\"} → </span>\r\n              {video.categorias.map(categoria => (\r\n                <li key={categoria.id} className=\"list-group-item list-group-item-light px-2 rounded-4 mx-1\"><small className=\"text-capitalize\">{categoria.categoria}</small></li>\r\n              ))}\r\n            </ul>\r\n          )} */}\r\n      {video.autor.length > 0 && (\r\n        <ul className=\"d-flex flex-wrap justify-content-start p-0 text-light\">\r\n        <div className=\"d-flex justify-content-between w-100 mb-2\">\r\n          <div>\r\n\r\n        <span className=\"text-capitalize small\">\r\n          {video.autor.length > 1 ? \"Autores\" : \"Autor\"} →\r\n        </span>\r\n\r\n          {video.autor.slice(0, 2).map((autor, index, array) => (\r\n            <p key={autor.id} className=\"px-1 rounded-4 m-0 d-inline\">\r\n              <small className=\"text-capitalize \" style={{ fontSize: \"0.85rem\" }}>\r\n                {autor.autor}\r\n                {index < array.length - 1 ? \",\" : \"\"}\r\n              </small>\r\n              \r\n            </p>\r\n            \r\n          ))}\r\n          {video.autor.length > 2 && (\r\n            <span className=\"px-2 small\" style={{ fontSize: \"0.85rem\" }}>...</span>\r\n          )}\r\n          </div>\r\n          \r\n\r\n\r\n          <p className=\"mx-1\" style={{ fontSize: \"0.85rem\" }}>{changeDuration(video.duration)}</p>\r\n        </div>\r\n\r\n        \r\n      </ul>\r\n      )}\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n          \r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideosItem;\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/historialUser/\";\r\n\r\n/**\r\n * Función para agregar un nuevo historial de usuario.\r\n * @param {formdata} newHistorial \r\n * @returns data enviada desde el backend\r\n */\r\nexport const RegisterHistorialUser = async (newHistorial) => {\r\n    const response = await axiosInstance.post(API_URL, newHistorial);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para entontrar todos los historiales de usuarios.\r\n * @returns data enviada desde el backend-\r\n */\r\nexport const ListHistorial = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\nexport const ListHistorial4Comments = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}list_4_comments/`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  \r\n/**\r\n * Función para obtener un historial en específico.\r\n * @param {pk} histID \r\n * @returns data enviada desde el backend\r\n */\r\nexport const getHistorial = async (histID) => {\r\n  console.log(histID);\r\n    const response = await axiosInstance.get(`${API_URL}${histID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para listar el historial de un usuario en específico.\r\n * @param {fk} idUser \r\n * @returns data enviada desde el backend\r\n */\r\nexport const ListHistorialUser = async (idUser) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_user/`,idUser);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actualizar un historial de usuario.\r\n * @param {pk} id \r\n * @param {formdata} updateHU \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateHistorialUser = async(id,updateHU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updateHU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/gustos_by_users/\";\r\n\r\n/**\r\n * Función para agregar preferencias(gustos) de un usuario.\r\n * @param {formData} newPreferencia \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const RegisterPreferenciaUser = async (newPreferencia) => {\r\n    const response = await axiosInstance.post(API_URL, newPreferencia);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las preferencias de usuario.\r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const ListPreferencia = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia en específico.\r\n   * @param {pk} histID \r\n   * @returns La data enviada desde el backend.\r\n   */\r\nexport const getPreferencia = async (ID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${ID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia de un usuario en específico.\r\n   * @param {fk} idUser \r\n   * @returns La data enviada desde el backend.\r\n   */\r\nexport const ListPreferenciaUser = async (idUser) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_user/`,idUser);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * función para obtener actualizar la preferencia de un usuario.\r\n * @param {*} id \r\n * @param {*} updatePU \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const updatePreferenciaUser = async(id,updatePU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updatePU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}\r\nexport const deletePreferencia = async (id) => {\r\n  const response = await axiosInstance.delete(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n    Swal.fire({\r\n      title: response.data.message,\r\n      icon: \"success\"\r\n    }).then(res=>{\r\n      window.location.reload();\r\n    }).catch(()=>{\r\n      Swal.fire({\r\n        title: \"Lo sentimos no fue posible eliminar la preferencia, intenta nuevamente mas tarde\",\r\n        icon: \"warning\"\r\n      })\r\n    })\r\n    \r\n    return await response.data;\r\n  }\r\n};","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/tipos_de_Video/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTipoVideo = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n */\r\nconst  getTipoVideo = async (id) => {\r\n  const response = await axiosInstance.get(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n   /*  console.log(response.data.tipe_video); */\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n} */\r\nexport default getTipoVideo;","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  console.log(\"listar videos de la serie\" + temporadaId);\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/${temporadaId}`);\r\n  console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","role","xmlns","viewBox","fill","d","SliderContext","createContext","onClick","className","IconArrowDown","ErrorBoundary","props","reloadPage","reload","state","this","setState","children","React","useState","categories","setCategories","setSelectedCategory","query","searchTerm","setSearchTerm","btnQuitarFiltro","setBtnQuitarFiltro","useEffect","handleCategoryChange","e","newCategory","target","value","setFilterParam","setQuery","Swal","type","name","id","placeholder","onChange","title","size","style","backgroundColor","borderRadius","width","height","fontSize","html","slice","sort","a","b","categoria","localeCompare","map","categ","join","showCancelButton","showConfirmButton","didOpen","color","variant","startIcon","marginLeft","verVideo","changeDuration","duration","tiempo","new_duration","trim","videosEnCategoria","videos","filter","video","categorias","some","element","length","tipe_of_video","LazyLoadImage","effect","src","featured_image","alt","event","stopPropagation","title_espanol","parseFloat","score","precision","readOnly","Component","isLoading","display","justifyContent","textAlign","flexDirection","alignItems","styles","navButton","transform","border","cursor","transition","zIndex","fontWeight","search","categoriaId","replace","toLowerCase","spaceBetween","loop","breakpoints","slidesPerView","slidesPerGroup","navigation","prevEl","nextEl","modules","Navigation","useStyles","makeStyles","theme","paper","marginTop","spacing","marginBottom","imagenCarousel","minWidth","objectFit","maxHeight","objectPosition","carouselText","position","bottom","left","background","padding","textTitle","containerRating","classes","row","imagen","sx","mt","autor","index","array","ListCategorias","RegisterCategory","updateCategory","updCategory","RegisterHistorialUser","newHistorial","ListHistorial","getHistorial","histID","ListHistorialUser","idUser","updateHistorialUser","updateHU","RegisterPreferenciaUser","newPreferencia","ListPreferenciaUser","deletePreferencia","message","icon","res","ListTipoVideo","getTipoVideo","ListVideos","ListPeliculas","ListCasos","getVideo","videoID","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}