{"version":3,"file":"static/js/634.87c58ee6.chunk.js","mappings":"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","sources":["axios.js","components/especialidades/autoresModal.js","components/especialidades/palabraclaveModal.js","components/videos/videoForm.js","hooks/useModal.js","services/autor.js","services/category.js","services/especialidad.js","services/palabraClave.js","services/serie.js","services/subEspecialidad.js","services/temporada.js","services/tipoVideo.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Lista de endpoints que no requieren autenticación\r\n * Puedes ajustar esto según los endpoints de tu backend que son públicos.\r\n */\r\nconst PUBLIC_ENDPOINTS = [\r\n  \"free/\",\r\n  \"free\",         // Para GET general de videos\r\n           // Para GET general de series\r\n];\r\n\r\n/**\r\n * Instancia de Axios para hacer peticiones al backend\r\n */\r\nconst token = localStorage.getItem(\"access_token\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",  // Cambiado según tu observación\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * Interceptor de request para agregar el token solo si la ruta NO es pública\r\n */\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // Detectar si la URL es pública\r\n  const isPublic = PUBLIC_ENDPOINTS.some(endpoint => config.url.includes(endpoint));\r\n\r\n  if (token && !isPublic) {\r\n    config.headers[\"Authorization\"] = \"JWT \" + token;\r\n  } else {\r\n    delete config.headers[\"Authorization\"]; // Asegura que no se mande nada si no es necesario\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n/**\r\n * Interceptor de respuesta para manejar expiración del token\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n        \"Looks like CORS might be the problem.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/userlogin1/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken) {\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n\r\n        const now = Math.ceil(Date.now() / 1000);\r\n\r\n        if (tokenParts.exp > now) {\r\n          try {\r\n            const response = await axiosInstance.post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            });\r\n\r\n            localStorage.setItem(\"access_token\", response.data.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.data.refresh_token);\r\n\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n            originalRequest.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n\r\n            return axiosInstance(originalRequest);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          localStorage.clear();\r\n          window.location.href = \"/userlogin2/\";\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n        localStorage.clear();\r\n        window.location.href = \"/userlogin3/\";\r\n      }\r\n    }\r\n\r\n    if (error.response.status === 401) {\r\n      localStorage.clear();\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","import React from \"react\";\r\n//dependencias\r\nimport * as autorServer from \"../../services/autor\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalAutor = ({ handleClose, show, autor_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!autor_id) {\r\n        formData.append(\"autor\", newData.autor);\r\n        await autorServer.RegisterAutor(formData);\r\n      } else {\r\n        formData.append(\"autor\", newData.autor);\r\n        await autorServer.updateAutor(autor_id, formData);        \r\n      }\r\n      const res = await autorServer.ListAutores();\r\n      const data = await res;\r\n      props.setAutores(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" className=\"text-dark mx-2 mt-2\" ><h4>{autor_id? 'Editar ' : 'Registrar '} Autor</h4></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput2\">\r\n            <Form.Control type=\"text\" \r\n            className=\"form-control\"\r\n            rows={1} \r\n            name=\"autor\"\r\n            value={newData.autor || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {autor_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalAutor;","import React from \"react\";\r\n//dependencias\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalPalabraClave = ({ handleClose, show, palabraclave_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!palabraclave_id) {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.RegisterPalabraClave(formData);\r\n      } else {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.updatePalabraClave(palabraclave_id, formData);        \r\n      }\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      props.setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" className=\"text-dark mx-2 mt-2\" ><h4>{palabraclave_id? 'Editar Registro' : 'Registrar'} Palabra clave</h4></Modal.Title>\r\n\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"palabraClave\"\r\n            value={newData.palabraClave || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {palabraclave_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalPalabraClave;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n//import Select from \"react-select\";\r\nimport * as VideoServer from \"../../services/videoServer\";\r\nimport * as TipoVideoServer from \"../../services/tipoVideo\";\r\nimport * as CategoriaServer from \"../../services/category\";\r\nimport * as EspecialidadServer from \"../../services/especialidad\";\r\nimport * as SubEspecialidadServer from \"../../services/subEspecialidad\";\r\nimport * as AutorServer from \"../../services/autor\";\r\nimport * as PalabraClaveServer from \"../../services/palabraClave\";\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport PalabrasClavesModal from \"../especialidades/palabraclaveModal\";\r\nimport AutoresModal from \"../especialidades/autoresModal\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n\r\n//components\r\n//import Select from \"@mui/material/Select\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Swal from \"sweetalert2\";\r\n/**\r\n * Función para realizar las operaciones necesarias para crear o editar un video. \r\n * @returns Componente con el formulario para Agregar nuevo video o editar un video.\r\n */\r\nconst VideoForm = () => {\r\n  const history = useNavigate();\r\n  const params = useParams();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const initialState = {\r\n    id: 0,\r\n    code_esp: \"\",\r\n    code_engl: \"\",\r\n    title_espanol: \"\",\r\n    title_english: \"\",\r\n    title_cap_esp: \"\",\r\n    title_cap_english: \"\",\r\n    description_esp: \"\",\r\n    description_english: \"\",\r\n    tipe_of_video: 1,\r\n    languages: [1],\r\n    categorias: [1],\r\n    especialidades: [1],\r\n    subEspecialidades: [1],\r\n    autores: [1],\r\n    palabrasClaves: [1],\r\n    serie: 0,\r\n    temporada: 0,\r\n  };\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [showPalabraClave, handleShowPalabraClave, handleClosePalabraClave] = useModal(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [video, setVideo] = useState(initialState);\r\n  const [videoAntes, setVideoAntes] = useState();\r\n  const [categorias, setCategorias] = useState();\r\n  const [tipe_of_video,setTipe_of_video] = useState();\r\n  const [especialidades, setEspecialidades] = useState();\r\n  const [subEspecialidades, setSubEspecialidades] = useState();\r\n  const [autores, setAutores] = useState([]);\r\n  const [palabrasClaves, setPalabrasClaves] = useState();\r\n  const [series, setSeries] = useState();\r\n  const [temporadas, setTemporadas] = useState();\r\n  const [isSerieSelectEnabled, setIsSerieSelectEnabled] = useState(false);\r\n  const [isTempSelectEnabled, setIsTempSelectEnabled] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [idPalabraClave, setIdPalabraClave] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [currentItemPalabraClave, setCurrentItemPalabraClave] = useState({});\r\n  const initialFormData = {palabrasClaves:\"\",autores:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const [newDataPalabraClave, setFormDataPalabraClave] = useState(initialFormData);\r\n  const [isDataReady,setIsDataReady] = useState(false)\r\n\r\n  \r\n\r\n  const handleSelectTypeVideo = (selectedValue, fielName) => {\r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 2){\r\n      setIsSerieSelectEnabled(true);\r\n    }\r\n    else{\r\n      setIsSerieSelectEnabled(false)\r\n      setIsTempSelectEnabled(false)\r\n      \r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza el estado del idioma seleccionado en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleSelectIdioma = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n\r\n    let value = Array.from(target.selectedOptions, (option) => option.value);\r\n    setVideo({ ...video, [name]: value });\r\n  };\r\n  /**\r\n   * Actualiza el estado de la categoria seleccionada en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const registrarPalabrasClaves = () =>{\r\n    /* AQUI CODE */\r\n  setId(null);\r\n  setCurrentItemPalabraClave({});\r\n  setFormDataPalabraClave({palabrasClaves:\"\"});\r\n  handleShowPalabraClave(true)\r\n}\r\nconst registrarAutores = () =>{\r\n  /* AQUI CODE */\r\nsetId(null);\r\nsetCurrentItem({});\r\nsetFormData({autores:\"\"});\r\nhandleShow(true)\r\n}\r\nconst handleSelectCategoryEspSub = async (selectedValues, fieldName) => {\r\n // console.log(`🔹 Procesando selección para: ${fieldName}`, selectedValues);\r\n\r\n  // Para todos los campos excepto \"autores\", usamos la versión simple\r\n  if (fieldName !== \"autores\") {\r\n    let value = Array.from(selectedValues, (option) => option.value ?? option.id);\r\n    setVideo({ ...video, [fieldName]: value });\r\n    return;\r\n  }\r\n\r\n  // **Manejo especial para autores**\r\n  try {\r\n    const autoresNoRegistrados = [];\r\n    const autoresConId = new Map();\r\n\r\n    const autoresActuales = video.autores || [];\r\n\r\n    // Buscar los autores en la base de datos\r\n    const responses = await Promise.allSettled(\r\n      selectedValues.map(async (autor) => {\r\n        try {\r\n          const res = await AutorServer.getAutor(autor.label ?? autor.autor);\r\n          if (res && res.id) {\r\n            autoresConId.set(autor.label ?? autor.autor, res.id);\r\n          }\r\n          return res;\r\n        } catch (error) {\r\n          return null; // Si no existe, devuelve null\r\n        }\r\n      })\r\n    );\r\n\r\n    // Actualizar `selectedValues` con los IDs encontrados\r\n    selectedValues = selectedValues.map((autor) => {\r\n      const idExistente = autoresConId.get(autor.label ?? autor.autor);\r\n      return idExistente ? { ...autor, value: idExistente } : autor;\r\n    });\r\n\r\n    // Determinar qué autores no están registrados\r\n    responses.forEach((response, index) => {\r\n      const autor = selectedValues[index];\r\n      if (!response.value && !autoresActuales.includes(autor.value ?? autor.id)) {\r\n        autoresNoRegistrados.push(autor);\r\n      }\r\n    });\r\n\r\n    // Registrar autores nuevos si es necesario\r\n    if (autoresNoRegistrados.length > 0) {\r\n      const nuevosAutores = await Promise.all(\r\n        autoresNoRegistrados.map(async (autor) => {\r\n          try {\r\n            const formData = new FormData();\r\n            formData.append(\"autor\", autor.label ?? autor.autor);\r\n\r\n            const respuestaAutorRegistrado = await AutorServer.RegisterAutor(formData);\r\n            if (respuestaAutorRegistrado && respuestaAutorRegistrado.id) {\r\n              //console.log(`✅ Autor registrado: ${autor.label ?? autor.autor} con ID ${respuestaAutorRegistrado.id}`);\r\n              return respuestaAutorRegistrado;\r\n            }\r\n          } catch (registerError) {\r\n            console.error(`❌ Error al registrar autor: ${autor.label ?? autor.autor}`, registerError);\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n\r\n      // Actualizar `autoresConId` con los nuevos IDs\r\n      nuevosAutores.forEach((autor) => {\r\n        if (autor && autor.id) {\r\n          autoresConId.set(autor.autor, autor.id);\r\n        }\r\n      });\r\n\r\n      // Actualizar `selectedValues` con los nuevos IDs\r\n      selectedValues = selectedValues.map((autorSeleccionado) => {\r\n        const idExistente = autoresConId.get(autorSeleccionado.label ?? autorSeleccionado.autor);\r\n        return idExistente ? { ...autorSeleccionado, value: idExistente } : autorSeleccionado;\r\n      });\r\n    }\r\n\r\n    // Obtener IDs finales\r\n    const value = selectedValues.map(option => option.value ?? option.id);\r\n    //console.log(\"✅ Autores final seleccionados con ID:\", value);\r\n\r\n    // Actualizar el estado\r\n    setVideo({ ...video, [fieldName]: value });\r\n\r\n  } catch (error) {\r\n    console.error(\"❌ Error general al procesar autores:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  //REVISAR AQUI FALTARIA ESTO EN PALABRAS CLAVES Y CONSIGUIENTES\r\n\r\n  const handleSelectSerie = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 0){\r\n      setIsTempSelectEnabled(false);\r\n    }\r\n    else{\r\n      setIsTempSelectEnabled(true)\r\n    }\r\n  };\r\n  const handleSelectTem = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n  }\r\n  /**\r\n   * Actualiza el estado de demás campos seleccionados en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    if (name === \"image\") {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n    else if (name === \"min_image\"){\r\n      setSelectedFile2(e.target.files[0]);\r\n    }\r\n    else {\r\n      setVideo({ ...video, [name]: e.target.value });\r\n    }\r\n  };\r\n  /**\r\n   * Guarda la información llenada en el formulario y la envia al backend para su registro o actualización.\r\n   * Al finalizar si el proceso es exitoso redirecciona al index.\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let featured_image;\r\n    let min_image;\r\n    const formData = new FormData();\r\n\r\n    if (selectedFile) {\r\n      featured_image = selectedFile;\r\n      formData.append(\"featured_image\", featured_image);\r\n\r\n    }\r\n    if (selectedFile2) {\r\n      min_image = selectedFile2;\r\n      formData.append(\"min_image\", min_image);\r\n    }\r\n\r\n    try {\r\n      formData.append(\"code_esp\", video.code_esp);\r\n      formData.append(\"code_engl\", video.code_engl);\r\n      formData.append(\"title_espanol\", video.title_espanol);\r\n      formData.append(\"title_english\", video.title_english);\r\n      formData.append(\"title_cap_esp\", video.title_cap_esp);\r\n      formData.append(\"title_cap_english\", video.title_cap_english);\r\n      formData.append(\"description_esp\", video.description_esp);\r\n      formData.append(\"description_english\", video.description_english);\r\n      formData.append(\"tipe_of_video\", video.tipe_of_video);\r\n      /* formData.append(\"temporada\", video.temporada);\r\n      formData.append(\"serie\", video.serie); */\r\n\r\n      if(isSerieSelectEnabled){\r\n        formData.append(\"temporada\", video.temporada);\r\n        formData.append(\"serie\", video.serie); \r\n      }\r\n\r\n      for (let i = 0; i <= video.languages.length - 1; i++) {\r\n        formData.append(\"languages\", video.languages[i]);\r\n      }\r\n      for (let i = 0; i <= video.categorias.length - 1; i++) {\r\n        formData.append(\"categorias\", video.categorias[i]);\r\n      }\r\n      for (let i = 0; i <= video.especialidades.length - 1; i++) {\r\n        formData.append(\"especialidad\", video.especialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.subEspecialidades.length - 1; i++) {\r\n        formData.append(\"subEspecialidad\", video.subEspecialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.autores.length - 1; i++) {\r\n        formData.append(\"autor\", video.autores[i]);\r\n      }\r\n      for (let i = 0; i <= video.palabrasClaves.length - 1; i++) {\r\n        formData.append(\"palabraClave\", video.palabrasClaves[i]);\r\n      }\r\n    \r\n      let res;\r\n      if (!params.id) {\r\n\r\n        /* console.log(existAutor); */\r\n        \r\n        res = await VideoServer.RegisterVideo(formData);\r\n      } else {\r\n        res = await VideoServer.UpdateVideo(params.id, formData);        \r\n      }\r\n      Swal.fire({\r\n        title: res.message,\r\n        icon: \"success\"\r\n      }).then(res=>{\r\n        history(\"/\");\r\n        window.location.reload();\r\n      })\r\n      } catch (error) {\r\n        console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * Función para obtener el video con sus campos a editar.\r\n   * @param {*} videoID \r\n   */\r\n  const getVideo = async (videoID) => {\r\n    try {\r\n      const res = await VideoServer.getVideoDT(videoID);\r\n      const data = await res;\r\n      console.log(data);\r\n      setVideoAntes(data)\r\n      \r\n      if(isSerieSelectEnabled){\r\n\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada,\r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada\r\n        });\r\n      }else{\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n         \r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener todas las categorias en la base de datos.\r\n   */\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await CategoriaServer.ListCategorias();\r\n      const data = await res;\r\n      setCategorias(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getEspecialidades = async () => {\r\n    try {\r\n      const res = await EspecialidadServer.ListEspecialidades()\r\n      const data = await res;\r\n      setEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getSubEspecialidades = async () => {\r\n    try {\r\n      const res = await SubEspecialidadServer.ListSubEspecialidades()\r\n      const data = await res;\r\n      setSubEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAutores = async () => {\r\n    try {\r\n      const res = await AutorServer.ListAutores()\r\n      const data = await res;\r\n      setAutores(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getPalabraClaves = async () => {\r\n    try {\r\n      const res = await PalabraClaveServer.ListPalabrasClaves()\r\n      const data = await res;\r\n      setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n \r\n  const getSeries = async () => {\r\n    try {\r\n      const res = await SerieServer.ListSeries()\r\n      const data = await res;\r\n      setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getTemporadas = async () => {\r\n    try {\r\n      const res = await TemporadaServer.ListTemporadas()\r\n      const data = await res;\r\n      setTemporadas(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const getTipe_of_video = async () =>{\r\n    try {\r\n      const res = await TipoVideoServer.ListTipoVideo()\r\n      const data = await res;\r\n      setTipe_of_video(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } \r\n  const obtenerVideoEnviar = () => {\r\n  //  console.log(video);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategorias();\r\n    getEspecialidades();\r\n    getSubEspecialidades();\r\n    getAutores();\r\n    getPalabraClaves();\r\n    getSeries();\r\n    getTemporadas();\r\n    getTipe_of_video();\r\n  }, []);\r\n  \r\n  // Cuando los datos necesarios estén listos, obtenemos el video\r\n  useEffect(() => {\r\n    if (params.id && autores.length > 0 && especialidades.length > 0 && subEspecialidades.length > 0) {\r\n      getVideo(params.id);\r\n    }\r\n  }, [params.id, autores, especialidades, subEspecialidades]);\r\n  \r\n\r\n \r\n  const optionsSeriesVideoSelected = []\r\n  if (series && videoAntes) {\r\n    var optionsSeries = series.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.serie,\r\n    }));\r\n    series.map(async (opcion) => {\r\n        if(opcion.id == videoAntes.serie){\r\n          optionsSeriesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.serie,\r\n          })\r\n        }\r\n    });\r\n  }\r\n  const optionsTemporadasVideoSelected = []\r\n\r\n  if (temporadas && videoAntes) {\r\n    \r\n    var optionsTemporadas = temporadas.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.temporada,\r\n    }));\r\n    temporadas.map(async (opcion) => {\r\n      if(opcion.id == videoAntes.temporada){\r\n        optionsTemporadasVideoSelected.push({\r\n          value: opcion.id,\r\n          label: opcion.temporada,\r\n        })\r\n      }\r\n  });\r\n  }\r\n\r\n  \r\n  const [optionsCategorias, setOptionsCategorias] = useState([]);\r\n  const [optionsCategoriasVideoSelected, setOptionsCategoriasVideoSelected] = useState([]);\r\n\r\n  const processCategorias =  async () => {\r\n    if (categorias) {\r\n\r\n      const options = categorias.map(opcion => ({\r\n        value: opcion.id,\r\n        label: opcion.categoria,\r\n      }));\r\n      setOptionsCategorias(options);\r\n\r\n      const selectedOptions = categorias.flatMap(opcion =>\r\n        videoAntes.categorias.filter(categoriaVideo => opcion.id == categoriaVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.categoria,\r\n          }))\r\n      );\r\n      setOptionsCategoriasVideoSelected(selectedOptions);\r\n    }\r\n  };\r\n \r\n  \r\n  const [optionsSubEspecialidades, setOptionsSubEspecialidades] = useState([]);\r\n  const [optionsSubEspecialidadesVideoSelected, setOptionsSubEspecialidadesVideoSelected] = useState([]);\r\n  const processSubEspecialidades = async () => {\r\n    if (subEspecialidades) {\r\n\r\n      const options = subEspecialidades.map(opcion => ({\r\n        value: opcion.id,\r\n        label: opcion.subEspecialidad,\r\n      }));\r\n      setOptionsSubEspecialidades(options);\r\n\r\n      const selectedOptions = subEspecialidades.flatMap(opcion =>\r\n        videoAntes.subEspecialidad.filter(subEspecialidadesVideo => opcion.id == subEspecialidadesVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.subEspecialidad,\r\n          }))\r\n      );\r\n      setOptionsSubEspecialidadesVideoSelected(selectedOptions);\r\n    }\r\n  };\r\n\r\n  const [optionsEspecialidades, setOptionsEspecialidades] = useState([]);\r\n  const [optionsEspecialidadesVideoSelected, setOptionsEspecialidadesVideoSelected] = useState([]);\r\n\r\n  const processEspecialidades = async () =>{\r\n    if(especialidades){\r\n      const options = especialidades.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.especialidad,\r\n      }));\r\n      \r\n     // console.log(\"Opocinotes especialidades\", options)\r\n\r\n      const selectedOptions = especialidades.flatMap(opcion =>\r\n        videoAntes.especialidad.filter(especialidadVideo => opcion.id == especialidadVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.especialidad,\r\n          }))\r\n      );\r\n      setOptionsEspecialidadesVideoSelected(selectedOptions);\r\n      \r\n      \r\n    }\r\n  }\r\n  const [optionsAutores, setOptionsAutores] = useState([]);\r\n  const [optionsAutoresVideoSelected, setOptionsAutoresVideoSelected] = useState([]);\r\n\r\n  const processAutores = async () => {\r\n   // console.log(autores);\r\n    \r\n    if (autores) {\r\n      const options = autores.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.autor,\r\n      }));\r\n\r\n      setOptionsAutores(options);\r\n  \r\n     // console.log(\"Autores disponibles:\", options);\r\n     // console.log(\"Autores en videoAntes:\", videoAntes.autor);\r\n  \r\n      // Filtra los autores que coincidan con los IDs en videoAntes.autor\r\n      const selectedOptions = autores\r\n        .filter(opcion => videoAntes.autor.includes(opcion.id)) // Filtra los que coincidan\r\n        .map(opcion => ({\r\n          value: opcion.id,\r\n          label: opcion.autor,\r\n        }));\r\n  \r\n     // console.log(\"Autores seleccionados:\", selectedOptions);\r\n      \r\n      setOptionsAutoresVideoSelected(selectedOptions);\r\n    }\r\n  };\r\n  const [optionsPalabrasClaves, setOptionsPalabrasClaves] = useState([]);\r\n  const [optionsPalabrasClavesVideoSelected, setOptionsPalabrasClavesVideoSelected] = useState([]);\r\n\r\n  const processPalabrasClaves = async () =>{\r\n    if(palabrasClaves){\r\n      const options = palabrasClaves.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.palabraClave,\r\n      }));\r\n      setOptionsPalabrasClaves(options)\r\n\r\n      const selectedOptions = palabrasClaves.flatMap(opcion =>\r\n        videoAntes.palabraClave.filter(palabraClaveVideo => opcion.id == palabraClaveVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.palabraClave,\r\n          }))\r\n      );\r\n      setOptionsPalabrasClavesVideoSelected(selectedOptions);\r\n      \r\n    }\r\n  }\r\n  const llenarCamposDefecto = async () => {\r\n    if (videoAntes) {\r\n     // console.log(videoAntes);\r\n      \r\n      \r\n      setVideo(prevVideo => ({\r\n        ...prevVideo,\r\n        especialidades: videoAntes.especialidad,\r\n        autores: videoAntes.autor,\r\n        palabrasClaves: videoAntes.palabraClave,\r\n        subEspecialidades: videoAntes.subEspecialidad,\r\n      }));\r\n    }\r\n    if(video.tipe_of_video == 2){\r\n      setVideo(prevVideo => ({\r\n        ...prevVideo,\r\n        serie: videoAntes.serie,\r\n        temporada: videoAntes.temporada\r\n      }));\r\n    }\r\n  };  \r\n  \r\n  useEffect(() => {\r\n    const processAll = async () => {\r\n      if (videoAntes) {\r\n        await processCategorias();\r\n        await processSubEspecialidades();\r\n        await processEspecialidades(); \r\n        await processAutores();\r\n        await processPalabrasClaves();\r\n        await llenarCamposDefecto();\r\n        setIsDataReady(true)\r\n      }\r\n    };\r\n\r\n    processAll();\r\n  }, [videoAntes]);\r\n  \r\n  if (isDataReady/* categorias && especialidades && subEspecialidades && palabrasClaves */ /* && autores *//*  && tipe_of_video &&\r\n    optionsCategoriasVideoSelected.length > 0 &&\r\n    optionsEspecialidadesVideoSelected.length > 0 &&\r\n    optionsPalabrasClavesVideoSelected.length > 0  */\r\n   /*  optionsAutoresVideoSelected.length > 0  */\r\n   ) {\r\n\r\n\r\n    const optionesTipoVideo = tipe_of_video.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.tipe_video,\r\n    }));\r\n    const optionsTipoVideoVideoSelected = []\r\n    tipe_of_video.map(async (opcion) => {\r\n      //console.log(videoAntes);\r\n        if(opcion.id == videoAntes.tipe_of_video){\r\n          \r\n          optionsTipoVideoVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.tipe_video,\r\n          })\r\n        }\r\n    });\r\n\r\n\r\n   /*  const optionsCategorias = categorias.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.categoria,\r\n    }));\r\n    const optionsCategoriasVideoSelected = []\r\n    categorias.map(async (opcion) => {\r\n      videoAntes.categorias.map(async (categoriaVideo,index) =>{\r\n        if(opcion.id == categoriaVideo){\r\n          optionsCategoriasVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.categoria,\r\n          })\r\n        }\r\n      })\r\n    });\r\n */\r\n/*     const optionsEspecialidades = especialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.especialidad,\r\n    }));\r\n    const optionsEspecialidadesVideoSelected = []\r\n    especialidades.map(async (opcion) => {\r\n      videoAntes.especialidad.map((especialidadVideo,index) =>{\r\n        if(opcion.id == especialidadVideo){\r\n          optionsEspecialidadesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.especialidad,\r\n          })\r\n        }\r\n      })\r\n    }); */\r\n\r\n   /*  const optionsSubEspecialidades = subEspecialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.subEspecialidad,\r\n    }));\r\n    const optionsSubEspecialidadesVideoSelected = []\r\n    subEspecialidades.map(async (opcion) => {\r\n      videoAntes.subEspecialidad.map((subEspecialidadVideo,index) =>{\r\n        if(opcion.id == subEspecialidadVideo){\r\n          optionsSubEspecialidadesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.subEspecialidad,\r\n          })\r\n        }\r\n      })\r\n    }); */\r\n\r\n   /*  const optionsAutores = autores.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.autor,\r\n    }));\r\n    const optionsAutoresVideoSelected = []\r\n    autores.map(async (opcion) => {\r\n        videoAntes.autor.map(async (autorVideo,index) =>{\r\n          if(opcion.id == autorVideo){\r\n            optionsAutoresVideoSelected.push({\r\n              value: opcion.id,\r\n              label: opcion.autor,\r\n            })\r\n          }\r\n        })\r\n      }); */\r\n      \r\n    /* const optionsPalabrasClaves = palabrasClaves.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.palabraClave,\r\n    }));\r\n    const optionsPalabrasClavesVideoSelected = []\r\n    palabrasClaves.map(async (opcion) => {\r\n        videoAntes.palabraClave.map(async (palabrasClavesVideo,index) =>{\r\n          if(opcion.id == palabrasClavesVideo){\r\n            optionsPalabrasClavesVideoSelected.push({\r\n              value: opcion.id,\r\n              label: opcion.palabraClave,\r\n            })\r\n          }\r\n        })\r\n      }); */\r\n \r\n    return (\r\n\r\n      <Container>\r\n      <div className=\"col-md-9 mx-auto d-flex justify-content-between mb-4\">\r\n        <div>\r\n          <h3 className=\"text-light\">Actualizar Video</h3>\r\n        </div>\r\n        <div className=\"\">\r\n          <button  onClick={() => window.history.back()} className=\"btn btn-light mt-4\" value=\"Volver\">Volver</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-9 mx-auto\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Tipo de video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTipoVideoVideoSelected}\r\n              options={optionesTipoVideo}\r\n              onChange={(selectedValue) => handleSelectTypeVideo(selectedValue, 'tipe_of_video')}\r\n            />\r\n          </div>\r\n          {isSerieSelectEnabled || videoAntes.tipe_of_video == 2 && (\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Serie\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsSeriesVideoSelected}             \r\n              options={optionsSeries}\r\n              onChange={(selectedValue) => handleSelectSerie(selectedValue, 'serie')}\r\n              />\r\n          </div>\r\n          )}\r\n          {isSerieSelectEnabled || videoAntes.tipe_of_video == 2  && (\r\n            <div className=\"mb-3\">\r\n              <label className=\"\" htmlFor=\"otroCampo\">\r\n                Temporada\r\n              </label>\r\n              <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTemporadasVideoSelected}             \r\n              options={optionsTemporadas}\r\n              onChange={(selectedValue) => handleSelectTem(selectedValue, 'temporada')}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"languages\">\r\n              Idiomas del video\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"languages\"\r\n              name=\"languages\"\r\n              value={video.languages}\r\n\r\n              onChange={handleSelectIdioma}\r\n              aria-label=\"languages\"\r\n              multiple={true}\r\n              required\r\n            >\r\n              <option value=\"1\">Español</option>\r\n              <option value=\"2\">Ingles</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"categorias\">\r\n              Categorías del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsCategorias}\r\n              defaultValue={optionsCategoriasVideoSelected}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'categorias')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Especialidades\">\r\n              Especialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsEspecialidades}\r\n              defaultValue={optionsEspecialidadesVideoSelected}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'especialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"SubEspecialidades\">\r\n              SubEspecialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={optionsSubEspecialidadesVideoSelected}\r\n              options={optionsSubEspecialidades}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'subEspecialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Autores\">\r\n              Autores del video \r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsAutores}\r\n              defaultValue={optionsAutoresVideoSelected}\r\n              isClearable\r\n              onChange={(selectedValues) => {\r\n                /* console.log(\"autor seleccionado\");\r\n                console.log(selectedValues); */\r\n                \r\n                handleSelectCategoryEspSub(selectedValues, 'autores')\r\n\r\n              }}\r\n              isMulti\r\n            />\r\n            <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarAutores()}>\r\n                    Registrar Autores\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"PalabrasClaves\">\r\n              PalabrasClaves del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsPalabrasClaves}\r\n              defaultValue={optionsPalabrasClavesVideoSelected}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'palabrasClaves')}\r\n              isMulti\r\n            />\r\n             <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarPalabrasClaves()}>\r\n                    Registrar Palabras Claves\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n\r\n            <div className=\"mb-3 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEsp\">\r\n                Código vimeo del video en español\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"code_esp\"\r\n                name=\"code_esp\"\r\n                value={video.code_esp || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en español\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 ms-2 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEngl\">\r\n                Código vimeo del video en ingles\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"codeEngl\"\r\n                name=\"code_engl\"\r\n                value={video.code_engl || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en ingles\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEspanol\">\r\n              Titulo en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEspanol\"\r\n              name=\"title_espanol\"\r\n              value={video.title_espanol}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en español\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEnglish\">\r\n              Titulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEnglish\"\r\n              name=\"title_english\"\r\n              value={video.title_english}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en Ingles\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          \r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n          <label className=\"\" htmlFor=\"titleCapEsp\">\r\n            Titulo del capitulo en Español\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"titleCapEsp\"\r\n            name=\"title_cap_esp\"\r\n            value={video.title_cap_esp || \"\"}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Titulo del capitulo en Español\"\r\n            maxLength=\"150\"\r\n          />\r\n        </div>\r\n          )}\r\n           {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleCapEnglish\">\r\n              Titulo del capitulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleCapEnglish\"\r\n              name=\"title_cap_english\"\r\n              value={video.title_cap_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo del capitulo en Ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          )}\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEsp\">\r\n              Descripción en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEsp\"\r\n              name=\"description_esp\"\r\n              value={video.description_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Descripción en español\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEnglish\">\r\n              Descripción en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEnglish\"\r\n              name=\"description_english\"\r\n              value={video.description_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Descripción en ingles\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n          <div className=\"mb-1 w-100\">\r\n            <label className=\"\" htmlFor=\"featuredImage\">\r\n              Imagen para banner\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"featuredImage\"\r\n              name=\"image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para banner\"              \r\n            />\r\n          </div>\r\n          <div className=\"mb-1 w-100 ms-2\">\r\n            <label className=\"\" htmlFor=\"minImage\">\r\n              Imagen para email\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"min_image\"\r\n              name=\"min_image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para Email\"                \r\n              />\r\n          </div>\r\n          </div>\r\n            <input  type=\"button\" onClick={obtenerVideoEnviar} value=\"Ver log\"/>\r\n          <div className=\"d-grid\">\r\n            {params.id ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Actualizar el video\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <PalabrasClavesModal\r\n          handleClose={handleClosePalabraClave}\r\n          show={showPalabraClave}\r\n          palabrasclaves_id ={idPalabraClave}\r\n          currentItem={currentItemPalabraClave}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormData = {setFormDataPalabraClave}\r\n          newData={newDataPalabraClave}\r\n        ></PalabrasClavesModal>\r\n        <AutoresModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          autores_id ={id}\r\n          currentItem={currentItem}\r\n          setAutores = {setAutores}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></AutoresModal>\r\n      </Container>\r\n    );\r\n  }else if(categorias && especialidades && subEspecialidades && palabrasClaves /* && autores */ && tipe_of_video && !videoAntes){\r\n    const optionsCategoriasCreate = categorias.map(opcion => ({\r\n      value: opcion.id,\r\n      label: opcion.categoria,\r\n    }));\r\n    const optionsSubEspecialidadesCreate = subEspecialidades.map(opcion => ({\r\n      value: opcion.id,\r\n      label: opcion.subEspecialidad,\r\n    }));\r\n    const optionsEspecialidadesCreate = especialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.especialidad,\r\n    }));\r\n    const optionsAutoresCreate = autores.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.autor,\r\n    }));\r\n    const optionsPalabrasClavesCreate = palabrasClaves.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.palabraClave,\r\n    }));\r\n\r\n    //console.log(optionsCategorias);\r\n    const optionesTipoVideo = tipe_of_video.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.tipe_video,\r\n    }));\r\n    if(series){\r\n      var optionsSeriesCreate = series.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.serie,\r\n      }));\r\n      //console.log(video);\r\n      if(temporadas){\r\n\r\n        var optionsTemporadasCreate = temporadas.filter(temporada =>temporada.serie == video.serie).map((opcion) => ({\r\n          value: opcion.id,\r\n          label: opcion.temporada,\r\n        }));\r\n      }\r\n    }\r\n \r\n    return (\r\n\r\n      <Container>\r\n      <div className=\"col-md-9 mx-auto mt-4 d-flex justify-content-between mb-4\">\r\n        <div>\r\n          <h3 className=\"text-light\">Crear Video</h3>\r\n        </div>\r\n        <div className=\"\">\r\n          <button  onClick={() => window.history.back()} className=\"btn btn-light mt-4\" value=\"Volver\">Volver</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-9 mx-auto\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Tipo de video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              options={optionesTipoVideo}\r\n              onChange={(selectedValue) => handleSelectTypeVideo(selectedValue, 'tipe_of_video')}\r\n            />\r\n          </div>\r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Serie\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsSeriesVideoSelected}             \r\n              options={optionsSeriesCreate}\r\n              onChange={(selectedValue) => handleSelectSerie(selectedValue, 'serie')}\r\n              />\r\n          </div>\r\n          )}\r\n          {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n              <label className=\"\" htmlFor=\"otroCampo\">\r\n                Temporada\r\n              </label>\r\n              <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTemporadasVideoSelected}             \r\n              options={optionsTemporadasCreate}\r\n              onChange={(selectedValue) => handleSelectTem(selectedValue, 'temporada')}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"languages\">\r\n              Idiomas del video\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"languages\"\r\n              name=\"languages\"\r\n              value={video.languages}\r\n\r\n              onChange={handleSelectIdioma}\r\n              aria-label=\"languages\"\r\n              multiple={true}\r\n              required\r\n            >\r\n              <option value=\"1\">Español</option>\r\n              <option value=\"2\">Ingles</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"categorias\">\r\n              Categorías del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsCategoriasCreate}\r\n              defaultValue={optionsCategoriasVideoSelected}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'categorias')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Especialidades\">\r\n              Especialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsEspecialidadesCreate}\r\n              defaultValue={optionsEspecialidadesVideoSelected}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'especialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"SubEspecialidades\">\r\n              SubEspecialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={optionsSubEspecialidadesVideoSelected}\r\n              options={optionsSubEspecialidadesCreate}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'subEspecialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-1\">\r\n            <label className=\"\" htmlFor=\"Autores\">\r\n              Autores del video \r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsAutoresCreate}\r\n              defaultValue={optionsAutoresVideoSelected.length > 0 ? optionsAutoresVideoSelected : \"\"}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'autores')}\r\n              isMulti\r\n            />\r\n            <div className=\"mt-2\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarAutores()}>\r\n                    Registrar Autores\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"PalabrasClaves\">\r\n              PalabrasClaves del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsPalabrasClavesCreate}\r\n              defaultValue={optionsPalabrasClavesVideoSelected.length > 0 ? optionsPalabrasClavesVideoSelected : \"\"}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'palabrasClaves')}\r\n              isMulti\r\n            />\r\n             <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarPalabrasClaves()}>\r\n                    Registrar Palabras Claves\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n\r\n            <div className=\"mb-3 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEsp\">\r\n                Código vimeo del video en español\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"code_esp\"\r\n                name=\"code_esp\"\r\n                value={video.code_esp || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en español\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 ms-2 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEngl\">\r\n                Código vimeo del video en ingles\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"codeEngl\"\r\n                name=\"code_engl\"\r\n                value={video.code_engl || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en ingles\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEspanol\">\r\n              Titulo en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEspanol\"\r\n              name=\"title_espanol\"\r\n              value={video.title_espanol}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en español\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEnglish\">\r\n              Titulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEnglish\"\r\n              name=\"title_english\"\r\n              value={video.title_english}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en Ingles\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          \r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n          <label className=\"\" htmlFor=\"titleCapEsp\">\r\n            Titulo del capitulo en Español\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"titleCapEsp\"\r\n            name=\"title_cap_esp\"\r\n            value={video.title_cap_esp || \"\"}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Titulo del capitulo en Español\"\r\n            maxLength=\"150\"\r\n          />\r\n        </div>\r\n          )}\r\n           {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleCapEnglish\">\r\n              Titulo del capitulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleCapEnglish\"\r\n              name=\"title_cap_english\"\r\n              value={video.title_cap_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo del capitulo en Ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          )}\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEsp\">\r\n              Descripción en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEsp\"\r\n              name=\"description_esp\"\r\n              value={video.description_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en español\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEnglish\">\r\n              Descripción en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEnglish\"\r\n              name=\"description_english\"\r\n              value={video.description_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en ingles\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n          <div className=\"mb-1 w-100\">\r\n            <label className=\"\" htmlFor=\"featuredImage\">\r\n              Imagen para banner\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"featuredImage\"\r\n              name=\"image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para banner\"              \r\n            />\r\n          </div>\r\n          <div className=\"mb-1 w-100 ms-2\">\r\n            <label className=\"\" htmlFor=\"minImage\">\r\n              Imagen para email\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"min_image\"\r\n              name=\"min_image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para Email\"                \r\n              />\r\n          </div>\r\n          </div>\r\n            <input  type=\"button\" onClick={obtenerVideoEnviar} value=\"Ver log\"/>\r\n          <div className=\"d-grid\">\r\n            {params.id ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Actualizar el video\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <PalabrasClavesModal\r\n          handleClose={handleClosePalabraClave}\r\n          show={showPalabraClave}\r\n          palabrasclaves_id ={idPalabraClave}\r\n          currentItem={currentItemPalabraClave}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormData = {setFormDataPalabraClave}\r\n          newData={newDataPalabraClave}\r\n        ></PalabrasClavesModal>\r\n        <AutoresModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          autores_id ={id}\r\n          currentItem={currentItem}\r\n          setAutores = {setAutores}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></AutoresModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"mt-5\" style={{ fontSize: \"25px\", display: \"flex\", justifyContent: \"center\", textAlign: \"center\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <div className=\"spinner-grow text-light mt-5\" role=\"status\">\r\n              <span className=\"sr-only\"></span>\r\n            </div>\r\n            Espera por favor\r\n          </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default VideoForm;","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/autores/\";\r\n\r\n/**\r\n * Función para consultar todas las autores registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\n  export const ListAutores = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  console.log(response);\r\n  \r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterAutor = async (newAutor) => {\r\n  const response = await axiosInstance.post(API_URL, newAutor);\r\n  console.log(response);\r\n\r\n  if (response.status === 200 || response.status === 201) { // Aceptar código 201\r\n    return response.data;\r\n  }\r\n\r\n  return null; // Devolver null si la respuesta no es la esperada\r\n};\r\n\r\nexport const getAutor = async (autor) => {\r\n  try {\r\n    const response = await axiosInstance.get(`${API_URL}${autor}`);\r\n    if (response.status === 200) {\r\n      return response.data; // No es necesario el `await`\r\n    }\r\n  } catch (error) {\r\n    console.error(\"❌ Error al obtener el autor:\", error);\r\n    return null; // Devuelve `null` en caso de error\r\n  }\r\n};\r\n\r\n\r\nexport const updateAutor = async(id,updAutor) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updAutor);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(API_URL);\r\n    return response.data; // no es necesario el await aquí\r\n  } catch (error) {\r\n    console.error(\"Error en ListCategorias:\", error);\r\n    throw error; // para que el componente lo capture\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/especialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterEspecialidad = async (newEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getEspecialidad = async (especialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${especialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateEspecialidad = async(id,updEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/palabrasclaves/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListPalabrasClaves = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n // console.log(\"registrar palabras claves\");\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getPalabraClave = async (PalabraClaveID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${PalabraClaveID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Función para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/subespecialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSubEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSubEspecialidad = async (newSubEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newSubEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSubEspecialidad = async (SubespecialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${SubespecialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateSubEspecialidad = async(id,updSubEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSubEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Función para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/tipos_de_Video/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTipoVideo = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n */\r\nconst  getTipoVideo = async (id) => {\r\n  const response = await axiosInstance.get(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n   /*  console.log(response.data.tipe_video); */\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n} */\r\nexport default getTipoVideo;","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\nexport const ListWebinars = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}public/webinars/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\nexport const ListVideosPublic = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}public/`);\r\n  if (response.status === 200) {\r\n    //console.log(response.data);\r\n    \r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/${temporadaId}`);\r\n  //console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  //console.log(response.data);\r\n  \r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n // console.log(response);\r\n  \r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  //console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","PUBLIC_ENDPOINTS","axiosInstance","localStorage","getItem","axios","baseURL","timeout","headers","accept","interceptors","request","use","config","token","isPublic","some","endpoint","url","includes","response","error","originalRequest","console","warn","Promise","reject","status","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","exp","post","refresh","setItem","access_token","refresh_token","defaults","log","clear","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","autor_id","setFormData","currentItem","newData","props","handleSubmit","e","preventDefault","formData","FormData","append","autor","autorServer","res","setAutores","classes","onHide","contentClassName","cloud","centered","closeButton","id","className","onSubmit","controlId","type","rows","name","value","onChange","target","variant","onClick","palabraclave_id","palabraClave","palabraClaveServer","setPalabrasClaves","history","useNavigate","params","useParams","animatedComponents","makeAnimated","useModal","handleShow","showPalabraClave","handleShowPalabraClave","handleClosePalabraClave","useState","selectedFile","setSelectedFile","selectedFile2","setSelectedFile2","code_esp","code_engl","title_espanol","title_english","title_cap_esp","title_cap_english","description_esp","description_english","tipe_of_video","languages","categorias","especialidades","subEspecialidades","autores","palabrasClaves","serie","temporada","video","setVideo","videoAntes","setVideoAntes","setCategorias","setTipe_of_video","setEspecialidades","setSubEspecialidades","series","setSeries","temporadas","setTemporadas","isSerieSelectEnabled","setIsSerieSelectEnabled","setIsTempSelectEnabled","setId","idPalabraClave","setCurrentItem","currentItemPalabraClave","setCurrentItemPalabraClave","initialFormData","newDataPalabraClave","setFormDataPalabraClave","isDataReady","setIsDataReady","handleSelectTypeVideo","selectedValue","fielName","handleSelectIdioma","Array","from","selectedOptions","option","registrarPalabrasClaves","registrarAutores","handleSelectCategoryEspSub","selectedValues","fieldName","autoresNoRegistrados","autoresConId","Map","autoresActuales","allSettled","map","AutorServer","label","set","responses","idExistente","get","forEach","index","push","length","all","respuestaAutorRegistrado","autorSeleccionado","handleSelectSerie","handleSelectTem","handleInputChange","files","featured_image","min_image","i","VideoServer","Swal","title","message","icon","then","reload","getVideo","videoID","getCategorias","CategoriaServer","getEspecialidades","EspecialidadServer","getSubEspecialidades","SubEspecialidadServer","getAutores","getPalabraClaves","PalabraClaveServer","getSeries","SerieServer","getTemporadas","TemporadaServer","getTipe_of_video","TipoVideoServer","obtenerVideoEnviar","useEffect","optionsSeriesVideoSelected","optionsSeries","opcion","optionsTemporadasVideoSelected","optionsTemporadas","optionsCategorias","setOptionsCategorias","optionsCategoriasVideoSelected","setOptionsCategoriasVideoSelected","processCategorias","options","categoria","flatMap","filter","categoriaVideo","optionsSubEspecialidades","setOptionsSubEspecialidades","optionsSubEspecialidadesVideoSelected","setOptionsSubEspecialidadesVideoSelected","processSubEspecialidades","subEspecialidad","subEspecialidadesVideo","optionsEspecialidades","optionsEspecialidadesVideoSelected","setOptionsEspecialidadesVideoSelected","processEspecialidades","especialidad","especialidadVideo","optionsAutores","setOptionsAutores","optionsAutoresVideoSelected","setOptionsAutoresVideoSelected","processAutores","optionsPalabrasClaves","setOptionsPalabrasClaves","optionsPalabrasClavesVideoSelected","setOptionsPalabrasClavesVideoSelected","processPalabrasClaves","palabraClaveVideo","llenarCamposDefecto","prevVideo","processAll","optionesTipoVideo","tipe_video","optionsTipoVideoVideoSelected","back","htmlFor","defaultValue","multiple","required","closeMenuOnSelect","components","isClearable","isMulti","alignItems","color","placeholder","maxLength","palabrasclaves_id","autores_id","optionsCategoriasCreate","optionsSubEspecialidadesCreate","optionsEspecialidadesCreate","optionsAutoresCreate","optionsPalabrasClavesCreate","optionsSeriesCreate","optionsTemporadasCreate","style","fontSize","justifyContent","textAlign","flexDirection","role","initialValue","setShow","ListAutores","RegisterAutor","newAutor","getAutor","updateAutor","updAutor","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","ListEspecialidades","RegisterEspecialidad","newEspecialidad","updateEspecialidad","updEspecialidad","ListPalabrasClaves","RegisterPalabraClave","newPalabraClave","updatePalabraClave","updPalabraClave","ListSeries","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListSubEspecialidades","RegisterSubEspecialidad","newSubEspecialidad","updateSubEspecialidad","updSubEspecialidad","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada","ListTipoVideo","getTipoVideo","ListVideos","ListWebinars","ListVideosPublic","ListPeliculas","ListCasos","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}