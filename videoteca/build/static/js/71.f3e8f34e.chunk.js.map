{"version":3,"file":"static/js/71.f3e8f34e.chunk.js","mappings":"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","sources":["axios.js","components/context/SliderContext.js","components/Icon/IconCross.js","components/slider/Content.js","components/Icon/IconArrowDown.js","components/slider/SlideButton.js","components/slider/SliderWrapper.js","components/slider/useSliding.js","components/slider/useSizeElement.js","components/slider/Slider.js","services/tipoVideo.js","components/slider/ShowDetailsButton.js","components/slider/Item.js","components/slider/index.js","components/videos/errorsBoundary.js","components/videos/search.js","components/videos/videoLoading.js","components/videos/videosCategoriaFila.js","components/videos/videosItem.js","services/category.js","services/historialUser.js","services/preferenciasUser.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from 'react';\r\n\r\nconst SliderContext = React.createContext();\r\n\r\nexport default SliderContext;","import React from 'react';\r\n\r\n/**\r\n * Componente para obtener el icon de flecha hacia el lado\r\n * @returns Icono flecha hacia el lado usado en el Slider\r\n */\r\nconst IconCross = () => (\r\n  <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 512\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default IconCross;","import React from 'react';\r\nimport IconCross from '../Icon/IconCross';\r\nimport './Content.scss';\r\n//import PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport '../../styles/content.css'\r\n\r\n//MaterialUI\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\n/**\r\n * Componente con los detalles del elemento.\r\n * @param {Object} video \r\n * @param {Function} onClose \r\n * @returns detalles del video.\r\n */\r\n\r\nconst Content = ({ video, onClose, ...props }) => {\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n      /* if (tiempo[2] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n      } */\r\n    }\r\n    return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n  };\r\n\r\n  return (\r\n  <div className=\"content mt-3 \">\r\n    <div className=\"content__background\">\r\n      <div className=\"content__background__shadow\" />\r\n      <div\r\n        className=\"content__background__image \"\r\n        style={{ 'backgroundImage': `url(https://sccotview.com${video.featured_image})` }}\r\n      />\r\n    </div>\r\n    <div className=\"content__area\"> \r\n      <div className=\"content__area__container\">\r\n        <div className=\"content__title pt-3\">\r\n          <h5>{video.title_espanol}</h5>\r\n        <Box\r\n            sx={{'& > legend': { mt: 2 }}}\r\n          >\r\n            <p className='h6'>{changeDuration(video.duration)}</p>\r\n            <div className=\"bg-light d-inline px-3 rounded-4 \">\r\n\r\n            <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n            </div>\r\n          </Box>\r\n        </div>\r\n       \r\n        <div className='content__button'>\r\n          <button className='content__button__glightbox_video' onClick={() => props.verVideo(video.id)}><svg width=\"131\" height=\"131\" viewBox=\"0 0 131 131\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path className=\"inner-circle\" d=\"M65 21C40.1488 21 20 41.1488 20 66C20 90.8512 40.1488 111 65 111C89.8512 111 110 90.8512 110 66C110 41.1488 89.8512 21 65 21Z\" fill=\"white\"></path>\r\n                    <circle className=\"outer_circle\" cx=\"65.5\" cy=\"65.5\" r=\"64\" stroke=\"white\"></circle>\r\n                    <path className=\"play\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M60 76V57L77 66.7774L60 76Z\" fill=\"#BF2428\"></path>\r\n                </svg></button>\r\n        </div>\r\n      </div>\r\n      <button className=\"content__close\" onClick={onClose}>\r\n        <IconCross />\r\n      </button>\r\n    </div>\r\n  </div>\r\n)};\r\n\r\nexport default Content;","import React from 'react';\r\n\r\n/**\r\n * Componente para obtener el icon de flecha hacia abajo\r\n * @returns Icono flecha hacia abajo usado en el Slider\r\n */\r\nconst IconArrowDown = () => (\r\n  <svg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default IconArrowDown;","import React from 'react';\r\nimport IconArrowDown from '../Icon/IconArrowDown'\r\nimport './SlideButton.scss'\r\n\r\n/**\r\n * Componente con el boton para mover los elementos del slider\r\n * @param {Function} onClick \r\n * @returns \r\n */\r\nconst SlideButton = ({ onClick, type }) => (\r\n  <button className={`slide-button slide-button--${type}`} onClick={onClick}>\r\n    <span>\r\n      <IconArrowDown />\r\n    </span>\r\n  </button>\r\n);\r\n\r\nexport default SlideButton;","import React from 'react'\r\nimport './SliderWrapper.scss'\r\n\r\n/**\r\n * Componente que envuelve los children del Slider\r\n * @param {*} children\r\n * @returns \r\n */\r\nconst SliderWrapper = ({ children }) => (\r\n  \r\n  <div className=\"slider-wrapper\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default SliderWrapper;","import { useState, useRef, useEffect } from 'react';\r\n\r\nconst PADDINGS = 10; // Paddings ajustados para una mejor visualización\r\nconst CARD_WIDTH = 300; // Ancho de cada tarjeta\r\n\r\nconst useSliding = (countElements) => {\r\n  const containerRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(0);\r\n  const [distance, setDistance] = useState(0);\r\n  const [totalInViewport, setTotalInViewport] = useState(0);\r\n  const [viewed, setViewed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const containerWidth = containerRef.current.clientWidth - PADDINGS;\r\n\r\n    setContainerWidth(containerWidth);\r\n    setTotalInViewport(Math.floor(containerWidth / CARD_WIDTH)); // Usamos floor en lugar de ceil\r\n  }, []);\r\n\r\n  const handlePrev = () => {\r\n    if (viewed > 0) {\r\n      setViewed(viewed - 1);\r\n      setDistance(distance + CARD_WIDTH);\r\n    }\r\n  };\r\n\r\n  const handleNext = (totalSlides) => {\r\n    if(viewed < totalSlides -1){\r\n      console.log(totalSlides);\r\n      console.log(viewed);\r\n\r\n      if (viewed < countElements - totalInViewport) {\r\n        setViewed(viewed + 1);\r\n        setDistance(distance - CARD_WIDTH);\r\n      }\r\n    }\r\n  };\r\n\r\n  const slideProps = {\r\n    style: {\r\n      transform: `translate3d(${distance}px, 0, 0)`,\r\n      transition: 'transform 0.4s ease' // Añadir transición para un deslizamiento suave\r\n    }\r\n  };\r\n\r\n  const hasPrev = viewed > 0; // Corregido para evitar desplazamiento adicional\r\n  const hasNext = viewed < countElements - totalInViewport; // Corregido para evitar desplazamiento adicional\r\n\r\n  return { handlePrev, handleNext, slideProps, containerRef, hasPrev, hasNext };\r\n};\r\n\r\nexport default useSliding;\r\n","import { useState, useRef, useEffect } from 'react'\r\n\r\n/**\r\n * Calcula el tamaño del slider.\r\n * @returns \r\n */\r\nconst useSizeElement = () => {\r\n  const elementRef = useRef(null);\r\n  const [width, setWidth] = useState(elementRef);\r\n  \r\n  useEffect(() => {\r\n    if(elementRef.current && elementRef.current.scrollWidth && elementRef.current.clientWidth){\r\n      setWidth(elementRef.current.clientWidth);\r\n    }\r\n    \r\n  }, []);\r\n\r\n  \r\n  return { width, elementRef }; \r\n}\r\n\r\nexport default useSizeElement;","import React, { useState } from 'react';\r\nimport cx from 'classnames';\r\nimport SliderContext from '../context/SliderContext';\r\nimport Content from './Content';\r\nimport SlideButton from './SlideButton';\r\nimport SliderWrapper from './SliderWrapper';\r\nimport useSliding from './useSliding';\r\nimport useSizeElement from './useSizeElement';\r\nimport './Slider.scss';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Slider = ({ children, activeSlide, ...props }) => {\r\n  const history = useNavigate();\r\n  const [currentSlide, setCurrentSlide] = useState(activeSlide);\r\n  const { width, elementRef } = useSizeElement();\r\n  const {\r\n    handlePrev,\r\n    handleNext,\r\n    slideProps,\r\n    containerRef,\r\n    hasNext,\r\n    hasPrev\r\n  } = useSliding(width, React.Children.count(children));\r\n\r\n  const handleSelect = video => {\r\n    setCurrentSlide(video);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setCurrentSlide(null);\r\n  };\r\n\r\n  const contextValue = {\r\n    onSelectSlide: handleSelect,\r\n    onCloseSlide: handleClose,\r\n    elementRef,\r\n    currentSlide,\r\n    history,\r\n  };\r\n\r\n  // Condición para determinar si se ha alcanzado el último vídeo\r\n  const isLastSlide = currentSlide === React.Children.toArray(children)[React.Children.count(children) - 1];\r\n  console.log(React.Children.count(children));\r\n  console.log(currentSlide);\r\n  return (\r\n    <SliderContext.Provider value={contextValue}>\r\n      <SliderWrapper>\r\n        <div className={cx('slider', { 'slider--open': currentSlide != null })}>\r\n          <div ref={containerRef} className=\"slider__container\" {...slideProps}>{children}</div>\r\n        </div>\r\n        {hasPrev && <SlideButton onClick={handlePrev} type=\"prev\" />}\r\n        {/* Agregamos la condición para no mostrar el botón de siguiente cuando se llega al último vídeo */}\r\n        {hasNext && !isLastSlide && <SlideButton onClick={()=>{handleNext(React.Children.count(children))}} type=\"next\" />}\r\n      </SliderWrapper>\r\n      {currentSlide && <Content video={currentSlide} verVideo={props.verVideo} onClose={handleClose} />}\r\n    </SliderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/tipos_de_Video/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTipoVideo = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n */\r\nconst  getTipoVideo = async (id) => {\r\n  const response = await axiosInstance.get(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n    console.log(response.data.tipe_video);\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n} */\r\nexport default getTipoVideo;","import React from 'react';\r\nimport IconArrowDown from '../Icon/IconArrowDown'\r\nimport './ShowDetailsButton.scss'\r\n\r\n/**\r\n * Componente con el boton para mostrar los detalles del elemento\r\n * @param {Function} onClick \r\n * @returns \r\n */\r\nconst ShowDetailsButton = ({ onClick }) => (\r\n  <button onClick={onClick} className=\"show-details-button mt-2\">\r\n    <span>\r\n      <IconArrowDown />\r\n    </span>\r\n  </button>\r\n);\r\n\r\nexport default ShowDetailsButton;","import React, { useEffect, useState } from \"react\";\r\nimport Rating from '@mui/material/Rating';\r\nimport getTipoVideo from '../../services/tipoVideo'\r\nimport cx from \"classnames\";\r\nimport SliderContext from \"../context/SliderContext\";\r\nimport ShowDetailsButton from \"./ShowDetailsButton\";\r\n//Lazy loading\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport fondoBlanco from '../../assets/fondoBlanco.png'\r\n\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n//import Mark from './Mark'\r\nimport \"./Item.scss\";\r\n//Components\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * Componente para mostrar el elemento en el slider\r\n * @param {Object} video \r\n * @returns \r\n */\r\nconst Item = ({ video,...props }) => {\r\n  const [duracion, setDuracion] = useState([]);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [tipoVideo, setTipoVideo] = useState('')\r\n\r\n  const toggleShowDetails = () => {\r\n    setShowDetails(!showDetails);\r\n  };\r\n\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n      /* if (tiempo[2] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n      } */\r\n    }\r\n    return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n  };\r\n  const handleTipoVideo =  async () =>{\r\n    let idTipoVideo = video.tipe_of_video\r\n    const response = await getTipoVideo(idTipoVideo)\r\n    setTipoVideo(response)\r\n\r\n  }\r\n  \r\n  useEffect(() => {\r\n    setDuracion(changeDuration(video.duration));\r\n    handleTipoVideo()\r\n    \r\n  }, [duracion, video.duration]);\r\n  return (\r\n    <SliderContext.Consumer>\r\n      {({ onSelectSlide, currentSlide, elementRef, history }) => {\r\n        const isActive = currentSlide && currentSlide.id === video.id;\r\n        \r\n        return (\r\n          <div\r\n            ref={elementRef}\r\n            className={cx(\"item\", {\r\n              \"item--open\": isActive,\r\n            })}\r\n          >\r\n            <div key={video.id} className=\"card   cursorPointer card-video\">\r\n            <small className=\"d-flex justify-content-end px-3 pt-1 \">{tipoVideo.tipe_video == \"videos\" ? \"Video\": \r\n                                                                      tipoVideo.tipe_video == \"casos\" ? \"Caso\" : \r\n                                                                      tipoVideo.tipe_video == \"series\" ? \"Serie\" : \"\"  }\r\n            </small>\r\n              \r\n              <Button onClick={() => props.verVideo(video.id) }>\r\n                \r\n                <LazyLoadImage effect=\"blur\"    src={`https://sccotview.com${video.featured_image}`} className=\"card-img-top cursorPointer imagen-container\" alt=\"...\" />\r\n              </Button>\r\n              {isActive}\r\n              \r\n              <div className=\"card-body p-0 px-2 d-flex flex-column justify-content-between\" key={video.id}>\r\n                \r\n                {console.log(video)}\r\n                <p className=\"truncate-text\" onClick={(event) => {event.stopPropagation(); onSelectSlide(video);}}>\r\n                  {video.title_espanol}\r\n                </p>\r\n                <div className=\"d-flex justify-content-between align-items-end\" onClick={(event) => event.stopPropagation()}>\r\n                  <div>\r\n                    <p>{duracion}</p>\r\n                  </div>\r\n                  <div className=\"bg-secondary rounded-2 mb-2 pt-1\" onClick={(event) => event.stopPropagation()}>\r\n                    <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ShowDetailsButton onClick={() => onSelectSlide(video)}></ShowDetailsButton>\r\n            </div>\r\n\r\n           {/*  <h5>{video.title_espanol}</h5>\r\n            <Button onClick={() => props.verVideo(video.id)}>\r\n            <div className=\"imagen-container\">\r\n              <img\r\n                src={\"https://sccotview.com\" + video.featured_image}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            </Button>\r\n            <ShowDetailsButton onClick={() => onSelectSlide(video)} />\r\n            {isActive}\r\n            \r\n            <p>Duración: {duracion}</p>\r\n            <p>aqui algoo</p>\r\n            { video.tipe_of_video === 1 ? \r\n                (\r\n                  <p >Video</p>\r\n                ) : video.tipe_of_video === 2 ?\r\n                (\r\n                <p >Serie</p>\r\n                ):\r\n                <p >Caso</p>\r\n            } */}\r\n          </div>\r\n        );\r\n      }}\r\n    </SliderContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import Slider from './Slider'\r\nimport Item from './Item'\r\n\r\nSlider.Item = Item;\r\n\r\nexport default Slider;","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({ error });\r\n  }\r\n\r\n  reloadPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n          <h3>Ha ocurrido un error por favor volver a cargar la página</h3>\r\n          <p>{error.toString()}</p>\r\n          <button onClick={this.reloadPage} className=\"btn btn-light\">Recargar página</button>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Select from 'react-select';\r\n\r\nimport \"../../index.css\";\r\n\r\n/**\r\n * Componente con el buscador y el filtro por categoria\r\n * @param {*} props \r\n * @returns Componente con el buscador y el filtro por categoria\r\n */\r\nconst SearchComponent = (props) => {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(props.categories);\r\n  }, [props.categories]);\r\n\r\n  if (categories) {\r\n    return (\r\n      <div className=\"wrapper mb-4 \" >\r\n        <div className=\"search-wrapper col-sm-12  d-lg-flex justify-content-between\">\r\n            <div>\r\n\r\n            <p className=\"text-light pb-0 mb-1\"> Buscas algo? </p>\r\n            <input\r\n              type=\"search\"\r\n              name=\"search-form\"\r\n              id=\"search-form\"\r\n              className=\"form-control bg-light  border-2 border-light\"\r\n              placeholder=\"Buscar por nombre\"\r\n              value={props.query}\r\n              onChange={(e) => props.setQuery(e.target.value)}\r\n              />\r\n              </div>\r\n          <div className=\"mt-3\">\r\n        \r\n            <select\r\n              onChange={(e) => props.setFilterParam(e.target.value)}\r\n              className=\"form-select form-select mb-3 py-2\"\r\n              aria-label=\"Filter Videos By Category\"\r\n            >\r\n              <option value=\"All\">Filtre por Categoria 🔠</option>\r\n              { categories.map((categ, index) => (\r\n                <option key={index} value={categ.categoria}>\r\n                  {categ.categoria}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <span className=\"focus\"></span>\r\n          </div>\r\n        </div>        \r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default SearchComponent;","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la función main de lo contrario retorna mensaje indicando que aún se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <p style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </p>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","/* eslint-disable array-callback-return */\r\nimport React from \"react\";\r\n//\r\nimport Slider from \"../slider/index\";\r\nimport '../../styles/slider.css'\r\nimport \"../../styles/styles.css\";\r\nimport \"../../styles/conCate.css\";\r\n\r\n/**\r\n * Componente que retorna los videos ordenados en un slider dependiendo de su categoria.\r\n * @param {*} param0 \r\n * @returns Slider con los videos.\r\n */\r\nconst VideosCategoriaFila = ({ categoria, verVideo, ...props }) => {\r\n  if (categoria) {\r\n    const videosEnCategoria = props.videos && props.search(props.videos).filter((video) => (\r\n      video.categorias.some((element) => categoria.categoria === element.categoria)\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        {videosEnCategoria.length > 0 && (\r\n          <div className=\"\">\r\n            <h2 className=\"titleCateg ms-3\" key={categoria.id}>| {categoria.categoria}<small > ▶</small></h2>\r\n            <div>\r\n              <Slider verVideo={verVideo}>\r\n                {videosEnCategoria.map((video) => (\r\n                  <Slider.Item\r\n                    key={video.id}\r\n                    video={video}\r\n                    histUsers={props.histUsers}\r\n                    user={props.user}\r\n                    verVideo={verVideo}\r\n                  >\r\n                  </Slider.Item>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VideosCategoriaFila;\r\n","import React from \"react\";\r\n\r\n//components\r\nimport { Image } from \"react-bootstrap\";\r\n//Lazy Loading\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\nimport fondoBlanco from '../../assets/fondoBlanco.png'\r\n\r\n//MaterialUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport '../../styles/styles.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n  },\r\n  letter: {\r\n  },\r\n  imagenCarousel:{\r\n    maxHeight:400, \r\n    objectFit:\"cover\",\r\n  },\r\n  listStyleNone:{\r\n    listStyle:'none'\r\n  },\r\n  \r\n  \"@media (min-width: 1200px)\": {\r\n    imagen:{\r\n      minWidth: 820,\r\n    },\r\n    imagenCarousel:{\r\n      width:1240,\r\n      height:450,\r\n      \r\n    },\r\n    row:{\r\n      width:1240,\r\n      maxheight:650,\r\n    },\r\n    \r\n    \r\n  },\r\n}));\r\nconst changeDuration = (duration) => {\r\n  let tiempo = duration.split(':');\r\n  let new_duration = \"\";\r\n  if (tiempo) {\r\n    if (tiempo[0] !== \"00\") {\r\n      new_duration = tiempo[0] + \"h\";\r\n    }\r\n    if (tiempo[1] !== \"00\") {\r\n      new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n    }\r\n    /* if (tiempo[2] !==\"00\") {\r\n      new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n    } */\r\n  }\r\n  return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n};\r\n\r\n/**\r\n * Componente para mostrar en el carousel los videos con algunos campos.\r\n * @param {*} video\r\n * @returns Item de un video.\r\n */\r\nconst VideosItem = ({ video,...props } ) => {\r\n  const classes = useStyles();\r\n\r\n  \r\n  return (\r\n    <div id=\"contenedorItemVideo\">\r\n      <Button onClick={(e) => props.verVideo(video.id)}>\r\n      <div className={\"row  \"+classes.row}>\r\n        <div className={\"col-md-7  col-12 imgPreview\" +classes.imagen}>          \r\n            <LazyLoadImage\r\n              effect=\"blur\"    src={\"https://sccotview.com\" + video.featured_image}\r\n              className={classes.imagenCarousel }\r\n            ></LazyLoadImage>\r\n        </div>\r\n        <div className={\"col-md-5 col-12 \" + classes.info}>\r\n          <div>\r\n          <div className=\"d-flex justify-content-between mt-3 text-capitalize mb-3\">\r\n            <p className=\"text-light h6\">{changeDuration(video.duration)}</p>\r\n            <Box sx={{'& > legend': { mt: 2 }}}>\r\n              <div className=\"bg-secondary d-inline pt-3 px-1 rounded-2\">\r\n                <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n              </div>\r\n            </Box>\r\n          </div>\r\n          <h6 className=\" text-light text-capitalize text-start border-bottom border-light pb-2\">{video.title_espanol}</h6>\r\n          <p className=\"text-light font-weight-light text-start text-lowercase truncate-text-6\">{video.description_esp}</p>\r\n          \r\n          {video.categorias && (\r\n            <ul className=\"d-flex flex-wrap justify-content-start p-0\">\r\n              {video.categorias.map(categoria => (\r\n                <li key={categoria.id} className=\"list-group-item list-group-item-light px-2 rounded-4\"><small className=\"text-capitalize   \">Categoria: {categoria.categoria}</small></li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideosItem;\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/historialUser/\";\r\n\r\n/**\r\n * Función para agregar un nuevo historial de usuario.\r\n * @param {formdata} newHistorial \r\n * @returns data enviada desde el backend\r\n */\r\nexport const RegisterHistorialUser = async (newHistorial) => {\r\n    const response = await axiosInstance.post(API_URL, newHistorial);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para entontrar todos los historiales de usuarios.\r\n * @returns data enviada desde el backend-\r\n */\r\nexport const ListHistorial = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\nexport const ListHistorial4Comments = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}list_4_comments/`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  \r\n/**\r\n * Función para obtener un historial en específico.\r\n * @param {pk} histID \r\n * @returns data enviada desde el backend\r\n */\r\nexport const getHistorial = async (histID) => {\r\n  console.log(histID);\r\n    const response = await axiosInstance.get(`${API_URL}${histID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para listar el historial de un usuario en específico.\r\n * @param {fk} idUser \r\n * @returns data enviada desde el backend\r\n */\r\nexport const ListHistorialUser = async (idUser) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_user/`,idUser);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actualizar un historial de usuario.\r\n * @param {pk} id \r\n * @param {formdata} updateHU \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateHistorialUser = async(id,updateHU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updateHU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/gustos_by_users/\";\r\n\r\n/**\r\n * Función para agregar preferencias(gustos) de un usuario.\r\n * @param {formData} newPreferencia \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const RegisterPreferenciaUser = async (newPreferencia) => {\r\n    const response = await axiosInstance.post(API_URL, newPreferencia);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las preferencias de usuario.\r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const ListPreferencia = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia en específico.\r\n   * @param {pk} histID \r\n   * @returns La data enviada desde el backend.\r\n   */\r\nexport const getPreferencia = async (ID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${ID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia de un usuario en específico.\r\n   * @param {fk} idUser \r\n   * @returns La data enviada desde el backend.\r\n   */\r\nexport const ListPreferenciaUser = async (idUser) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_user/`,idUser);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * función para obtener actualizar la preferencia de un usuario.\r\n * @param {*} id \r\n * @param {*} updatePU \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const updatePreferenciaUser = async(id,updatePU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updatePU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}\r\nexport const deletePreferencia = async (id) => {\r\n  const response = await axiosInstance.delete(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n    Swal.fire({\r\n      title: response.data.message,\r\n      icon: \"success\"\r\n    }).then(res=>{\r\n      window.location.reload();\r\n    }).catch(()=>{\r\n      Swal.fire({\r\n        title: \"Lo sentimos no fue posible eliminar la preferencia, intenta nuevamente mas tarde\",\r\n        icon: \"warning\"\r\n      })\r\n    })\r\n    \r\n    return await response.data;\r\n  }\r\n};","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  console.log(\"listar videos de la serie\" + temporadaId);\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/`);\r\n  console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","React","role","xmlns","viewBox","fill","d","video","onClose","props","className","style","featured_image","title_espanol","Box","sx","mt","duration","tiempo","new_duration","trim","changeDuration","Rating","name","value","parseFloat","score","precision","readOnly","onClick","verVideo","id","width","height","cx","cy","r","stroke","fillRule","clipRule","type","children","countElements","containerRef","useRef","useState","setContainerWidth","distance","setDistance","totalInViewport","setTotalInViewport","viewed","setViewed","useEffect","containerWidth","current","clientWidth","floor","handlePrev","handleNext","totalSlides","slideProps","transform","transition","hasPrev","hasNext","elementRef","setWidth","scrollWidth","activeSlide","history","useNavigate","currentSlide","setCurrentSlide","useSizeElement","useSliding","handleClose","contextValue","onSelectSlide","onCloseSlide","isLastSlide","ref","getTipoVideo","tipe_video","duracion","setDuracion","tipoVideo","setTipoVideo","handleTipoVideo","idTipoVideo","tipe_of_video","isActive","Button","LazyLoadImage","effect","src","alt","event","stopPropagation","Slider","Item","ErrorBoundary","reloadPage","reload","state","this","setState","categories","setCategories","placeholder","query","onChange","e","setQuery","target","setFilterParam","map","categ","index","categoria","Component","isLoading","fontSize","display","justifyContent","textAlign","flexDirection","alignItems","videosEnCategoria","videos","search","filter","categorias","some","element","length","histUsers","user","useStyles","makeStyles","theme","paper","letter","imagenCarousel","maxHeight","objectFit","listStyleNone","listStyle","imagen","minWidth","row","maxheight","classes","info","description_esp","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","RegisterHistorialUser","newHistorial","ListHistorial","getHistorial","histID","ListHistorialUser","idUser","updateHistorialUser","updateHU","RegisterPreferenciaUser","newPreferencia","ListPreferenciaUser","deletePreferencia","Swal","title","message","icon","res","ListVideos","ListPeliculas","ListVideosPorTemporada","temporadaId","ListCasos","getVideo","videoID","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}