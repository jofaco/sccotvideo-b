{"version":3,"file":"static/js/859.554d5e50.chunk.js","mappings":"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","sources":["components/series/serieDetail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {useLocation, useNavigate} from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from '@mui/material/Rating';\r\n\r\n//dependencias\r\nimport * as VideoServer from \"../../services/videoServer\";\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\n\r\n\r\nimport * as HistorialUserServer from \"../../services/historialUser\";\r\nimport * as commentaryServer from \"../../services/commentary\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n//MaterialUI\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from '@mui/material/Button';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\n\r\n//components\r\nimport \"../../styles/styles.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  }\r\n}));\r\n/**\r\n * Funci贸n para mostrar el detalle de un video y guardar la puntuaci贸n.\r\n * @returns Componente que muestra el detalle de un video junto con el iframe\r\n */\r\nconst SerieDetail = () => {\r\n  const history = useNavigate();\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [show2, handleShow2, handleClose2] = useModal(false);\r\n  const [histUsers, setHistUsers] = useState();  \r\n\r\n  const location = useLocation();\r\n  const { id } = useParams();\r\n  const [video, setVideo] = useState([]);\r\n  const [serie, setSerie] = useState([]);\r\n  const [temporada,setTemporada] = useState([]);\r\n  const [duracion, setDuracion] = useState([]);\r\n  const [uploadDate, setUploadDate] = useState(null);\r\n  const [histUser, setHistUser] = useState(location.state);\r\n  const [commentaries, setCommentaries] = useState([]);\r\n  const [activeStar, setActiveStar] = useState(-1);\r\n  const [cantidadVideosSerie, setCantidadVideosSerie] = useState(1);\r\n  const totalStars = 5;\r\n\r\n  \r\n /*  useEffect(() => {\r\n    const getSeries = async (serieID) => {\r\n      const res = await SerieServer.getSerie(2);\r\n      const serie = res;\r\n      console.log(serie);\r\n\r\n      setSerie({\r\n        ...serie,\r\n      });\r\n    };\r\n    getSeries(video.serie);\r\n\r\n  }, []); */\r\n    useEffect(() => {\r\n    const getTemporada = async () => {\r\n    const res = await TemporadaServer.getTemporada(id)\r\n    const temporada = res;\r\n    console.log(temporada);\r\n        setTemporada(temporada)\r\n    };\r\n    getTemporada(id)\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getVideos = async () => {\r\n    const res = await VideoServer.ListVideos()\r\n    const videos = res;\r\n    \r\n    setVideo(videos.videos)\r\n   \r\n      };\r\n    getVideos()\r\n\r\n  }, []);\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n      /* if (tiempo[2] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n      } */\r\n    }\r\n    return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n  };\r\n  \r\n  \r\n  const getHistorialUsers = async () => {\r\n    try {\r\n      const res = await HistorialUserServer.ListHistorial();\r\n      console.log(res);\r\n      setHistUsers(res[0]);// aqui se le coloco el [0] porque si no me estaria llamando a todos los usuarios\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHistorialUsers();\r\n  }, []);\r\n\r\n\r\n\r\n  const entrarVideo = (videoId)=>{\r\n    history(`/seeVideo/${videoId}`,{state:histUsers});\r\n  }\r\n  \r\n\r\n   useEffect(() => {      \r\n    if (histUser) {\r\n      setActiveStar(histUser.user_score-1);\r\n    } else {\r\n      history(\"/loginuser\");      \r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []) \r\n\r\n  /**\r\n   * Funci贸n para cambiar la calificaci贸n del video.\r\n   * @param {int} index \r\n   */\r\n  const handleClick = async (index) => {\r\n    setActiveStar(index);\r\n    let cumulative_score = video.cumulative_score;\r\n    let number_votes = video.numberOfVotes;\r\n\r\n    if (histUser.user_score) {\r\n      cumulative_score = cumulative_score - histUser.user_score + index+1;\r\n      const score_video = cumulative_score/number_votes;\r\n      setHistUser({...histUser, user_score:index+1});\r\n      await VideoServer.partialUpdateVideo(video.id, {'cumulative_score': cumulative_score, 'score': score_video})\r\n\r\n    } else {\r\n      number_votes +=1;\r\n      cumulative_score = cumulative_score + index+1;\r\n      const score_video = cumulative_score/number_votes;\r\n      setHistUser({...histUser, user_score:index+1});\r\n      await VideoServer.partialUpdateVideo(video.id, {'cumulative_score': cumulative_score,'numberOfVotes': number_votes,'score': score_video})\r\n    }\r\n    await HistorialUserServer.updateHistorialUser(histUser.id,{'user_score': index+1});\r\n\r\n  };\r\n  \r\n  if (histUser) {\r\n    return (\r\n    <section className=\"d-flex justify-content-center\">\r\n      \r\n    <section style={{maxWidth:\"1450px\",minWidth:\"50%\", padding:\"20px\"}} >\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button  onClick={() => window.history.back()} className=\"btn btn-light\" value=\"Volver\">Volver</button>\r\n      </div>\r\n      <div>\r\n        \r\n        <div className=\"pb-5\">\r\n          <h2> {temporada.temporada}</h2>\r\n          <p className=\"\">{temporada.description}</p>\r\n          <div>\r\n\r\n          <p className=\"border border-warning d-inline p-2 rounded text-warning\">{video.filter((v) => v.temporada === temporada.id).length} Videos</p>\r\n          {/* <button className=\"btn btn-warning mx-2\">Nombre Serie </button> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex flex-wrap \">\r\n        {video\r\n  .filter((video) => video.temporada === temporada.id).sort((a,b)=>a.id-b.id)\r\n  .map((filteredVideo) => (\r\n    <div key={filteredVideo.id} className=\"card bg-dark  m-2 cursorPointer card-video \" onClick={() => entrarVideo(filteredVideo.id)}>\r\n      <LazyLoadImage effect=\"blur\"    src={`https://sccotview.com${filteredVideo.featured_image}`} className=\"card-img-top cursorPointer  \" alt=\"...\" />\r\n      <div className=\"card-body pb-0 d-flex  flex-column justify-content-between \" key={filteredVideo.id}>\r\n        <h6 className=\"truncate-text\">\r\n          {filteredVideo.title_espanol}\r\n        </h6>\r\n        <small className=\"truncate-text\">\r\n          {filteredVideo.description_esp}   \r\n        </small>\r\n        <div className=\"d-flex justify-content-between \">\r\n          <p>{changeDuration(filteredVideo.duration)}</p>\r\n          <div>\r\n          <Rating name=\"read-only\" value={parseFloat(filteredVideo.score)} precision={0.5} readOnly />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))}\r\n\r\n        </div>\r\n      </div>\r\n    </section>\r\n    </section>\r\n\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default SerieDetail;\r\n"],"names":["makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","history","useNavigate","useModal","useState","histUsers","setHistUsers","location","useLocation","id","useParams","video","setVideo","temporada","setTemporada","state","histUser","setActiveStar","useEffect","getTemporada","TemporadaServer","res","console","log","getVideos","VideoServer","videos","changeDuration","duration","tiempo","split","new_duration","trim","getHistorialUsers","HistorialUserServer","user_score","className","style","maxWidth","minWidth","padding","onClick","window","back","value","description","filter","v","length","sort","a","b","map","filteredVideo","videoId","LazyLoadImage","effect","src","featured_image","alt","title_espanol","description_esp","name","parseFloat","score","precision","readOnly","fontSize"],"sourceRoot":""}