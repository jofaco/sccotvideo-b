{"version":3,"file":"static/js/649.c383d0d0.chunk.js","mappings":"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","sources":["axios.js","components/Notification.js","components/users/login.js","hooks/useUser.js","services/auth.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n}));\r\n/**\r\n * \r\n * @returns Componente con mensaje de alerta al ingresar mal las credenciales de autenticación\r\n */\r\nfunction Notification() {\r\n  const classes = useStyles();\r\n\r\n  return function ntf({ message, ...props }) {\r\n    if (!message) return <p></p>;\r\n    return (\r\n      <p className={classes.link} style={{ fontSize: \"25px\", color: \"red\" }}>\r\n        {message}\r\n      </p>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Notification;\r\n\r\n\r\n","import { useState, useEffect } from \"react\";\r\n\r\n//dependencies\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useUser from \"../../hooks/useUser\"\r\n//MaterialUI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Notification from \"../Notification\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: 'white',\r\n    color:'black',\r\n    padding:'30px',\r\n    borderRadius:'15px',  \r\n    boxShadow:'5px 5px 10px #222261'\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: 'dark',\r\n    width:'80px',\r\n    height:'80px',\r\n    border:'2px solid #4949a5'\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),   \r\n    \r\n  },\r\n  texto: {\r\n\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding:'12px 0'\r\n  },\r\n  \r\n}));\r\n\r\n/**\r\n * Función para mostrar componente de login y hacer la validación de login con el backend.\r\n * @param {boolean} param0 \r\n * @returns redirecciona al index si es correcto el login, de lo contrario muestra mensaje de error.\r\n */\r\nexport default function SignIn({onLogin}) {\r\n  const history = useNavigate();\r\n  const {isLoginLoading, hasLoginError, login, isLogged} = useUser()\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const initialFormData = Object.freeze({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const Notificacion = Notification();\r\n  const [formData, updateFormData] = useState(initialFormData);\r\n\r\n  /**\r\n   * Verifica cambios en el formulario y agrega los valores al formData\r\n   * @param {*} e \r\n   */\r\n  const handleChange = (e) => {\r\n    updateFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value.trim(),\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Valida si el login es correcto para redireccionar al index\r\n   */\r\n  useEffect(() => {\r\n    if (isLogged) {\r\n      history('/')\r\n      onLogin && onLogin();\r\n      window.location.reload();\r\n    }\r\n  }, [history, isLogged,onLogin]);\r\n\r\n  /**\r\n   * Valida si el login es incorrecto para enviar mensaje de error\r\n   */\r\n  useEffect(() => {\r\n    if (hasLoginError) {\r\n      \r\n      Swal.fire({\r\n        title: \"Lo sentimos no fue posible iniciar sesión\",\r\n        text: \"Puedes contactarnos al correo inscripciones@sccot.org.co\",\r\n        icon: \"error\"\r\n      });\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  }, [hasLoginError])\r\n  \r\n  /**\r\n   * Envia los datos del formulario a la función login que está en el hook useUser para consultar con el backend.\r\n   * @param {*} e \r\n   */\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();    \r\n    login({\r\n      username: formData.email,\r\n      password: formData.password,\r\n    })    \r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"\">{isLoginLoading && <strong className=\"d-flex justify-content-center flex-column align-items-center\">\r\n      <div className=\"spinner-grow text-light \" role=\"status\">\r\n      </div>\r\n        <br />\r\n        <br />\r\n        <span className=\"sr-only d-inline\">Cargando por favor espere...</span>\r\n      </strong>}\r\n      {!isLoginLoading &&\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}></Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar sesión\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              className={classes.texto} \r\n              \r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electronico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n            className={classes.texto}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleLogin}\r\n            >\r\n              Ingresar\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <span  variant=\"body2\" className=\"cursorPointer\" onClick={()=>{alert(\"Puedes contactarnos al correo inscripciones@sccot.org.co\")}}>\r\n                  Olvidaste la contraseña?\r\n                </ span>\r\n              </Grid>\r\n              \r\n            </Grid>\r\n          </form>        \r\n        </div>\r\n      </Container>\r\n       }\r\n       { hasLoginError &&  <Notificacion message={errorMessage} />\r\n       }\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//dependencias\r\nimport Context from \"../components/context/UserContext\";\r\nimport {Login} from \"../services/auth\";\r\nimport axiosInstance from \"../axios\";\r\n\r\n\r\n\r\n/**\r\n * Hook para realizar login y logout \r\n * @returns Funciones necesarias para login y logout.\r\n */\r\nexport default function useUser() {\r\n    const history = useNavigate();\r\n    const { jwt, setUSER, setJWT } = useContext(Context)\r\n    const [state, setState] = useState({ loading: false, error: false });\r\n\r\n    /**\r\n     * Función para validar con el backend si las credenciales son correctas.\r\n     */\r\n  const login = useCallback(\r\n    ({ username, password }) => {\r\n      setState({ loading: true, error: false });\r\n      Login({ username, password }).then(\r\n        (res) => {\r\n          window.localStorage.setItem(\"access_token\", res.data.access_token)\r\n          window.localStorage.setItem(\"refresh_token\", res.data.refresh_token)\r\n          window.localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n\r\n          axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + localStorage.getItem(\"access_token\");\r\n\r\n          setState({ loading: false, error: false })\r\n          setJWT(res.data.access_token)\r\n          setUSER(res.data.user)\r\n        })\r\n        .catch((err) => {\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          setState({ loading: false, error: true })\r\n          console.error(err)\r\n        });\r\n    },[setJWT, setUSER]);\r\n\r\n  /**\r\n   * Función para realizar el logout.\r\n   */\r\n  const logout = useCallback(() => {\r\n    axiosInstance.post(\"logout/\", {\r\n        refresh_token: localStorage.getItem(\"refresh_token\"),\r\n      });\r\n    localStorage.removeItem(\"access_token\");\r\n    localStorage.removeItem(\"refresh_token\");\r\n    localStorage.removeItem(\"user\");\r\n  \r\n    axiosInstance.defaults.headers[\"Authorization\"] = null;\r\n    setJWT(null);\r\n    history(\"/\");\r\n    window.location.reload();\r\n  }, [history, setJWT]);\r\n\r\n  return {\r\n    isLogged: Boolean(jwt),\r\n    isLoginLoading: state.loading,\r\n    hasLoginError: state.error,\r\n    login,\r\n    logout,\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar login\r\n * @param {formdata} credentials \r\n * @returns data enviada desde el backend\r\n */\r\nexport const Login = async (credentials) => {\r\n  const data = await axios.post(API_URL + \"login/\", credentials);\r\n  return data;\r\n};\r\n/**\r\n * Función para consultar un usuario en específico.\r\n * @param {pk} userID \r\n * @returns data enviada desde el backend\r\n */\r\nexport const getUser = async (userID) => {\r\n  const response = await axiosInstance.get(`${API_URL}users/${userID}`);\r\n  if (response.status === 200) {\r\n    console.log(response)\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar la imagen de perfil de un usuario.\r\n * @param {id} userID \r\n * @param {img} updateImg \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateImage = async (userID,updateImg) => {\r\n  const response = await axiosInstance.patch(`${API_URL}users/${userID}/`,updateImg);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","link","margin","spacing","classes","message","className","style","fontSize","color","paper","marginTop","display","flexDirection","alignItems","backgroundColor","padding","borderRadius","boxShadow","avatar","width","height","border","form","texto","palette","common","white","submit","SignIn","onLogin","history","useNavigate","useUser","isLoginLoading","hasLoginError","login","isLogged","useState","errorMessage","setErrorMessage","initialFormData","Object","freeze","email","password","Notificacion","Notification","formData","updateFormData","handleChange","e","target","name","value","trim","useEffect","reload","Swal","title","text","icon","setTimeout","role","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","onClick","preventDefault","username","Grid","container","item","xs","alert","useContext","Context","jwt","setUSER","setJWT","loading","state","setState","useCallback","Login","res","stringify","user","logout","Boolean","credentials","getUser","userID","updateImage","updateImg"],"sourceRoot":""}