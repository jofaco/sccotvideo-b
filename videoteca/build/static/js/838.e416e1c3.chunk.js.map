{"version":3,"file":"static/js/838.e416e1c3.chunk.js","mappings":"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","sources":["axios.js","components/series/temporadaModal.js","components/series/listTemporadas.js","components/admin/TemporadasAdmin.js","components/videos/errorsBoundary.js","components/videos/videoLoading.js","hooks/useModal.js","services/serie.js","services/temporada.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//toc贸 cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Funci贸n que valida si existe y es valido un access_token para manejo de sesi贸n\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport { ErrorBoundary } from \"../videos/errorsBoundary\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalTemporada = ({ handleClose, show, temporada_id, currentItem, setFormData, newData, listSeries, ...props}) => {\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectSerie = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    //here\r\n    let value = Array.from(target.selectedOptions, (option) => option.value);\r\n    setFormData({ ...newData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!temporada_id) {\r\n        formData.append(\"temporada\", newData.temporada);\r\n        formData.append(\"temporada_letras\", newData.temporada_letras);\r\n        formData.append(\"temporada_numero\", newData.temporada_numero);\r\n        formData.append(\"description\", newData.description);\r\n        formData.append(\"serie\", newData.serie);\r\n\r\n        await TemporadaServer.RegisterTemporada(formData);\r\n      } else {\r\n        formData.append(\"temporada\", newData.temporada);\r\n        formData.append(\"temporada_letras\", newData.temporada_letras);\r\n        formData.append(\"temporada_numero\", newData.temporada_numero);\r\n        formData.append(\"description\", newData.description);\r\n        formData.append(\"serie\", newData.serie);\r\n        await TemporadaServer.updateTemporada(temporada_id, formData);        \r\n      }\r\n      const res = await TemporadaServer.ListTemporadas();\r\n      const data = await res;\r\n      props.setTemporadas(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <ErrorBoundary>\r\n      <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n      >\r\n        <Modal.Header closeButton >\r\n          <Modal.Title id=\"tituloModal\" ><h2>{temporada_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body id=\"bodyModal\" >\r\n          <Form onSubmit={handleSubmit}  >\r\n            <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control type=\"text\" \r\n              name=\"temporada\"\r\n              placeholder=\"Nombre de la temporada\"\r\n              value={newData.temporada || \"\"}\r\n              onChange={handleInputChange} \r\n              />\r\n            </Form.Group><br></br>\r\n            <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control type=\"text\" \r\n              name=\"temporada_letras\"\r\n              placeholder=\"Temporada en letras\"\r\n              value={newData.temporada_letras || \"\"}\r\n              onChange={handleInputChange} \r\n              />\r\n            </Form.Group><br></br>\r\n            <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control type=\"number\" \r\n              name=\"temporada_numero\"\r\n              placeholder=\"Temporada en n煤mero\"\r\n              value={newData.temporada_numero || null}\r\n              onChange={handleInputChange} \r\n              />\r\n            </Form.Group><br></br>\r\n            <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control as=\"textarea\" rows={3}\r\n              name=\"description\"\r\n              placeholder=\"Descripci贸n de la temporada\"\r\n              value={newData.description || \"\"}\r\n              onChange={handleInputChange} \r\n              />\r\n            </Form.Group><br></br>\r\n            <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Select\r\n              name=\"serie\"\r\n              placeholder=\"Serie a la que pertenece\"\r\n              value={newData.serie || 2}\r\n              onChange={handleSelectSerie} \r\n              >\r\n              {\r\n                listSeries.map((Serie, index) => (\r\n                  <option key={Serie.id} value={Serie.id}>\r\n                    {Serie.serie}\r\n                  </option>\r\n                ))\r\n              }\r\n              </Form.Select>\r\n            </Form.Group><br></br>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n              {temporada_id ? 'Guardar Cambios' : 'Crear'}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </ErrorBoundary>\r\n\r\n    \r\n    \r\n  )\r\n};\r\n\r\nexport default ModalTemporada;","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport TemporadaModal from \"./temporadaModal\";\r\nimport * as serieServer from \"../../services/serie\";\r\n\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n\r\n\r\nconst SubEspecialidadList = ({temporadas}) => {\r\n  const history = useNavigate();\r\n  const [listSeries, setSeries] = useState(null);\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState(null);\r\n  const [listTemporadas, setTemporadas] = useState(temporadas);\r\n  const initialFormData = {temporada:\"\",temporada_letras:\"\", temporada_numero:0, description:\"\", serie:1};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ temporada:item.temporada,temporada_letras: item.temporada_letras, temporada_numero: item.temporada_numero, description: item.description, serie: item.serie });\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({temporada:\"\",temporada_letras:\"\", temporada_numero:0, description:\"\", serie:1});\r\n    handleShow(true)\r\n  };\r\n\r\n\r\n  const getTemporadas = async () => {\r\n    try {\r\n      const res = await TemporadaServer.ListTemporadas();\r\n      const data = await res;\r\n      setTemporadas(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getSeries = async () => {\r\n  try {\r\n      const res = await serieServer.ListSeries();\r\n      const data = await res;      \r\n      setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (user && user.is_superuser) {\r\n      getSeries();\r\n      getTemporadas();\r\n      setId(null)\r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  if (user && listSeries) {\r\n    \r\n    return (\r\n      <Container> \r\n        \r\n        <div className={classes.paper}>\r\n\r\n              <h1 className=\"mt-4 text-center\">Temporadas</h1>\r\n        </div>\r\n        <Stack  alignItems=\"center\">\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar Temporada\r\n          </Button>\r\n        </Stack>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 11, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>Temporada</th>\r\n                  <th>Temporada en tetras</th>\r\n                  <th>Temporada en n煤mero</th>\r\n                  <th>Descripci贸n</th>\r\n                  <th>Fecha de registro</th>\r\n                  <th>Serie</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listTemporadas.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listTemporadas.map((Temporada, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{Temporada.id}</td>\r\n                      <td>{Temporada.id}</td>\r\n                      <td>{Temporada.temporada}</td>\r\n                      <td>{Temporada.temporada_letras}</td>\r\n                      <td>{Temporada.temporada_numero}</td>\r\n                      <td>{Temporada.description}</td>\r\n                      <td>{Temporada.create_date}</td>\r\n                      <td>{Temporada.serie}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-primary p-1 btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(Temporada)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <TemporadaModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          temporada_id ={id}\r\n          currentItem={currentItem}\r\n          setTemporadas = {setTemporadas}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n          listSeries={listSeries}\r\n        ></TemporadaModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default SubEspecialidadList;\r\n","import { useEffect, useState } from \"react\";\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport listTemporadas from \"../series/listTemporadas\"\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n/**\r\n * Carga todos los videos que sean 'Series' para el modulo Series de la aplicaci贸n\r\n */\r\nfunction AppTemporadas() {\r\n  const TemporadaLoading = VideoLoadingComponent(listTemporadas);\r\n  const { user } = useContext(Context);\r\n\r\n  const [appState, setAppState] = useState({\r\n    loading: true,\r\n    temporadas: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    TemporadaServer.ListTemporadas().then((res) => {\r\n      const allTemporadas = res;\r\n      setAppState({ loading: false, temporadas: allTemporadas });\r\n    });\r\n  }, [setAppState]);\r\n\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <TemporadaLoading isLoading={appState.loading} temporadas={appState.temporadas} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n}\r\nexport default AppTemporadas;\r\n","import React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    this.setState({ error });\r\n  }\r\n\r\n  reloadPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    if (error) {\r\n      return (\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n          <h3>Ha ocurrido un error por favor volver a cargar la p谩gina</h3>\r\n          <p>{error.toString()}</p>\r\n          <button onClick={this.reloadPage} className=\"btn btn-light mt-4\">Recargar p谩gina</button>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la funci贸n main de lo contrario retorna mensaje indicando que a煤n se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //funci贸n para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //funci贸n para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Funci贸n para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Funci贸n para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","temporada_id","setFormData","currentItem","newData","listSeries","props","handleInputChange","e","name","target","value","handleSubmit","preventDefault","formData","FormData","append","temporada","temporada_letras","temporada_numero","description","serie","TemporadaServer","res","setTemporadas","classes","Modal","onHide","contentClassName","cloud","centered","closeButton","id","Form","onSubmit","className","controlId","type","placeholder","onChange","as","rows","Array","from","selectedOptions","option","map","Serie","index","variant","onClick","temporadas","history","useNavigate","useState","setSeries","useModal","handleShow","setId","setCurrentItem","listTemporadas","user","useContext","Context","paper","marginTop","spacing","marginBottom","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getTemporadas","getSeries","serieServer","useEffect","is_superuser","Container","Stack","Button","style","fontSize","backgroundColor","length","colSpan","Temporada","create_date","TemporadaLoading","VideoLoadingComponent","loading","appState","setAppState","isLoading","ErrorBoundary","reloadPage","reload","state","this","setState","role","children","React","Component","justifyContent","initialValue","setShow","ListSeries","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada"],"sourceRoot":""}