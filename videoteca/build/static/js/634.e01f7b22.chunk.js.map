{"version":3,"file":"static/js/634.e01f7b22.chunk.js","mappings":"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","sources":["axios.js","components/especialidades/autoresModal.js","components/especialidades/palabraclaveModal.js","components/videos/videoForm.js","hooks/useModal.js","services/autor.js","services/category.js","services/especialidad.js","services/palabraClave.js","services/serie.js","services/subEspecialidad.js","services/temporada.js","services/tipoVideo.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as autorServer from \"../../services/autor\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalAutor = ({ handleClose, show, autor_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!autor_id) {\r\n        formData.append(\"autor\", newData.autor);\r\n        await autorServer.RegisterAutor(formData);\r\n      } else {\r\n        formData.append(\"autor\", newData.autor);\r\n        await autorServer.updateAutor(autor_id, formData);        \r\n      }\r\n      const res = await autorServer.ListAutores();\r\n      const data = await res;\r\n      props.setAutores(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" className=\"text-dark mx-2 mt-2\" ><h4>{autor_id? 'Editar ' : 'Registrar '} Autor</h4></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput2\">\r\n            <Form.Control type=\"text\" \r\n            className=\"form-control\"\r\n            rows={1} \r\n            name=\"autor\"\r\n            value={newData.autor || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {autor_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalAutor;","import React from \"react\";\r\n//dependencias\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalPalabraClave = ({ handleClosePalabraClave, showPalabraClave, palabraclave_id,currentItemPalabraClave, setFormDataPalabraClave, newDataPalabraClave, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormDataPalabraClave({...newDataPalabraClave, [name]: e.target.value });\r\n    console.log(name);\r\n    console.log(\"se activo el modal de palbra clave\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!palabraclave_id) {\r\n        formData.append(\"palabraClave\", newDataPalabraClave.palabraClave);\r\n        await palabraClaveServer.RegisterPalabraClave(formData);\r\n        \r\n      } else {\r\n        setFormDataPalabraClave\t.append(\"palabraClave\", newDataPalabraClave.palabraClave);\r\n        await palabraClaveServer.updatePalabraClave(palabraclave_id, setFormDataPalabraClave);        \r\n      }\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      console.log(data);\r\n      props.setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={showPalabraClave} \r\n      onHide={handleClosePalabraClave}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" className=\"text-dark mx-2 mt-2\" ><h4>{palabraclave_id? 'Editar ' : 'Registrar '} Palabras  claves</h4></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className=\"form-control\"\r\n            rows={1} \r\n            name=\"palabraClave\"\r\n            value={newDataPalabraClave.palabraClave || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClosePalabraClave}>\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClosePalabraClave}>\r\n            {palabraclave_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalPalabraClave;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n//import Select from \"react-select\";\r\nimport * as VideoServer from \"../../services/videoServer\";\r\nimport * as TipoVideoServer from \"../../services/tipoVideo\";\r\nimport * as CategoriaServer from \"../../services/category\";\r\nimport * as EspecialidadServer from \"../../services/especialidad\";\r\nimport * as SubEspecialidadServer from \"../../services/subEspecialidad\";\r\nimport * as AutorServer from \"../../services/autor\";\r\nimport * as PalabraClaveServer from \"../../services/palabraClave\";\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport PalabrasClavesModal from \"../especialidades/palabraclaveModal\";\r\nimport AutoresModal from \"../especialidades/autoresModal\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n\r\n//components\r\n//import Select from \"@mui/material/Select\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport Swal from \"sweetalert2\";\r\n/**\r\n * Función para realizar las operaciones necesarias para crear o editar un video. \r\n * @returns Componente con el formulario para Agregar nuevo video o editar un video.\r\n */\r\nconst VideoForm = () => {\r\n  const history = useNavigate();\r\n  const params = useParams();\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const initialState = {\r\n    id: 0,\r\n    code_esp: \"\",\r\n    code_engl: \"\",\r\n    title_espanol: \"\",\r\n    title_english: \"\",\r\n    title_cap_esp: \"\",\r\n    title_cap_english: \"\",\r\n    description_esp: \"\",\r\n    description_english: \"\",\r\n    tipe_of_video: 1,\r\n    languages: [1],\r\n    categorias: [1],\r\n    especialidades: [1],\r\n    subEspecialidades: [1],\r\n    autores: [1],\r\n    palabrasClaves: [1],\r\n    serie: 0,\r\n    temporada: 0,\r\n  };\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [showPalabraClave, handleShowPalabraClave, handleClosePalabraClave] = useModal(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selectedFile2, setSelectedFile2] = useState(null);\r\n  const [video, setVideo] = useState(initialState);\r\n  const [videoAntes, setVideoAntes] = useState();\r\n  const [categorias, setCategorias] = useState();\r\n  const [tipe_of_video,setTipe_of_video] = useState();\r\n  const [especialidades, setEspecialidades] = useState();\r\n  const [subEspecialidades, setSubEspecialidades] = useState();\r\n  const [autores, setAutores] = useState();\r\n  const [palabrasClaves, setPalabrasClaves] = useState();\r\n  const [series, setSeries] = useState();\r\n  const [temporadas, setTemporadas] = useState();\r\n  const [isSerieSelectEnabled, setIsSerieSelectEnabled] = useState(false);\r\n  const [isTempSelectEnabled, setIsTempSelectEnabled] = useState(false);\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [idPalabraClave, setIdPalabraClave] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [currentItemPalabraClave, setCurrentItemPalabraClave] = useState({});\r\n  const initialFormData = {palabrasClaves:\"\",autores:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const [newDataPalabraClave, setFormDataPalabraClave] = useState(initialFormData);\r\n  const [isDataReady,setIsDataReady] = useState(false)\r\n\r\n  \r\n\r\n  const handleSelectTypeVideo = (selectedValue, fielName) => {\r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 2){\r\n      setIsSerieSelectEnabled(true);\r\n    }\r\n    else{\r\n      setIsSerieSelectEnabled(false)\r\n      setIsTempSelectEnabled(false)\r\n      \r\n    }\r\n  };\r\n\r\n  /**\r\n   * Actualiza el estado del idioma seleccionado en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleSelectIdioma = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n\r\n    let value = Array.from(target.selectedOptions, (option) => option.value);\r\n    setVideo({ ...video, [name]: value });\r\n  };\r\n  /**\r\n   * Actualiza el estado de la categoria seleccionada en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const registrarPalabrasClaves = () =>{\r\n    /* AQUI CODE */\r\n  setId(null);\r\n  setCurrentItemPalabraClave({});\r\n  setFormData({palabrasClaves:\"\"});\r\n  handleShowPalabraClave(true)\r\n}\r\nconst registrarAutores = () =>{\r\n  /* AQUI CODE */\r\nsetId(null);\r\nsetCurrentItem({});\r\nsetFormData({autores:\"\"});\r\nhandleShow(true)\r\n}\r\n  const handleSelectCategoryEspSub = (selectedValues, fielName) => {\r\n    console.log(selectedValues);\r\n    let value = Array.from(selectedValues, (option) => option.value);\r\n    setVideo({ ...video, [fielName]: value });\r\n  };\r\n  //REVISAR AQUI FALTARIA ESTO EN PALABRAS CLAVES Y CONSIGUIENTES\r\n\r\n  const handleSelectSerie = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n    \r\n    if (selectedValue.value == 0){\r\n      setIsTempSelectEnabled(false);\r\n    }\r\n    else{\r\n      setIsTempSelectEnabled(true)\r\n    }\r\n  };\r\n  const handleSelectTem = (selectedValue, fielName) => {    \r\n    setVideo({ ...video, [fielName]: selectedValue.value });\r\n  }\r\n  /**\r\n   * Actualiza el estado de demás campos seleccionados en el formulario.\r\n   * @param {*} e \r\n   */\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    if (name === \"image\") {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n    else if (name === \"min_image\"){\r\n      setSelectedFile2(e.target.files[0]);\r\n    }\r\n    else {\r\n      setVideo({ ...video, [name]: e.target.value });\r\n    }\r\n  };\r\n  /**\r\n   * Guarda la información llenada en el formulario y la envia al backend para su registro o actualización.\r\n   * Al finalizar si el proceso es exitoso redirecciona al index.\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let featured_image;\r\n    let min_image;\r\n    const formData = new FormData();\r\n\r\n    if (selectedFile) {\r\n      featured_image = selectedFile;\r\n      formData.append(\"featured_image\", featured_image);\r\n\r\n    }\r\n    if (selectedFile2) {\r\n      min_image = selectedFile2;\r\n      formData.append(\"min_image\", min_image);\r\n    }\r\n\r\n    try {\r\n      formData.append(\"code_esp\", video.code_esp);\r\n      formData.append(\"code_engl\", video.code_engl);\r\n      formData.append(\"title_espanol\", video.title_espanol);\r\n      formData.append(\"title_english\", video.title_english);\r\n      formData.append(\"title_cap_esp\", video.title_cap_esp);\r\n      formData.append(\"title_cap_english\", video.title_cap_english);\r\n      formData.append(\"description_esp\", video.description_esp);\r\n      formData.append(\"description_english\", video.description_english);\r\n      formData.append(\"tipe_of_video\", video.tipe_of_video);\r\n      /* formData.append(\"temporada\", video.temporada);\r\n      formData.append(\"serie\", video.serie); */\r\n\r\n      if(isSerieSelectEnabled){\r\n        formData.append(\"temporada\", video.temporada);\r\n        formData.append(\"serie\", video.serie); \r\n      }\r\n\r\n      for (let i = 0; i <= video.languages.length - 1; i++) {\r\n        formData.append(\"languages\", video.languages[i]);\r\n      }\r\n      for (let i = 0; i <= video.categorias.length - 1; i++) {\r\n        formData.append(\"categorias\", video.categorias[i]);\r\n      }\r\n      for (let i = 0; i <= video.especialidades.length - 1; i++) {\r\n        formData.append(\"especialidad\", video.especialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.subEspecialidades.length - 1; i++) {\r\n        formData.append(\"subEspecialidad\", video.subEspecialidades[i]);\r\n      }\r\n      for (let i = 0; i <= video.autores.length - 1; i++) {\r\n        formData.append(\"autor\", video.autores[i]);\r\n      }\r\n      for (let i = 0; i <= video.palabrasClaves.length - 1; i++) {\r\n        formData.append(\"palabraClave\", video.palabrasClaves[i]);\r\n      }\r\n    \r\n      let res;\r\n      if (!params.id) {\r\n        res = await VideoServer.RegisterVideo(formData);\r\n      } else {\r\n        res = await VideoServer.UpdateVideo(params.id, formData);        \r\n      }\r\n      Swal.fire({\r\n        title: res.message,\r\n        icon: \"success\"\r\n      }).then(res=>{\r\n        history(\"/\");\r\n        window.location.reload();\r\n      })\r\n      } catch (error) {\r\n        console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * Función para obtener el video con sus campos a editar.\r\n   * @param {*} videoID \r\n   */\r\n  const getVideo = async (videoID) => {\r\n    try {\r\n      const res = await VideoServer.getVideoDT(videoID);\r\n      const data = await res;\r\n      console.log(data);\r\n      setVideoAntes(data)\r\n      \r\n      if(isSerieSelectEnabled){\r\n\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada,\r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          serie,\r\n          temporada\r\n        });\r\n      }else{\r\n        const {\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n         \r\n        } = data;\r\n  \r\n        setVideo({\r\n          code_esp,\r\n          code_engl,\r\n          title_espanol,\r\n          title_english,\r\n          title_cap_esp,\r\n          title_cap_english,\r\n          description_esp,\r\n          description_english,\r\n          tipe_of_video,\r\n          languages,\r\n          categorias,\r\n          especialidades,\r\n          subEspecialidades,\r\n          autores,\r\n          palabrasClaves,\r\n          \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener todas las categorias en la base de datos.\r\n   */\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await CategoriaServer.ListCategorias();\r\n      const data = await res;\r\n      setCategorias(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getEspecialidades = async () => {\r\n    try {\r\n      const res = await EspecialidadServer.ListEspecialidades()\r\n      const data = await res;\r\n      setEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getSubEspecialidades = async () => {\r\n    try {\r\n      const res = await SubEspecialidadServer.ListSubEspecialidades()\r\n      const data = await res;\r\n      console.log(data);\r\n      setSubEspecialidades(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAutores = async () => {\r\n    try {\r\n      const res = await AutorServer.ListAutores()\r\n      const data = await res;\r\n      console.log(data);\r\n      setAutores(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getPalabraClaves = async () => {\r\n    try {\r\n      const res = await PalabraClaveServer.ListPalabrasClaves()\r\n      const data = await res;\r\n      setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n \r\n  const getSeries = async () => {\r\n    try {\r\n      const res = await SerieServer.ListSeries()\r\n      const data = await res;\r\n      setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getTemporadas = async () => {\r\n    try {\r\n      const res = await TemporadaServer.ListTemporadas()\r\n      const data = await res;\r\n      setTemporadas(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const getTipe_of_video = async () =>{\r\n    try {\r\n      const res = await TipoVideoServer.ListTipoVideo()\r\n      const data = await res;\r\n      setTipe_of_video(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } \r\n  const obtenerVideoEnviar = () => {\r\n    console.log(video);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategorias();\r\n    getEspecialidades();\r\n    getSubEspecialidades();\r\n    getAutores();\r\n    getPalabraClaves();\r\n    getSeries();\r\n    getTemporadas();\r\n    getTipe_of_video();\r\n    if (params.id) {\r\n      getVideo(params.id);\r\n    }\r\n  }, []);\r\n\r\n \r\n  const optionsSeriesVideoSelected = []\r\n  if (series && videoAntes) {\r\n    var optionsSeries = series.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.serie,\r\n    }));\r\n    series.map(async (opcion) => {\r\n        if(opcion.id == videoAntes.serie){\r\n          optionsSeriesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.serie,\r\n          })\r\n        }\r\n    });\r\n  }\r\n  const optionsTemporadasVideoSelected = []\r\n\r\n  if (temporadas && videoAntes) {\r\n    \r\n    var optionsTemporadas = temporadas.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.temporada,\r\n    }));\r\n    temporadas.map(async (opcion) => {\r\n      if(opcion.id == videoAntes.temporada){\r\n        optionsTemporadasVideoSelected.push({\r\n          value: opcion.id,\r\n          label: opcion.temporada,\r\n        })\r\n      }\r\n  });\r\n  }\r\n\r\n  \r\n  const [optionsCategorias, setOptionsCategorias] = useState([]);\r\n  const [optionsCategoriasVideoSelected, setOptionsCategoriasVideoSelected] = useState([]);\r\n\r\n  const processCategorias =  async () => {\r\n    if (categorias) {\r\n\r\n      const options = categorias.map(opcion => ({\r\n        value: opcion.id,\r\n        label: opcion.categoria,\r\n      }));\r\n      setOptionsCategorias(options);\r\n\r\n      const selectedOptions = categorias.flatMap(opcion =>\r\n        videoAntes.categorias.filter(categoriaVideo => opcion.id == categoriaVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.categoria,\r\n          }))\r\n      );\r\n      setOptionsCategoriasVideoSelected(selectedOptions);\r\n    }\r\n  };\r\n \r\n  \r\n  const [optionsSubEspecialidades, setOptionsSubEspecialidades] = useState([]);\r\n  const [optionsSubEspecialidadesVideoSelected, setOptionsSubEspecialidadesVideoSelected] = useState([]);\r\n  const processSubEspecialidades = async () => {\r\n    if (subEspecialidades) {\r\n\r\n      const options = subEspecialidades.map(opcion => ({\r\n        value: opcion.id,\r\n        label: opcion.subEspecialidad,\r\n      }));\r\n      setOptionsSubEspecialidades(options);\r\n\r\n      const selectedOptions = subEspecialidades.flatMap(opcion =>\r\n        videoAntes.subEspecialidad.filter(subEspecialidadesVideo => opcion.id == subEspecialidadesVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.subEspecialidad,\r\n          }))\r\n      );\r\n      setOptionsSubEspecialidadesVideoSelected(selectedOptions);\r\n    }\r\n  };\r\n\r\n  const [optionsEspecialidades, setOptionsEspecialidades] = useState([]);\r\n  const [optionsEspecialidadesVideoSelected, setOptionsEspecialidadesVideoSelected] = useState([]);\r\n\r\n  const processEspecialidades = async () =>{\r\n    if(especialidades){\r\n      const options = especialidades.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.especialidad,\r\n      }));\r\n      setOptionsEspecialidades(options)\r\n\r\n      const selectedOptions = especialidades.flatMap(opcion =>\r\n        videoAntes.especialidad.filter(especialidadVideo => opcion.id == especialidadVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.especialidad,\r\n          }))\r\n      );\r\n      setOptionsEspecialidadesVideoSelected(selectedOptions);\r\n      \r\n      \r\n    }\r\n  }\r\n  const [optionsAutores, setOptionsAutores] = useState([]);\r\n  const [optionsAutoresVideoSelected, setOptionsAutoresVideoSelected] = useState([]);\r\n\r\n  const processAutores = async () =>{\r\n    if(autores){\r\n      const options = autores.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.autor,\r\n      }));\r\n      setOptionsAutores(options)\r\n\r\n      const selectedOptions = autores.flatMap(opcion =>\r\n        videoAntes.autor.filter(autorVideo => opcion.id == autorVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.autor,\r\n          }))\r\n      );\r\n      setOptionsAutoresVideoSelected(selectedOptions);\r\n    }\r\n  }\r\n  const [optionsPalabrasClaves, setOptionsPalabrasClaves] = useState([]);\r\n  const [optionsPalabrasClavesVideoSelected, setOptionsPalabrasClavesVideoSelected] = useState([]);\r\n\r\n  const processPalabrasClaves = async () =>{\r\n    if(palabrasClaves){\r\n      const options = palabrasClaves.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.palabraClave,\r\n      }));\r\n      setOptionsPalabrasClaves(options)\r\n\r\n      const selectedOptions = palabrasClaves.flatMap(opcion =>\r\n        videoAntes.palabraClave.filter(palabraClaveVideo => opcion.id == palabraClaveVideo)\r\n          .map(() => ({\r\n            value: opcion.id,\r\n            label: opcion.palabraClave,\r\n          }))\r\n      );\r\n      setOptionsPalabrasClavesVideoSelected(selectedOptions);\r\n      \r\n    }\r\n  }\r\n  const llenarCamposDefecto = async () => {\r\n    if (videoAntes) {\r\n      setVideo(prevVideo => ({\r\n        ...prevVideo,\r\n        especialidades: videoAntes.especialidad,\r\n        autores: videoAntes.autor,\r\n        palabrasClaves: videoAntes.palabraClave,\r\n        subEspecialidades: videoAntes.subEspecialidad,\r\n      }));\r\n    }\r\n    if(video.tipe_of_video == 2){\r\n      setVideo(prevVideo => ({\r\n        ...prevVideo,\r\n        serie: videoAntes.serie,\r\n        temporada: videoAntes.temporada\r\n      }));\r\n    }\r\n  };  \r\n  \r\n  useEffect(() => {\r\n    const processAll = async () => {\r\n      if (videoAntes) {\r\n        await processCategorias();\r\n        await processSubEspecialidades();\r\n        await processEspecialidades();\r\n        await processAutores();\r\n        await processPalabrasClaves();\r\n        await llenarCamposDefecto();\r\n        setIsDataReady(true)\r\n      }\r\n    };\r\n\r\n    processAll();\r\n  }, [videoAntes]);\r\n  \r\n  if (isDataReady/* categorias && especialidades && subEspecialidades && palabrasClaves */ /* && autores *//*  && tipe_of_video &&\r\n    optionsCategoriasVideoSelected.length > 0 &&\r\n    optionsEspecialidadesVideoSelected.length > 0 &&\r\n    optionsPalabrasClavesVideoSelected.length > 0  */\r\n   /*  optionsAutoresVideoSelected.length > 0  */\r\n   ) {\r\n\r\n\r\n    const optionesTipoVideo = tipe_of_video.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.tipe_video,\r\n    }));\r\n    const optionsTipoVideoVideoSelected = []\r\n    tipe_of_video.map(async (opcion) => {\r\n      console.log(videoAntes);\r\n        if(opcion.id == videoAntes.tipe_of_video){\r\n          \r\n          optionsTipoVideoVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.tipe_video,\r\n          })\r\n        }\r\n    });\r\n\r\n\r\n   /*  const optionsCategorias = categorias.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.categoria,\r\n    }));\r\n    const optionsCategoriasVideoSelected = []\r\n    categorias.map(async (opcion) => {\r\n      videoAntes.categorias.map(async (categoriaVideo,index) =>{\r\n        if(opcion.id == categoriaVideo){\r\n          optionsCategoriasVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.categoria,\r\n          })\r\n        }\r\n      })\r\n    });\r\n */\r\n/*     const optionsEspecialidades = especialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.especialidad,\r\n    }));\r\n    const optionsEspecialidadesVideoSelected = []\r\n    especialidades.map(async (opcion) => {\r\n      videoAntes.especialidad.map((especialidadVideo,index) =>{\r\n        if(opcion.id == especialidadVideo){\r\n          optionsEspecialidadesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.especialidad,\r\n          })\r\n        }\r\n      })\r\n    }); */\r\n\r\n   /*  const optionsSubEspecialidades = subEspecialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.subEspecialidad,\r\n    }));\r\n    const optionsSubEspecialidadesVideoSelected = []\r\n    subEspecialidades.map(async (opcion) => {\r\n      videoAntes.subEspecialidad.map((subEspecialidadVideo,index) =>{\r\n        if(opcion.id == subEspecialidadVideo){\r\n          optionsSubEspecialidadesVideoSelected.push({\r\n            value: opcion.id,\r\n            label: opcion.subEspecialidad,\r\n          })\r\n        }\r\n      })\r\n    }); */\r\n\r\n   /*  const optionsAutores = autores.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.autor,\r\n    }));\r\n    const optionsAutoresVideoSelected = []\r\n    autores.map(async (opcion) => {\r\n        videoAntes.autor.map(async (autorVideo,index) =>{\r\n          if(opcion.id == autorVideo){\r\n            optionsAutoresVideoSelected.push({\r\n              value: opcion.id,\r\n              label: opcion.autor,\r\n            })\r\n          }\r\n        })\r\n      }); */\r\n      \r\n    /* const optionsPalabrasClaves = palabrasClaves.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.palabraClave,\r\n    }));\r\n    const optionsPalabrasClavesVideoSelected = []\r\n    palabrasClaves.map(async (opcion) => {\r\n        videoAntes.palabraClave.map(async (palabrasClavesVideo,index) =>{\r\n          if(opcion.id == palabrasClavesVideo){\r\n            optionsPalabrasClavesVideoSelected.push({\r\n              value: opcion.id,\r\n              label: opcion.palabraClave,\r\n            })\r\n          }\r\n        })\r\n      }); */\r\n \r\n    return (\r\n\r\n      <Container>\r\n      <div className=\"col-md-9 mx-auto d-flex justify-content-between mb-4\">\r\n        <div>\r\n          <h3 className=\"text-light\">Actualizar Video</h3>\r\n        </div>\r\n        <div className=\"\">\r\n          <button  onClick={() => window.history.back()} className=\"btn btn-light\" value=\"Volver\">Volver</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-9 mx-auto\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Tipo de video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTipoVideoVideoSelected}\r\n              options={optionesTipoVideo}\r\n              onChange={(selectedValue) => handleSelectTypeVideo(selectedValue, 'tipe_of_video')}\r\n            />\r\n          </div>\r\n          {isSerieSelectEnabled || videoAntes.tipe_of_video == 2 && (\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Serie\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsSeriesVideoSelected}             \r\n              options={optionsSeries}\r\n              onChange={(selectedValue) => handleSelectSerie(selectedValue, 'serie')}\r\n              />\r\n          </div>\r\n          )}\r\n          {isSerieSelectEnabled || videoAntes.tipe_of_video == 2  && (\r\n            <div className=\"mb-3\">\r\n              <label className=\"\" htmlFor=\"otroCampo\">\r\n                Temporada\r\n              </label>\r\n              <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTemporadasVideoSelected}             \r\n              options={optionsTemporadas}\r\n              onChange={(selectedValue) => handleSelectTem(selectedValue, 'temporada')}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"languages\">\r\n              Idiomas del video\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"languages\"\r\n              name=\"languages\"\r\n              value={video.languages}\r\n\r\n              onChange={handleSelectIdioma}\r\n              aria-label=\"languages\"\r\n              multiple={true}\r\n              required\r\n            >\r\n              <option value=\"1\">Español</option>\r\n              <option value=\"2\">Ingles</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"categorias\">\r\n              Categorías del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsCategorias}\r\n              defaultValue={optionsCategoriasVideoSelected}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'categorias')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Especialidades\">\r\n              Especialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsEspecialidades}\r\n              defaultValue={optionsEspecialidadesVideoSelected}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'especialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"SubEspecialidades\">\r\n              SubEspecialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={optionsSubEspecialidadesVideoSelected}\r\n              options={optionsSubEspecialidades}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'subEspecialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Autores\">\r\n              Autores del video {console.log(optionsAutoresVideoSelected)}\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsAutores}\r\n              defaultValue={optionsAutoresVideoSelected.length > 0 ? optionsAutoresVideoSelected : \"\"}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'autores')}\r\n              isMulti\r\n            />\r\n            <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarAutores()}>\r\n                    Registrar Autores\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"PalabrasClaves\">\r\n              PalabrasClaves del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsPalabrasClaves}\r\n              defaultValue={optionsPalabrasClavesVideoSelected.length > 0 ? optionsPalabrasClavesVideoSelected : \"\"}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'palabrasClaves')}\r\n              isMulti\r\n            />\r\n             <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarPalabrasClaves()}>\r\n                    Registrar Palabras Claves\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n\r\n            <div className=\"mb-3 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEsp\">\r\n                Código vimeo del video en español\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"code_esp\"\r\n                name=\"code_esp\"\r\n                value={video.code_esp || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en español\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 ms-2 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEngl\">\r\n                Código vimeo del video en ingles\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"codeEngl\"\r\n                name=\"code_engl\"\r\n                value={video.code_engl || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en ingles\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEspanol\">\r\n              Titulo en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEspanol\"\r\n              name=\"title_espanol\"\r\n              value={video.title_espanol}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en español\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEnglish\">\r\n              Titulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEnglish\"\r\n              name=\"title_english\"\r\n              value={video.title_english}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en Ingles\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          \r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n          <label className=\"\" htmlFor=\"titleCapEsp\">\r\n            Titulo del capitulo en Español\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"titleCapEsp\"\r\n            name=\"title_cap_esp\"\r\n            value={video.title_cap_esp || \"\"}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Titulo del capitulo en Español\"\r\n            maxLength=\"150\"\r\n          />\r\n        </div>\r\n          )}\r\n           {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleCapEnglish\">\r\n              Titulo del capitulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleCapEnglish\"\r\n              name=\"title_cap_english\"\r\n              value={video.title_cap_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo del capitulo en Ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          )}\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEsp\">\r\n              Descripción en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEsp\"\r\n              name=\"description_esp\"\r\n              value={video.description_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Descripción en español\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEnglish\">\r\n              Descripción en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEnglish\"\r\n              name=\"description_english\"\r\n              value={video.description_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              required\r\n              placeholder=\"Descripción en ingles\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n          <div className=\"mb-1 w-100\">\r\n            <label className=\"\" htmlFor=\"featuredImage\">\r\n              Imagen para banner\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"featuredImage\"\r\n              name=\"image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para banner\"              \r\n            />\r\n          </div>\r\n          <div className=\"mb-1 w-100 ms-2\">\r\n            <label className=\"\" htmlFor=\"minImage\">\r\n              Imagen para email\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"min_image\"\r\n              name=\"min_image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para Email\"                \r\n              />\r\n          </div>\r\n          </div>\r\n            <input  type=\"button\" onClick={obtenerVideoEnviar} value=\"Ver log\"/>\r\n          <div className=\"d-grid\">\r\n            {params.id ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Actualizar el video\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <PalabrasClavesModal\r\n          handleClosePalabraClave={handleClosePalabraClave}\r\n          showPalabraClave={showPalabraClave}\r\n          palabrasclaves_id ={idPalabraClave}\r\n          currentItemPalabraClave={currentItemPalabraClave}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormDataPalabraClave = {setFormDataPalabraClave}\r\n          newDataPalabraClave={newDataPalabraClave}\r\n        ></PalabrasClavesModal>\r\n        <AutoresModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          autores_id ={id}\r\n          currentItem={currentItem}\r\n          setAutores = {setAutores}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></AutoresModal>\r\n      </Container>\r\n    );\r\n  }else if(categorias && especialidades && subEspecialidades && palabrasClaves /* && autores */ && tipe_of_video && !videoAntes){\r\n    const optionsCategoriasCreate = categorias.map(opcion => ({\r\n      value: opcion.id,\r\n      label: opcion.categoria,\r\n    }));\r\n    const optionsSubEspecialidadesCreate = subEspecialidades.map(opcion => ({\r\n      value: opcion.id,\r\n      label: opcion.subEspecialidad,\r\n    }));\r\n    const optionsEspecialidadesCreate = especialidades.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.especialidad,\r\n    }));\r\n    const optionsAutoresCreate = autores.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.autor,\r\n    }));\r\n    const optionsPalabrasClavesCreate = palabrasClaves.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.palabraClave,\r\n    }));\r\n\r\n    console.log(optionsCategorias);\r\n    const optionesTipoVideo = tipe_of_video.map((opcion) => ({\r\n      value: opcion.id,\r\n      label: opcion.tipe_video,\r\n    }));\r\n    if(series){\r\n      var optionsSeriesCreate = series.map((opcion) => ({\r\n        value: opcion.id,\r\n        label: opcion.serie,\r\n      }));\r\n      console.log(video);\r\n      if(temporadas){\r\n\r\n        var optionsTemporadasCreate = temporadas.filter(temporada =>temporada.serie == video.serie).map((opcion) => ({\r\n          value: opcion.id,\r\n          label: opcion.temporada,\r\n        }));\r\n      }\r\n    }\r\n \r\n    return (\r\n\r\n      <Container>\r\n      <div className=\"col-md-9 mx-auto d-flex justify-content-between mb-4\">\r\n        <div>\r\n          <h3 className=\"text-light\">Crear Video</h3>\r\n        </div>\r\n        <div className=\"\">\r\n          <button  onClick={() => window.history.back()} className=\"btn btn-light\" value=\"Volver\">Volver</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-9 mx-auto\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Tipo de video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              options={optionesTipoVideo}\r\n              onChange={(selectedValue) => handleSelectTypeVideo(selectedValue, 'tipe_of_video')}\r\n            />\r\n          </div>\r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"tipeOfVideo\">\r\n              Serie\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsSeriesVideoSelected}             \r\n              options={optionsSeriesCreate}\r\n              onChange={(selectedValue) => handleSelectSerie(selectedValue, 'serie')}\r\n              />\r\n          </div>\r\n          )}\r\n          {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n              <label className=\"\" htmlFor=\"otroCampo\">\r\n                Temporada\r\n              </label>\r\n              <Select\r\n              className=\"form-select\"\r\n              defaultValue={optionsTemporadasVideoSelected}             \r\n              options={optionsTemporadasCreate}\r\n              onChange={(selectedValue) => handleSelectTem(selectedValue, 'temporada')}\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"languages\">\r\n              Idiomas del video\r\n            </label>\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"languages\"\r\n              name=\"languages\"\r\n              value={video.languages}\r\n\r\n              onChange={handleSelectIdioma}\r\n              aria-label=\"languages\"\r\n              multiple={true}\r\n              required\r\n            >\r\n              <option value=\"1\">Español</option>\r\n              <option value=\"2\">Ingles</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"categorias\">\r\n              Categorías del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsCategoriasCreate}\r\n              defaultValue={optionsCategoriasVideoSelected}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'categorias')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"Especialidades\">\r\n              Especialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsEspecialidadesCreate}\r\n              defaultValue={optionsEspecialidadesVideoSelected}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'especialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"SubEspecialidades\">\r\n              SubEspecialidades del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              defaultValue={optionsSubEspecialidadesVideoSelected}\r\n              options={optionsSubEspecialidadesCreate}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'subEspecialidades')}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"mb-1\">\r\n            <label className=\"\" htmlFor=\"Autores\">\r\n              Autores del video {console.log(optionsAutoresVideoSelected)}\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsAutoresCreate}\r\n              defaultValue={optionsAutoresVideoSelected.length > 0 ? optionsAutoresVideoSelected : \"\"}\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'autores')}\r\n              isMulti\r\n            />\r\n            <div className=\"mt-2\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarAutores()}>\r\n                    Registrar Autores\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"PalabrasClaves\">\r\n              PalabrasClaves del video\r\n            </label>\r\n            <Select\r\n              className=\"form-select\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              options={optionsPalabrasClavesCreate}\r\n              defaultValue={optionsPalabrasClavesVideoSelected.length > 0 ? optionsPalabrasClavesVideoSelected : \"\"}\r\n\r\n              isClearable\r\n              onChange={(selectedValues) => handleSelectCategoryEspSub(selectedValues, 'palabrasClaves')}\r\n              isMulti\r\n            />\r\n             <div className=\"mt-1\">\r\n              <Stack  alignItems=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"success\"\r\n                  type=\"button\"\r\n                  onClick={()=>registrarPalabrasClaves()}>\r\n                    Registrar Palabras Claves\r\n                  </Button>\r\n              </Stack>\r\n              </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n\r\n            <div className=\"mb-3 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEsp\">\r\n                Código vimeo del video en español\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"code_esp\"\r\n                name=\"code_esp\"\r\n                value={video.code_esp || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en español\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3 ms-2 w-100\">\r\n              <label className=\"\" htmlFor=\"codeEngl\">\r\n                Código vimeo del video en ingles\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"codeEngl\"\r\n                name=\"code_engl\"\r\n                value={video.code_engl || \"\"}\r\n                onChange={handleInputChange}\r\n                type=\"text\"\r\n                required\r\n                placeholder=\"Código del video en ingles\"\r\n                maxLength=\"150\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEspanol\">\r\n              Titulo en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEspanol\"\r\n              name=\"title_espanol\"\r\n              value={video.title_espanol}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en español\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleEnglish\">\r\n              Titulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleEnglish\"\r\n              name=\"title_english\"\r\n              value={video.title_english}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo en Ingles\"\r\n              required\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          \r\n          {isSerieSelectEnabled && (\r\n          <div className=\"mb-3\">\r\n          <label className=\"\" htmlFor=\"titleCapEsp\">\r\n            Titulo del capitulo en Español\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"titleCapEsp\"\r\n            name=\"title_cap_esp\"\r\n            value={video.title_cap_esp || \"\"}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Titulo del capitulo en Español\"\r\n            maxLength=\"150\"\r\n          />\r\n        </div>\r\n          )}\r\n           {isSerieSelectEnabled && (\r\n            <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"titleCapEnglish\">\r\n              Titulo del capitulo en Ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"titleCapEnglish\"\r\n              name=\"title_cap_english\"\r\n              value={video.title_cap_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Titulo del capitulo en Ingles\"\r\n              maxLength=\"150\"\r\n            />\r\n          </div>\r\n          )}\r\n          \r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEsp\">\r\n              Descripción en español\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEsp\"\r\n              name=\"description_esp\"\r\n              value={video.description_esp || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en español\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"\" htmlFor=\"descriptionEnglish\">\r\n              Descripción en ingles\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"descriptionEnglish\"\r\n              name=\"description_english\"\r\n              value={video.description_english || \"\"}\r\n              onChange={handleInputChange}\r\n              type=\"text\"\r\n              placeholder=\"Descripción en ingles\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-between\">\r\n          <div className=\"mb-1 w-100\">\r\n            <label className=\"\" htmlFor=\"featuredImage\">\r\n              Imagen para banner\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"featuredImage\"\r\n              name=\"image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para banner\"              \r\n            />\r\n          </div>\r\n          <div className=\"mb-1 w-100 ms-2\">\r\n            <label className=\"\" htmlFor=\"minImage\">\r\n              Imagen para email\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"min_image\"\r\n              name=\"min_image\"\r\n              onChange={handleInputChange}\r\n              type=\"file\"\r\n              placeholder=\"Imagen para Email\"                \r\n              />\r\n          </div>\r\n          </div>\r\n            <input  type=\"button\" onClick={obtenerVideoEnviar} value=\"Ver log\"/>\r\n          <div className=\"d-grid\">\r\n            {params.id ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Actualizar el video\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-success btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n              >\r\n                Guardar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <PalabrasClavesModal\r\n          handleClosePalabraClave={handleClosePalabraClave}\r\n          showPalabraClave={showPalabraClave}\r\n          palabrasclaves_id ={idPalabraClave}\r\n          currentItemPalabraClave={currentItemPalabraClave}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormDataPalabraClave = {setFormDataPalabraClave}\r\n          newDataPalabraClave={newDataPalabraClave}\r\n        ></PalabrasClavesModal>\r\n        <AutoresModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          autores_id ={id}\r\n          currentItem={currentItem}\r\n          setAutores = {setAutores}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></AutoresModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"alert alert-warning p-4\">\r\n      <p>Si tienes problemas para cargar esta vista por favor recarga la pagina</p>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default VideoForm;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/autores/\";\r\n\r\n/**\r\n * Función para consultar todas las autores registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\n  export const ListAutores = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterAutor = async (newAutor) => {\r\n  const response = await axiosInstance.post(API_URL, newAutor);\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getAutor = async (autorID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${autorID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateAutor = async(id,updAutor) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updAutor);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/especialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterEspecialidad = async (newEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getEspecialidad = async (especialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${especialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateEspecialidad = async(id,updEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/palabrasclaves/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListPalabrasClaves = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  console.log(\"registrar palabras claves\");\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getPalabraClave = async (PalabraClaveID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${PalabraClaveID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Función para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/subespecialidades/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSubEspecialidades = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSubEspecialidad = async (newSubEspecialidad) => {\r\n  const response = await axiosInstance.post(API_URL, newSubEspecialidad);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSubEspecialidad = async (SubespecialidadID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${SubespecialidadID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateSubEspecialidad = async(id,updSubEspecialidad) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSubEspecialidad);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Función para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/tipos_de_Video/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTipoVideo = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n */\r\nconst  getTipoVideo = async (id) => {\r\n  const response = await axiosInstance.get(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n   /*  console.log(response.data.tipe_video); */\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n/* export const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n} */\r\nexport default getTipoVideo;","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  console.log(\"listar videos de la serie\" + temporadaId);\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/${temporadaId}`);\r\n  console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","autor_id","setFormData","currentItem","newData","props","handleSubmit","e","preventDefault","formData","FormData","append","autor","autorServer","res","setAutores","classes","onHide","contentClassName","cloud","centered","closeButton","id","className","onSubmit","controlId","type","rows","name","value","onChange","target","variant","onClick","handleClosePalabraClave","showPalabraClave","palabraclave_id","setFormDataPalabraClave","currentItemPalabraClave","newDataPalabraClave","palabraClave","palabraClaveServer","setPalabrasClaves","history","useNavigate","params","useParams","animatedComponents","makeAnimated","useModal","handleShow","handleShowPalabraClave","useState","selectedFile","setSelectedFile","selectedFile2","setSelectedFile2","code_esp","code_engl","title_espanol","title_english","title_cap_esp","title_cap_english","description_esp","description_english","tipe_of_video","languages","categorias","especialidades","subEspecialidades","autores","palabrasClaves","serie","temporada","video","setVideo","videoAntes","setVideoAntes","setCategorias","setTipe_of_video","setEspecialidades","setSubEspecialidades","series","setSeries","temporadas","setTemporadas","isSerieSelectEnabled","setIsSerieSelectEnabled","setIsTempSelectEnabled","setId","idPalabraClave","setCurrentItem","setCurrentItemPalabraClave","initialFormData","isDataReady","setIsDataReady","handleSelectTypeVideo","selectedValue","fielName","handleSelectIdioma","Array","from","selectedOptions","option","registrarPalabrasClaves","registrarAutores","handleSelectCategoryEspSub","selectedValues","handleSelectSerie","handleSelectTem","handleInputChange","files","featured_image","min_image","i","length","VideoServer","Swal","title","message","icon","reload","getVideo","videoID","getCategorias","CategoriaServer","getEspecialidades","EspecialidadServer","getSubEspecialidades","SubEspecialidadServer","getAutores","AutorServer","getPalabraClaves","PalabraClaveServer","getSeries","SerieServer","getTemporadas","TemporadaServer","getTipe_of_video","TipoVideoServer","obtenerVideoEnviar","useEffect","optionsSeriesVideoSelected","optionsSeries","map","opcion","label","push","optionsTemporadasVideoSelected","optionsTemporadas","optionsCategorias","setOptionsCategorias","optionsCategoriasVideoSelected","setOptionsCategoriasVideoSelected","processCategorias","options","categoria","flatMap","filter","categoriaVideo","optionsSubEspecialidades","setOptionsSubEspecialidades","optionsSubEspecialidadesVideoSelected","setOptionsSubEspecialidadesVideoSelected","processSubEspecialidades","subEspecialidad","subEspecialidadesVideo","optionsEspecialidades","setOptionsEspecialidades","optionsEspecialidadesVideoSelected","setOptionsEspecialidadesVideoSelected","processEspecialidades","especialidad","especialidadVideo","optionsAutores","setOptionsAutores","optionsAutoresVideoSelected","setOptionsAutoresVideoSelected","processAutores","autorVideo","optionsPalabrasClaves","setOptionsPalabrasClaves","optionsPalabrasClavesVideoSelected","setOptionsPalabrasClavesVideoSelected","processPalabrasClaves","palabraClaveVideo","llenarCamposDefecto","prevVideo","processAll","optionesTipoVideo","tipe_video","optionsTipoVideoVideoSelected","back","htmlFor","defaultValue","multiple","required","closeMenuOnSelect","components","isClearable","isMulti","alignItems","color","placeholder","maxLength","palabrasclaves_id","autores_id","optionsCategoriasCreate","optionsSubEspecialidadesCreate","optionsEspecialidadesCreate","optionsAutoresCreate","optionsPalabrasClavesCreate","optionsSeriesCreate","optionsTemporadasCreate","initialValue","setShow","ListAutores","RegisterAutor","newAutor","updateAutor","updAutor","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","ListEspecialidades","RegisterEspecialidad","newEspecialidad","updateEspecialidad","updEspecialidad","ListPalabrasClaves","RegisterPalabraClave","newPalabraClave","updatePalabraClave","updPalabraClave","ListSeries","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListSubEspecialidades","RegisterSubEspecialidad","newSubEspecialidad","updateSubEspecialidad","updSubEspecialidad","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada","ListTipoVideo","getTipoVideo","ListVideos","ListPeliculas","ListCasos","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}