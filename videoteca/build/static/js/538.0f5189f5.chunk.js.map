{"version":3,"file":"static/js/538.0f5189f5.chunk.js","mappings":"4SAUkBA,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CAEvCC,KAAK,CACHC,KAAM,SACRC,OAAQ,QACRC,SAAU,WACVC,QAAQ,KAERC,gBAAiB,CACfC,MAAO,QACPC,OAAQ,QACRC,SAAU,SACVC,OAAQ,yBAEVC,SAAU,CACRJ,MAAO,QACPC,OAAO,SAhBkB,I,qDCoC7B,EAhC6B,SAAC,GAAuC,IAArCI,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,SAAaC,GAAY,YAClE,GAAIF,EAAW,CACb,IAAMG,EAAoBD,EAAME,QAAUF,EAAMG,OAAOH,EAAME,QAAQE,QAAO,SAACC,GAAD,OAC1EA,EAAMC,WAAWC,MAAK,SAACC,GAAD,OAAaV,EAAUA,YAAcU,EAAQV,SAA7C,GADoD,IAI5E,OACE,yBACGG,EAAkBQ,OAAS,IAC1B,iBAAKC,UAAU,0BAAf,WACE,gBAAIA,UAAU,kBAAd,eAAsDZ,EAAUA,WAAU,yCAArCA,EAAUa,KAC/C,gBAAKD,UAAU,MAAf,UACA,SAAC,IAAD,CAAQX,SAAUA,EAAlB,SACKE,EAAkBW,KAAI,SAACP,GAAD,OACrB,SAAC,SAAD,CAEEA,MAAOA,EACPQ,UAAWb,EAAMa,UACjBC,KAAMd,EAAMc,KACZf,SAAUA,GAJLM,EAAMM,GAFQ,YAgBpC,CACF,E,kEC3BKI,GAAY9B,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvC8B,KAAM,CACJC,SAAU,KACVC,UAAU,IACV7B,OAAQ,QAEV,6BAA8B,CAC5B2B,KAAM,CACJG,QAAS,SARc,IA4M7B,MAzLA,YAA0D,IAAhCjB,EAA+B,EAA/BA,OAAQkB,EAAuB,EAAvBA,WAAepB,GAAQ,YACjDqB,GAAUC,EAAAA,EAAAA,MAEhB,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOV,EAAP,KAAkBW,EAAlB,KACA,GAAkCD,EAAAA,EAAAA,UAAS,MAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA4CH,EAAAA,EAAAA,UAAS,MAArD,eAAOI,EAAP,KAAuBC,EAAvB,KACQd,GAASe,EAAAA,EAAAA,YAAWC,EAAAA,GAApBhB,KAKFiB,EAAiB,yCAAG,kHAEJC,EAAAA,GAAsC,CAAC,QAAUlB,EAAKH,KAFlD,OAEhBsB,EAFgB,OAGtBT,EAAaS,GAHS,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAWjBC,EAAmB,yCAAG,kHAENC,EAAAA,GAA2C,CAAC,QAAUvB,EAAKH,KAFrD,OAElBsB,EAFkB,OAGxBP,EAAaO,GAHW,gDAKxBC,QAAQC,IAAR,MALwB,yDAAH,sDASzBG,EAAAA,EAAAA,YAAU,WACRP,IACAK,GAED,GAAE,KAKHE,EAAAA,EAAAA,YAAU,WAER,GAAGb,GAAaL,EAAY,CAK1B,IAJA,IAAImB,EAAQ,GACRC,EAAQ,GACRC,EAAS,GAEJC,EAAI,EAAGA,EAAIjB,EAAUhB,OAAQiC,IACpCF,EAAOG,KAAKlB,EAAUiB,GAAG5C,WAE3B,IAAK,IAAI4C,EAAI,EAAGA,EAAItB,EAAWX,OAAQiC,IACrCD,EAAOE,KAAKvB,EAAWsB,IAGzB,IAAK,IAAIA,EAAI,EAAGA,EAAID,EAAOhC,OAAQiC,IAAK,CAEnC,IADD,IAAIE,GAAM,EACAC,EAAI,EAAGA,EAAIL,EAAO/B,QAAUmC,EAAOC,IACrCJ,EAAOC,GAAG5C,YAAc0C,EAAOK,KACjCD,GAAM,GAERA,GAAML,EAAMI,KAAKF,EAAOC,GAC/B,CACDR,QAAQC,MAENP,EADEW,GAIgB,KAGrB,CACF,GAAC,CAACnB,EAAYK,IAKf,IAAM1B,EAAQ,yCAAG,WAAOY,GAAP,sFAOb,IANImC,EAAW,IAAIC,SAEjBC,EAAW,EACfF,EAASG,OAAO,UAAWnC,EAAKH,IAChCmC,EAASG,OAAO,QAAStC,GALV,SAOJuC,EAAQ,EAAGA,EAAQrC,EAAUJ,OAAQyC,KACxC1C,EAAUK,EAAUqC,IACZC,QAAQxC,KAAOG,EAAKH,IAAMH,EAAQH,QAAUM,IACtDyC,EAAU5C,EACVwC,KAXS,GAcE,IAAZA,EAdU,iCAeOhB,EAAAA,GAA0Cc,GAfjD,OAeLO,EAfK,OAgBXD,EAAWC,EAAGC,KAhBH,0DAmBbpB,QAAQC,IAAR,MAnBa,QAqBfd,EAAQ,aAAD,OAAcV,GAAK,CAAC4C,MAAMH,IArBlB,0DAAH,sDAyBRI,EAAUzC,IAChB,OAAIb,EAAOO,OAAQ,GAEf,4BACE,iBAAKE,GAAG,kBAAR,WAIE,4DACA,SAAC8C,EAAA,EAAD,CAAU/C,UAAW8C,EAAQxC,KAAML,GAAG,WAAW+C,MAAI,EAArD,SACGxD,GACCF,EAAMG,OAAOD,GAAQyD,MAAM,EAAG,GAAG/C,KAAI,SAACP,GAAD,OACnC,SAACoD,EAAA,OAAD,WACE,SAAC,IAAD,CAEEpD,MAAOA,EACPuD,WAAY5D,EAAM4D,WAClB/C,UAAaA,EACbC,KAAQA,EACRf,SAAYA,GALPM,EAAMM,KAFKN,EAAMM,GADS,UAc3C,mBACA,mBACA,gBAAKA,GAAG,cAAR,SAEEc,GACE,2BACGA,GAAazB,EAAM6D,QAAQpC,GAAWb,KAAI,SAACJ,EAAS0C,GAAV,OACzC,SAAC,IAAD,CAEEpD,UAAYU,EACZN,OAAQA,EACRC,OAAQH,EAAMG,OACdU,UAAaA,EACbC,KAAQA,EACRf,SAAWA,GANLmD,EAFiC,IAY1CvB,GAAkB3B,EAAM6D,QAAQlC,GAAgBf,KAAI,SAACJ,EAAS0C,GAAV,OACnD,SAAC,IAAD,CAEEpD,UAAYU,EACZN,OAAQA,EACRC,OAAQH,EAAMG,OACdU,UAAaA,EACbC,KAAQA,EACRf,SAAWA,GANLmD,EAF2C,OAczD9B,GAAcpB,EAAM6D,QAAQzC,GAAYR,KAAI,SAACJ,GAAD,OAC1C,SAAC,EAAD,CAEEV,UAAYU,EACZN,OAAQA,EACRC,OAAQH,EAAMG,OACdU,UAAaA,EACbC,KAAQA,EACRf,SAAWA,GANLS,EAAQG,GAF0B,UAoBhD,gBAAKA,GAAG,cAAR,UACE,eAAImD,MAAO,CAACC,MAAM,SAAlB,UAA4B,kEAInC,C,4PClDD,EAxJmB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OACbC,IADmC,YACdC,SAASC,eAAe,aAEnD,GAA0B5C,EAAAA,EAAAA,UAAS,IAAnC,eAAO6C,EAAP,KAAcC,EAAd,KACA,GAAoC9C,EAAAA,EAAAA,UAAS,IAA7C,eAAOH,EAAP,KAAmBkD,EAAnB,KACA,GAAsB/C,EAAAA,EAAAA,UAAS,CAAC,kBAAzBgD,GAAP,eACA,GAAuBhD,EAAAA,EAAAA,UAAS,CAAC,cAA1BiD,GAAP,eAEA,GAAsCjD,EAAAA,EAAAA,UAAS,CAAC,QAAhD,eAAOkD,EAAP,KAAoBC,EAApB,KAEMpB,EAAOqB,aAAaC,QAAQ,QAC5B9D,EAAO+D,KAAKC,MAAMxB,GAKlByB,EAAc,yCAAG,mHAEDC,EAAAA,EAAAA,MAFC,OAEb/C,EAFa,OAGnBqC,EAAcrC,GAHK,gDAKnBC,QAAQC,IAAI,SALO,yDAAH,sDASpBG,EAAAA,EAAAA,YAAU,WACRyC,GACD,GAAE,IAQH,IAAM5E,EAAS,SAACD,GACd,GAAKkE,EAGA,IAAIA,EAAO,CACdH,EAAmBH,MAAMmB,WAAa,SACtChB,EAAmBH,MAAMpE,OAAS,OAClC,IAAMwF,EAAiBd,EAAMe,cAC7B,OAAOjF,EAAOE,QAAO,SAACgF,GACpB,IAAMC,EAAeD,EAAKE,cACvBC,WACAJ,cACAK,QAAQN,IAAmB,EAE9B,OAAKG,GACwBD,EAAK9E,WAAWC,MAAK,SAACT,GAAD,OAChDA,EAAUA,UAAUqF,cAAcM,SAASP,EADK,GAMnD,GACF,CAEC,OAAOhF,EAAOE,QAAO,SAACgF,GAAD,OACrBA,EAAK9E,WAAWR,UAAUyF,WACzBJ,cACAK,QAAQpB,EAAMe,gBAAkB,CAHZ,GAKtB,CA3BC,OAAOjF,CA6BV,EAMK2D,EAAU,SAACzC,GACf,OAAOA,EAAWhB,QAAO,SAACjB,GACxB,OAAIA,EAAKW,YAAc2E,GACrBR,EAAmBH,MAAMmB,WAAa,SACtChB,EAAmBH,MAAMpE,OAAS,OAE3B8E,EAAajE,MAAK,SAACmF,GACxB,OACEvG,EAAKuG,GACFH,WACAJ,cACAK,QAAQpB,EAAMe,gBAAkB,CAEtC,KAGqB,OAAfV,GACPR,EAAmBH,MAAMmB,WAAa,UACtChB,EAAmBH,MAAMpE,OAAS,OAC3BsE,EAAO5D,QAAO,SAACjB,GACpB,OAAOoF,EAAYhE,MAAK,SAACmF,GACvB,OACEvG,EAAKuG,GACFH,WACAJ,cACAK,QAAQpB,EAAMe,gBAAkB,CAEtC,GACF,UAZE,CAcN,GACF,EAED,OAAIrE,GAAQkD,GACNlD,EAAK6E,cAEL,4BACE,SAAC,IAAD,CACEvB,MAAOA,EACPC,SAAUA,EACVI,YAAaA,EACbC,eAAgBA,EAChBtD,WAAYA,KAEd,SAAC,IAAD,WACE,SAAC,IAAD,CACElB,OAAQ8D,EACR5C,WAAYA,EACZjB,OAAQA,EACR0D,QAASA,WA2BnB,cAAGC,MAAO,CAAE8B,SAAU,QAAtB,wDAEH,E,sCCKD,MArJA,WAGE,IAAMC,GAAeC,EAAAA,EAAAA,GAAsBC,GACrC1E,GAAUC,EAAAA,EAAAA,MAChB,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOV,EAAP,KAAkBW,EAAlB,KACM8B,EAAOqB,aAAaC,QAAQ,QAElC,GADaC,KAAKC,MAAMxB,IACI/B,EAAAA,EAAAA,UAAS,KAArC,eAAOyC,EAAP,KAAegC,EAAf,KACA,GAA4BzE,EAAAA,EAAAA,UAAS,IAArC,eAAe0E,GAAf,WACA,GAA8B1E,EAAAA,EAAAA,UAAS,GAAvC,eAAgB2E,GAAhB,WAEA,GAAoC3E,EAAAA,EAAAA,UAAS,IAA7C,eAAO4E,EAAP,KAAmBC,EAAnB,KACA,GAAqC7E,EAAAA,EAAAA,UAAS,GAA9C,eAAO8E,EAAP,KACA,GADA,MACgC9E,EAAAA,EAAAA,UAAS,CACvC+E,SAAS,EACTpG,OAAQ,QAFV,eAAOqG,EAAP,KAAiBC,EAAjB,MAMAlE,EAAAA,EAAAA,YAAU,WACR,IAAMmE,EAAS,yCAAG,yGACEC,EAAAA,KADF,OACVzE,EADU,OAGhB+D,EADe/D,GAEfuE,EAAY,CAAEF,SAAS,IAJP,2CAAH,qDAMfG,GACD,GAAE,KACHnE,EAAAA,EAAAA,YAAU,WACR,IAAMqE,EAAa,yCAAG,yGACFC,EAAAA,KADE,OACd3E,EADc,OAGpBmE,EADmBnE,GAFC,2CAAH,qDAKnB0E,GACD,GAAE,IAGH,IAAM5E,EAAiB,yCAAG,kHAEJC,EAAAA,KAFI,OAEhBC,EAFgB,OAGtBT,EAAaS,GAHS,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAsEvB,OA7DAG,EAAAA,EAAAA,YAAU,WACRP,GACD,GAAE,KA6CHO,EAAAA,EAAAA,YAAU,WACR,IAAMuE,EAAc,yCAAG,WAAOC,GAAP,4FAEHC,EAAAA,GAAmCD,GAFhC,OAEf7E,EAFe,OAIrBgE,EADehE,EACE/B,QAJI,2CAAH,sDAOpBgC,QAAQC,IAAIkE,GACZQ,EAAeR,EAChB,GAAE,CAACA,KAKF,UAACW,EAAA,EAAD,WACGT,EAASD,SAAW,SAACT,EAAD,CAAcoB,UAAWV,EAASD,QAAStC,OAAQA,IAAa,IACrF,gBAAKtD,UAAU,6BAAf,UACE,mBAASwG,QAAS,kBAAMC,OAAO9F,QAAQ+F,MAArB,EAA6B1G,UAAU,gBAAgB2G,MAAM,SAA/E,uBAEC,eAAI3G,UAAU,OAAd,iCACH,gBAAKA,UAAU,mBAAf,SACKsD,EAAOpD,KAAI,SAAC0G,EAAMpE,GAEjB,OADAhB,QAAQC,IAAImF,IAEV,iBAAK5G,UAAU,oDAAf,WACE,iBAAKA,UAAU,IAAIwG,QAAS,WAhCtB,IAACJ,IAgCsCQ,EAAM3G,GA/B/DU,EAAQ,aAAD,OAAcyF,GAAU,CAACvD,MAAM1C,IACtCqF,EAAWY,GACX5E,QAAQC,IAAI2E,EA6BuD,EAAvD,WACA,SAAC,EAAAS,cAAD,CAAeC,OAAO,OAAWC,IAAK,wBAAwBH,EAAMI,eAAgBhH,UAAU,eAAeiH,IAAI,MACjH,eAAIjH,UAAU,iCAAd,SAAgD4G,EAAMA,SACtD,cAAG5G,UAAU,sBAAb,SAAoC4G,EAAMM,kBAE1C,gBAAKlH,UAAU,IAAf,SAEEyF,EAAWvF,KAAI,SAACiH,EAAW3E,GAEzB,OADAhB,QAAQC,IAAI0F,GACRP,EAAM3G,KAAOkH,EAAUP,OAEvB,kBAAUpE,GAKP,IACR,QAlBmEA,EAwB3E,QAIV,C,kKCzKK4E,EAAU,oCAMHC,EAAU,yCAAG,yGACDC,EAAAA,EAAAA,IAAkBF,GADjB,UAEA,OADlBG,EADkB,QAEXC,OAFW,gCAGTD,EAAS3E,KAHA,mFAAH,qDAOV6E,EAAa,yCAAG,WAAOC,GAAP,4FACJJ,EAAAA,EAAAA,KAAmBF,EAASM,GADxB,UAEH,OADlBH,EADqB,QAEdC,OAFc,gCAGZD,EAAS3E,KAHG,mFAAH,sDAOb+E,EAAQ,yCAAG,WAAOC,GAAP,4FACCN,EAAAA,EAAAA,IAAA,UAAqBF,GAArB,OAA+BQ,IADhC,UAEE,OADlBL,EADgB,QAETC,OAFS,gCAGPD,EAAS3E,KAHF,mFAAH,sDAQRiF,EAAW,yCAAG,WAAM5H,EAAG6H,GAAT,4FACFR,EAAAA,EAAAA,MAAoBF,EAAQnH,EAAG,IAAI6H,GADjC,UAED,OADlBP,EADmB,QAEZC,OAFY,yCAGdD,EAAS3E,MAHK,2CAAH,uD,kKC5BlBwE,EAAU,wCAMHW,EAAc,yCAAG,yGACLT,EAAAA,EAAAA,IAAkBF,GADb,UAEJ,OADlBG,EADsB,QAEfC,OAFe,gCAGbD,EAAS3E,KAHI,mFAAH,qDAOdoF,EAAiB,yCAAG,WAAOC,GAAP,4FACRX,EAAAA,EAAAA,KAAmBF,EAASa,GADpB,UAEP,OADlBV,EADyB,QAElBC,OAFkB,gCAGhBD,EAAS3E,KAHO,mFAAH,sDAOjBsF,EAAY,yCAAG,WAAOC,GAAP,4FACHb,EAAAA,EAAAA,IAAA,UAAqBF,GAArB,OAA+Be,IAD5B,UAEF,OADlBZ,EADoB,QAEbC,OAFa,gCAGXD,EAAS3E,KAHE,mFAAH,sDAOZwF,EAAe,yCAAG,WAAMnI,EAAGoI,GAAT,4FACNf,EAAAA,EAAAA,MAAoBF,EAAQnH,EAAG,IAAIoI,GAD7B,UAEL,OADlBd,EADuB,QAEhBC,OAFgB,yCAGlBD,EAAS3E,MAHS,2CAAH,uD","sources":["components/videos/videosItemRow.js","components/videos/videosCategoriaFila2.js","components/videos/videoListUser2.js","components/videos/series.js","paginas/Series.js","services/serie.js","services/temporada.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n//components\r\nimport { Image } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport '../slider/Item.scss'\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  item:{\r\n    flex: '0 0 0%',\r\n  margin: '0 0px',\r\n  position: 'relative',\r\n  padding:'0',\r\n  },\r\n  imagenContainer: {\r\n    width: '360px', /* Ancho fijo deseado */\r\n    height: '190px',/* Altura fija deseada */\r\n    overflow: 'hidden', /* Recorta las imágenes que sean más grandes */\r\n    border: '2px solid transparent',\r\n  },\r\n  imgClass: {\r\n    width: '300px', /* Ancho fijo deseado */\r\n    height:'200px',\r\n  }\r\n}));\r\n\r\n/**\r\n * Componente para agregar un elemento a un row\r\n * @param {*} video\r\n * @returns Elemento con la información del video\r\n */\r\nconst VideosItemRow = ({ video,...props }) => {\r\n  const classes = useStyles();  \r\n  const [duracion, setDuracion] = useState([]);\r\n  \r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n\r\n      if (tiempo[0] !==\"00\") {\r\n        new_duration = duration[0]+\"h\";\r\n      }\r\n      if (tiempo[1] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[1]+\"min\";\r\n      }\r\n    }\r\n    return new_duration;\r\n  };\r\n  useEffect(() => {\r\n    setDuracion(changeDuration(video.duration));\r\n\r\n  }, [duracion, video.duration]);\r\n  \r\n  return (\r\n    <div className=\"col-12 col-sm-6  col-lg-3 mx-5 \">\r\n      <h5 >{video.title_espanol}</h5>\r\n      <div className=\"imagen-container \">\r\n        <Button onClick={() =>props.verVideo(video.id)}>\r\n         \r\n          <LazyLoadImage effect=\"blur\"    className=\"img w-100 imagenContainer \"\r\n                src={\"https://sccotview.com\" + video.featured_image}\r\n                alt=\"\"\r\n              />\r\n        </Button>\r\n      </div>\r\n      <p>Duración: {duracion}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideosItemRow;\r\n","/* eslint-disable array-callback-return */\r\nimport React from \"react\";\r\nimport VideosItemRow from \"./videosItemRow\";\r\nimport Slider from \"../slider/index\";\r\n\r\nimport \"../../styles/styles.css\";\r\nimport \"../../styles/conCate.css\";\r\n\r\n/**\r\n * Componente para organizar los videos por categoria\r\n * @param {*} categoria\r\n * @param {*} verVideo\r\n * @returns Elemento con los videos organizados por categoria\r\n */\r\nconst VideosCategoriaFila2 = ({ categoria, verVideo, ...props }) => {\r\n  if (categoria) {\r\n    const videosEnCategoria = props.videos && props.search(props.videos).filter((video) => (\r\n      video.categorias.some((element) => categoria.categoria === element.categoria)\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        {videosEnCategoria.length > 0 && (\r\n          <div className=\"col-12 contenedorXcateg\">\r\n            <h2 className=\"titleCateg ms-3\" key={categoria.id}>| {categoria.categoria}<small > ▶</small></h2>\r\n            <div className=\"row\">\r\n            <Slider verVideo={verVideo}>\r\n                {videosEnCategoria.map((video) => (\r\n                  <Slider.Item\r\n                    key={video.id}\r\n                    video={video}\r\n                    histUsers={props.histUsers}\r\n                    user={props.user}\r\n                    verVideo={verVideo}\r\n                  >\r\n                  </Slider.Item>\r\n                ))}\r\n              </Slider>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default VideosCategoriaFila2;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {  useContext } from \"react\";\r\n\r\n//components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\n//dependencies\r\nimport VideosItem from \"./videosItem\";\r\nimport VideosCategoriaFila2 from \"./videosCategoriaFila2\";\r\nimport VideosCategoriaFila from \"./videosCategoriaFila\";\r\nimport * as HistorialUserServer from \"../../services/historialUser\";\r\nimport * as PreferenciasUserServer from \"../../services/preferenciasUser\";\r\nimport Context from \"../context/UserContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1248,\r\n    maxHeight:460,\r\n    margin: \"auto\",\r\n  },\r\n  \"@media (max-width: 1248px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\n/**\r\n * Componente para organizar en las pestañas (videos, series, casos) los videos en su respectiva categoria, con un buscador y filtro\r\n * @param {*} videos\r\n * @param {*} categories\r\n * @returns Contenedor con los videos y categorias \r\n */\r\nfunction VideosListUser2({videos, categories, ...props}) {\r\n  const history = useNavigate();\r\n\r\n  const [histUsers, setHistUsers] = useState();\r\n  const [prefUsers, setPrefUsers] = useState(null); \r\n  const [categoriasFalt, setCategoriasFalt] = useState(null);\r\n  const { user } = useContext(Context)\r\n\r\n  /**\r\n   * Función para obtener el historial de los usuarios.\r\n   */\r\n  const getHistorialUsers = async () => {\r\n    try {\r\n      const res = await HistorialUserServer.ListHistorialUser({'user_id':user.id});\r\n      setHistUsers(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  /**\r\n   * Función para obtener las preferencias de los usuarios\r\n   */\r\n  const getPreferenciasUser = async () => {\r\n    try {\r\n      const res = await PreferenciasUserServer.ListPreferenciaUser({'user_id':user.id});   \r\n      setPrefUsers(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getHistorialUsers();\r\n    getPreferenciasUser();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  /**\r\n   * Función para organizar las categorias de videos dependiendo de las preferencias.\r\n   */\r\n  useEffect(() => {\r\n\r\n    if(prefUsers && categories) {\r\n      let array = [];\r\n      let array1 =[];\r\n      let array2 = [];\r\n\r\n      for (let i = 0; i < prefUsers.length; i++) {\r\n        array1.push(prefUsers[i].categoria);        \r\n      } \r\n      for (let i = 0; i < categories.length; i++) {\r\n        array2.push(categories[i]);        \r\n      }    \r\n      \r\n      for (var i = 0; i < array2.length; i++) {\r\n          var igual=false;\r\n           for (var j = 0; j < array1.length & !igual; j++) {\r\n               if(array2[i].categoria === array1[j] )\r\n                igual=true;\r\n              }\r\n          if(!igual)array.push(array2[i]);\r\n      }\r\n      console.log();\r\n      if (array) {\r\n        setCategoriasFalt(array);\r\n      }\r\n      else {\r\n        setCategoriasFalt(null);\r\n      }\r\n      \r\n    }\r\n  },[categories, prefUsers])\r\n  /**\r\n   * Función para redireccionar al reproductor del video seleccionado, se crea un nuevo historial de usuario si es la primera vez en ver el video, de lo contrario se envía este historial como state\r\n   * @param {*} id \r\n   */\r\n  const verVideo = async (id) =>{\r\n    const formData = new FormData();\r\n    let histUser;\r\n    let contador = 0;\r\n    formData.append(\"usuario\", user.id);\r\n    formData.append(\"video\", id);\r\n    try {\r\n      for (let index = 0; index < histUsers.length; index++) {\r\n      const element = histUsers[index];\r\n        if (element.usuario.id === user.id && element.video === id) {\r\n          histUser= element;\r\n          contador++;\r\n        }\r\n      }\r\n      if(contador ===0) {\r\n        const hu = await  HistorialUserServer.RegisterHistorialUser(formData);\r\n        histUser = hu.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    history(`/seeVideo/${id}`,{state:histUser});\r\n    \r\n  }\r\n  \r\n  const classes = useStyles();\r\n  if (videos.length >0 ) {\r\n    return (\r\n      <div>\r\n        <div id=\"carousel_videos\">\r\n          {/* {console.log(props.listVideos)}\r\n          {console.log(videos)} */}\r\n         \r\n          <h2>🕑 Últimos videos</h2>\r\n          <Carousel className={classes.root} id=\"carousel\" fade >\r\n            {videos &&\r\n              props.search(videos).slice(0, 4).map((video) => (\r\n                <Carousel.Item key={video.id}>\r\n                  <VideosItem\r\n                    key={video.id}\r\n                    video={video}\r\n                    listVideos={props.listVideos}\r\n                    histUsers = {histUsers}\r\n                    user = {user}\r\n                    verVideo = {verVideo}\r\n                  />\r\n                </Carousel.Item>\r\n              ))}\r\n          </Carousel>\r\n        </div>\r\n        <br></br>\r\n        <hr></hr>\r\n        <div id=\"card_videos\">\r\n          {\r\n          prefUsers ? \r\n            <div>\r\n              {prefUsers && props.search2(prefUsers).map((element, index) => (\r\n                <VideosCategoriaFila\r\n                  key= {index}\r\n                  categoria ={element}\r\n                  videos={videos}\r\n                  search={props.search}\r\n                  histUsers = {histUsers}\r\n                  user = {user}\r\n                  verVideo= {verVideo}\r\n                >\r\n                </VideosCategoriaFila>\r\n                ))}\r\n              {categoriasFalt && props.search2(categoriasFalt).map((element, index) => (\r\n                <VideosCategoriaFila\r\n                  key= {index}\r\n                  categoria ={element}\r\n                  videos={videos}\r\n                  search={props.search}\r\n                  histUsers = {histUsers}\r\n                  user = {user}\r\n                  verVideo= {verVideo}  \r\n                >\r\n                </VideosCategoriaFila>\r\n                ))}\r\n            </div>\r\n          :\r\n          categories && props.search2(categories).map((element) => (\r\n            <VideosCategoriaFila2\r\n              key= {element.id}\r\n              categoria ={element}\r\n              videos={videos}\r\n              search={props.search}\r\n              histUsers = {histUsers}\r\n              user = {user}\r\n              verVideo= {verVideo}\r\n\r\n            >\r\n            </VideosCategoriaFila2>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div id=\"card_videos\">\r\n        <h2 style={{color:\"white\"}}><center>No hay videos en este modulo!!</center></h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideosListUser2;\r\n","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\n//dependencies\r\nimport { ErrorBoundary } from \"./errorsBoundary\";\r\nimport { ListCategorias } from \"../../services/category\";\r\n\r\nimport SearchComponent from \"./search\";\r\nimport VideosListUser2 from \"./videoListUser2\";\r\n\r\n/**\r\n * Función para mostrar los videos con tipo Serie en la pestaña Series\r\n * @param {object} series\r\n * @returns Componente del buscador y componente lista (Dependendiendo si el usuario es admin o no, se retorna un componente distinto)\r\n */\r\nconst SeriesList = ({series, ...props}) => {\r\n  const contenedorCarousel = document.getElementById(\"carousel\");\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [categories, setCategories] = useState(\"\");\r\n  const [searchParam] = useState([\"title_espanol\"]);\r\n  const [searchParam2] = useState([\"categoria\"]);\r\n\r\n  const [filterParam, setFilterParam] = useState([\"All\"]);\r\n\r\n  const data = localStorage.getItem(\"user\");\r\n  const user = JSON.parse(data);\r\n\r\n  /**\r\n   * Función para traer la lista de categorias \r\n   */\r\n  const listCategorias = async () => {\r\n    try {\r\n      const res = await ListCategorias();\r\n      setCategories(res);\r\n    } catch (error) {\r\n      console.log(\"Error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    listCategorias();\r\n  }, []);\r\n  \r\n  \r\n  /**\r\n   * Función para realizar la busqueda mediante el componente search\r\n   * @param {*} series \r\n   * @returns Parametros de la busqueda\r\n   */\r\n  const search = (videos) => {\r\n    if (!query) {\r\n      return videos\r\n    }\r\n    else if (query) {\r\n      contenedorCarousel.style.visibility = 'hidden'\r\n      contenedorCarousel.style.height = '10px';\r\n      const queryLowerCase = query.toLowerCase();\r\n      return videos.filter((dato) => {\r\n        const titleMatches = dato.title_espanol\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(queryLowerCase) > -1;\r\n  \r\n        if (!titleMatches) {\r\n          const descriptionMatches = dato.categorias.some((categoria) =>\r\n          categoria.categoria.toLowerCase().includes(queryLowerCase)\r\n        );\r\n          return descriptionMatches\r\n        }\r\n        return titleMatches\r\n      })\r\n    }\r\n     else {      \r\n      return videos.filter((dato)=>\r\n      dato.categorias.categoria.toString()\r\n      .toLowerCase()\r\n      .indexOf(query.toLowerCase()) > -1\r\n      )\r\n    }\r\n    \r\n  };\r\n  /**\r\n   * Función para realizar el filtro por categoria\r\n   * @param {*} categories \r\n   * @returns Resultado del filtro\r\n   */\r\n  const search2 = (categories) => {\r\n    return categories.filter((item) => {\r\n      if (item.categoria === filterParam) {\r\n        contenedorCarousel.style.visibility = \"hidden\";\r\n        contenedorCarousel.style.height = \"10px\";\r\n\r\n        return searchParam2.some((parameter) => {\r\n          return (\r\n            item[parameter]\r\n              .toString()\r\n              .toLowerCase()\r\n              .indexOf(query.toLowerCase()) > -1\r\n          );\r\n        });\r\n      }\r\n      // eslint-disable-next-line eqeqeq\r\n      else if (filterParam == \"All\") {\r\n        contenedorCarousel.style.visibility = \"visible\";\r\n        contenedorCarousel.style.height = \"100%\";\r\n        return series.filter((item) => {\r\n          return searchParam.some((parameter) => {\r\n            return (\r\n              item[parameter]\r\n                .toString()\r\n                .toLowerCase()\r\n                .indexOf(query.toLowerCase()) > -1\r\n            );\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user && series) {\r\n    if (user.is_superuser) {\r\n      return (\r\n        <div>\r\n          <SearchComponent\r\n            query={query}\r\n            setQuery={setQuery}\r\n            filterParam={filterParam}\r\n            setFilterParam={setFilterParam}\r\n            categories={categories}\r\n          ></SearchComponent>\r\n          <ErrorBoundary>\r\n            <VideosListUser2\r\n              videos={series}\r\n              categories={categories}\r\n              search={search}\r\n              search2={search2}\r\n            />\r\n          </ErrorBoundary>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <SearchComponent\r\n          query={query}\r\n          setQuery={setQuery}\r\n          filterParam={filterParam}\r\n          setFilterParam={setFilterParam}\r\n          categories={categories}\r\n        ></SearchComponent>\r\n        <ErrorBoundary>\r\n        <VideosListUser2\r\n            videos={series}\r\n            categories={categories}\r\n            search={search}\r\n            search2={search2}\r\n          />\r\n        </ErrorBoundary>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default SeriesList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//import { Link } from 'react-router-dom';\r\n//dependencies\r\nimport * as SerieServer from \"../services/serie\";\r\nimport * as TemporadaServer from \"../services/temporada\";\r\n\r\nimport * as VideoServer from \"../services/videoServer\";\r\nimport * as HistorialUserServer from \"../services/historialUser\";\r\n\r\nimport SeriesList from \"../components/videos/series\";\r\nimport VideoLoadingComponent from \"../components/videos/videoLoading\";\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\n\r\n/**\r\n * Carga todos los videos que sean 'Series' para el modulo Series de la aplicación\r\n */\r\nfunction AppSeries() {\r\n  \r\n\r\n  const VideoLoading = VideoLoadingComponent(SeriesList);\r\n  const history = useNavigate();\r\n  const [histUsers, setHistUsers] = useState();  \r\n  const data = localStorage.getItem(\"user\");\r\n  const user = JSON.parse(data);\r\n  const [series, setSeries] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n  const [idSerie, setIdSerie] = useState(0);\r\n  \r\n  const [temporadas, setTemporadas] = useState([]);\r\n  const [idTemporada,setIdTemporada] = useState(0);\r\n  const [appState, setAppState] = useState({\r\n    loading: true,\r\n    videos: null,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    const getSeries = async () => {\r\n      const res = await SerieServer.ListSeries();\r\n      const series = res;\r\n      setSeries(series);\r\n      setAppState({ loading: false});\r\n    };\r\n    getSeries();\r\n  }, []);\r\n  useEffect(() => {\r\n    const getTemporadas = async () => {\r\n      const res = await TemporadaServer.ListTemporadas();\r\n      const temporadas = res;\r\n      setTemporadas(temporadas);\r\n    };\r\n    getTemporadas();\r\n  }, []);\r\n\r\n\r\n  const getHistorialUsers = async () => {\r\n    try {\r\n      const res = await HistorialUserServer.ListHistorial();\r\n      setHistUsers(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHistorialUsers();\r\n  }, []);\r\n\r\n /**\r\n   * Función para redireccionar al reproductor del video seleccionado, se crea un nuevo historial de usuario si es la primera vez en ver el video, de lo contrario se envía este historial como state\r\n   * @param {*} id \r\n   */\r\n  const entrarVideo = async (id)=>{\r\n   \r\n    const formData = new FormData();\r\n    let histUser;\r\n    let contador = 0;\r\n    formData.append(\"usuario\", user.id);\r\n    formData.append(\"video\", id);\r\n    try {\r\n      for (let index = 0; index < histUsers.length; index++) {\r\n      const element = histUsers[index];\r\n        if (element.usuario.id === user.id && element.video === id) {\r\n          histUser= element;\r\n          contador++;\r\n        }\r\n      }\r\n      if(contador ===0) {\r\n        const hu = await  HistorialUserServer.RegisterHistorialUser(formData);\r\n        histUser = hu.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    console.log(id);\r\n    history(`/seeVideo/${id}`,{state:histUser});\r\n  }\r\n\r\n\r\n\r\n  const entrarTemporada = (temporadaId)=>{\r\n    history(`/seeTemporada/${temporadaId}`,{state:histUsers});\r\n    setIdTemporada(temporadaId)\r\n    console.log(idTemporada);\r\n  }\r\n  const entrarSerie = (serieId)=>{\r\n    history(`/seeSerie/${serieId}`,{state:histUsers});\r\n    setIdSerie(serieId)\r\n    console.log(serieId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getVideosSerie = async (serieId) => {\r\n\r\n      const res = await VideoServer.ListVideosPorTemporada(serieId);\r\n      const videos = res;\r\n      setVideos(videos.videos);\r\n      //setSeries(series);\r\n    };\r\n    console.log(idTemporada);\r\n    getVideosSerie(idTemporada);\r\n  }, [idTemporada]);\r\n \r\n\r\n\r\n  return (\r\n    <Container>\r\n      {appState.loading ?  <VideoLoading isLoading={appState.loading} series={series} /> : \"\" }\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button  onClick={() => window.history.back()} className=\"btn btn-light\" value=\"Volver\">Volver</button>\r\n      </div>\r\n         <h1 className=\"px-3\"> Listado de Series</h1>\r\n      <div className=\"d-flex flex-wrap\">\r\n          {series.map((serie,index) =>{\r\n            console.log(serie);\r\n            return(\r\n              <div className=\" border rounded cursorPointer card-width  p-3 m-3\" key={index}>\r\n                <div className=\" \" onClick={()=>{entrarSerie(serie.id)}}>\r\n                <LazyLoadImage effect=\"blur\"     src={'https://sccotview.com'+serie.featured_image} className=\"rounded mb-2\" alt=\"\"/>\r\n                <h3 className=\" text-capitalize truncate-text\">{serie.serie}</h3>\r\n                <p className=\" truncate-text mb-0\">{serie.description}</p>\r\n                </div>\r\n                <div className=\" \">\r\n                {\r\n                  temporadas.map((temporada, index) => {\r\n                    console.log(temporada);\r\n                    if (serie.id === temporada.serie) {\r\n                      return (\r\n                        <div key={index}>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    // Retorna null si no se cumple la condición\r\n                    return null;\r\n                  })\r\n                }\r\n                </div>\r\n                \r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\nexport default AppSeries;\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Función para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Función para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["makeStyles","theme","item","flex","margin","position","padding","imagenContainer","width","height","overflow","border","imgClass","categoria","verVideo","props","videosEnCategoria","videos","search","filter","video","categorias","some","element","length","className","id","map","histUsers","user","useStyles","root","maxWidth","maxHeight","display","categories","history","useNavigate","useState","setHistUsers","prefUsers","setPrefUsers","categoriasFalt","setCategoriasFalt","useContext","Context","getHistorialUsers","HistorialUserServer","res","console","log","getPreferenciasUser","PreferenciasUserServer","useEffect","array","array1","array2","i","push","igual","j","formData","FormData","contador","append","index","usuario","histUser","hu","data","state","classes","Carousel","fade","slice","listVideos","search2","style","color","series","contenedorCarousel","document","getElementById","query","setQuery","setCategories","searchParam","searchParam2","filterParam","setFilterParam","localStorage","getItem","JSON","parse","listCategorias","ListCategorias","visibility","queryLowerCase","toLowerCase","dato","titleMatches","title_espanol","toString","indexOf","includes","parameter","is_superuser","fontSize","VideoLoading","VideoLoadingComponent","SeriesList","setSeries","setVideos","setIdSerie","temporadas","setTemporadas","idTemporada","loading","appState","setAppState","getSeries","SerieServer","getTemporadas","TemporadaServer","getVideosSerie","serieId","VideoServer","Container","isLoading","onClick","window","back","value","serie","LazyLoadImage","effect","src","featured_image","alt","description","temporada","API_URL","ListSeries","axiosInstance","response","status","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada"],"sourceRoot":""}