{"version":3,"file":"static/js/695.14ffcbad.chunk.js","mappings":"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","sources":["axios.js","components/especialidades/listPalabrasClaves.js","components/admin/PalabrasClaves.js","components/especialidades/palabraclaveModal.js","components/videos/videoLoading.js","hooks/useModal.js","services/palabraClave.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//toc贸 cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Funci贸n que valida si existe y es valido un access_token para manejo de sesi贸n\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\nimport PalabraClaveModal from \"./palabraclaveModal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n\r\n\r\nconst PalabraClaveList = ({palabrasClaves}) => {\r\n  const history = useNavigate();\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [listPalabrasClaves, setPalabrasClaves] = useState(palabrasClaves);\r\n  const initialFormData = {palabraClave:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ palabraClave: item.palabraClave });\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({palabraClave:\"\"});\r\n    handleShow(true)\r\n  };\r\n\r\n\r\n  const getPalabrasClaves = async () => {\r\n    try {\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n        getPalabrasClaves();\r\n      setId(null)\r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  \r\n  if (user) {\r\n    \r\n    return (\r\n      <Container> \r\n        \r\n        <div className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h3\">\r\n              PalabrasClaves\r\n              </Typography>\r\n        </div>\r\n        <Stack  alignItems=\"center\">\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar PalabraClave\r\n          </Button>\r\n        </Stack>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 11, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>PalabraClave</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listPalabrasClaves.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listPalabrasClaves.map((PalabraClave, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{PalabraClave.id}</td>\r\n                      <td>{PalabraClave.id}</td>\r\n                      <td>{PalabraClave.palabraClave}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-warning btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(PalabraClave)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <PalabraClaveModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          palabraclave_id ={id}\r\n          currentItem={currentItem}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></PalabraClaveModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default PalabraClaveList;\r\n","import { useEffect, useState } from \"react\";\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport ListPalabrasClaves from \"../especialidades/listPalabrasClaves\"\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst  Principal = () =>{\r\n    const PalabraClaveLoading = VideoLoadingComponent(ListPalabrasClaves);\r\n    const { user } = useContext(Context);\r\n\r\n    const [appState, setAppState] = useState({\r\n      loading: true,\r\n      palabrasClaves: null,\r\n    });   \r\n    \r\n    useEffect(() => {\r\n        palabraClaveServer.ListPalabrasClaves().then((res) => {\r\n        const allPalabrasClaves = res;\r\n        setAppState({ loading: false, palabrasClaves: allPalabrasClaves });\r\n      });\r\n    }, [setAppState]);\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <PalabraClaveLoading isLoading={appState.loading} palabrasClaves={appState.palabrasClaves} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n}\r\n\r\nexport default Principal;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalPalabraClave = ({ handleClose, show, palabraclave_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!palabraclave_id) {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.RegisterPalabraClave(formData);\r\n      } else {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.updatePalabraClave(palabraclave_id, formData);        \r\n      }\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      props.setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" ><h2>{palabraclave_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"palabraClave\"\r\n            value={newData.palabraClave || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {palabraclave_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalPalabraClave;","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la funci贸n main de lo contrario retorna mensaje indicando que a煤n se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //funci贸n para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //funci贸n para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/palabrasclaves/\";\r\n\r\n/**\r\n * Funci贸n para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListPalabrasClaves = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getPalabraClave = async (PalabraClaveID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${PalabraClaveID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","palabrasClaves","history","useNavigate","useModal","show","handleShow","handleClose","useState","id","setId","currentItem","setCurrentItem","listPalabrasClaves","setPalabrasClaves","palabraClave","newData","setFormData","user","useContext","Context","useStyles","makeStyles","theme","paper","marginTop","spacing","marginBottom","display","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getPalabrasClaves","palabraClaveServer","res","useEffect","classes","Container","className","Typography","component","variant","Stack","Button","type","onClick","name","style","fontSize","backgroundColor","length","colSpan","map","PalabraClave","index","palabraclave_id","PalabraClaveLoading","VideoLoadingComponent","ListPalabrasClaves","loading","appState","setAppState","isLoading","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","props","handleSubmit","e","preventDefault","formData","FormData","append","onHide","contentClassName","cloud","centered","closeButton","onSubmit","controlId","rows","value","onChange","target","Component","justifyContent","role","initialValue","setShow","RegisterPalabraClave","newPalabraClave","updatePalabraClave","updPalabraClave","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","React","ref","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","_extends","clsx","concat","capitalize","withStyles","margin","typography","caption","button","overline","srOnly","position","width","overflow","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","displayInline","displayBlock"],"sourceRoot":""}