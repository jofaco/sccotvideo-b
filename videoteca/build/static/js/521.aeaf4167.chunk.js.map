{"version":3,"file":"static/js/521.aeaf4167.chunk.js","mappings":"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","sources":["components/videos/webinarDetail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {useLocation, useNavigate, useParams, Link} from 'react-router-dom';\r\n\r\n\r\n//dependencias\r\nimport * as VideoServer from \"../../services/videoServer\";\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport * as TemporadaServer from \"../../services/temporada\";\r\nimport VideoLoadingComponent from \"./videoLoading\";\r\n\r\nimport Rating from '@mui/material/Rating';\r\n\r\nimport * as HistorialUserServer from \"../../services/historialUser\";\r\nimport * as commentaryServer from \"../../services/commentary\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n//MaterialUI\r\nimport { Container,Button,Box,Stack,Typography } from '@mui/material';\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\r\n//components\r\nimport \"../../styles/styles.css\";\r\nimport ModalComentario from \"./comentarioModal\";\r\nimport ModalComentarios from \"./listComentariosModal\";\r\nimport IframeVideo from \"./iframeVideo\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Swal from \"sweetalert2\";\r\nimport capitalizarNombre from \"../functions/capitalizarNombre\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n/**\r\n * Función para mostrar el detalle de un video y guardar la puntuación.\r\n * @returns Componente que muestra el detalle de un video junto con el iframe\r\n */\r\nconst WebinarDetail = () => {\r\n  \r\n  const history = useNavigate();\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [show2, handleShow2, handleClose2] = useModal(false);\r\n  const [histUsers, setHistUsers] = useState();  \r\n\r\n  const location = useLocation();\r\n  const { id } = useParams();\r\n  const [video, setVideo] = useState([]);\r\n  const [serie, setSerie] = useState([]);\r\n  const [temporada, setTemporada] = useState([]);\r\n  const [idSerie, setIdSerie] = useState([]);\r\n  const [idTemporada, setIdTemporada] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [duracion, setDuracion] = useState([]);\r\n  const [uploadDate, setUploadDate] = useState(null);\r\n  const [histUser, setHistUser] = useState(location.state);\r\n  const [commentaries, setCommentaries] = useState([]);\r\n  const [activeStar, setActiveStar] = useState(-1);\r\n  const totalStars = 5;\r\n\r\n  // superuser\r\n  // const data = localStorage.getItem(\"user\");\r\n  // const user = JSON.parse(data);\r\n\r\n  //\r\n  const [appState, setAppState] = useState({\r\n    loading: true\r\n  });\r\n  const VideoLoading = VideoLoadingComponent(video);\r\n  \r\n  /**\r\n   * Función para almacenar la duración del video en un formato adecuado para mostrarla en pantalla.\r\n   * @param {time} duration \r\n   * @returns Duración en el formato adecuado.\r\n   */\r\n  const changeDuration = (duration) => {\r\n    let tiempo = duration.split(':');\r\n    let new_duration = \"\";\r\n    if (tiempo) {\r\n      if (tiempo[0] !== \"00\") {\r\n        new_duration = tiempo[0] + \"h\";\r\n      }\r\n      if (tiempo[1] !== \"00\") {\r\n        new_duration = \" \" + new_duration + \" \" + tiempo[1] + \"min\";\r\n      }\r\n      /* if (tiempo[2] !==\"00\") {\r\n        new_duration = \" \"+new_duration+\" \"+tiempo[2]+\"s\";\r\n      } */\r\n    }\r\n    return new_duration.trim(); // trim() para eliminar cualquier espacio en blanco adicional\r\n  };\r\n  // const entrarSerie = (serieId)=>{\r\n  //   history(`/seeSerie/${serieId}`,{state:histUsers});\r\n  //   setIdSerie(serieId)\r\n  //   console.log(serieId);\r\n  // }\r\n  // const entrarTemporada = (temporadaId)=>{\r\n  //   history(`/seeTemporada/${temporadaId}`,{state:histUsers});\r\n  //   setIdTemporada(temporadaId)\r\n  //   console.log(temporadaId);\r\n  // }\r\n  // const handleDelete = async (videoID) => {\r\n\r\n  //   Swal.fire({\r\n  //     title: \"¿Seguro quieres eliminar este video?\",\r\n  //     text: \"No podras recuperar la información\",\r\n  //     icon: \"warning\",\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: \"#3085d6\",\r\n  //     cancelButtonColor: \"#d33\",\r\n  //     confirmButtonText: \"Eliminar video\"\r\n  //   }).then( async (result) => {\r\n  //     if (result.isConfirmed) {\r\n  //       await VideoServer.DeleteVideo(videoID)\r\n  //       history(\"/\");\r\n  //       Swal.fire({\r\n  //         title: \"Video eliminado con exito\",\r\n  //         text: \"\",\r\n  //         icon: \"success\"\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // };\r\n  \r\n  // const getSerieAndTemporada = async (serieId,temporadaId) =>{\r\n\r\n  //     const responseSerie = await SerieServer.getSerie(serieId)\r\n  //     console.log(responseSerie);\r\n  //     setSerie(responseSerie)\r\n\r\n  //     const responseTemporada = await TemporadaServer.getTemporada(temporadaId)\r\n  //     console.log(responseTemporada);\r\n  //     setTemporada(responseTemporada)\r\n  // }\r\n  // const getHistorialUsers = async () => {\r\n  //   try {\r\n  //     const res = await HistorialUserServer.ListHistorial();\r\n      \r\n  //     // Solo realizar acciones si el usuario está autenticado\r\n  //     if (res && user?.id) {\r\n  //       setHistUsers(res);\r\n  //       setLoading(false);\r\n  \r\n  //       if (res.user_score !== undefined) {\r\n  //         setActiveStar(res.user_score - 1);\r\n  //       }\r\n  //     } else {\r\n  //       // Si no hay usuario, no hacer nada relacionado con el historial.\r\n  //       setHistUsers([]);  // O podrías hacer un manejo diferente si deseas\r\n  //       setLoading(false);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  \r\n  // Llamar a la función getHistorialUsers solo si hay un usuario\r\n  // useEffect(() => {\r\n  //   if (user?.id) {\r\n  //     getHistorialUsers();\r\n  //   }\r\n  // }, [user]); // Dependencia de user para que se ejecute cuando esté disponible.\r\n  \r\n  \r\n  \r\n\r\n  \r\n  /**\r\n   * Función para obtener la información del video en reproducción\r\n   */\r\n  useEffect(() => {\r\n    const getVideo = async (videoID) => {\r\n      const res = await VideoServer.getVideo(videoID);\r\n      const video = res;\r\n  \r\n      setUploadDate(new Date(res.upload_date).toDateString());\r\n      const dur = changeDuration(res.duration);\r\n      setDuracion(dur);\r\n  \r\n      setVideo({\r\n        ...video,\r\n        duration: dur, // Usar la duración recién generada\r\n      });\r\n  \r\n      setAppState({ loading: false });\r\n    };\r\n  \r\n    // const getCommentaries = async (videoId) => {\r\n    //   // const res = await commentaryServer.ListCommentaryVideo({ video_id: videoId });\r\n    //   // setCommentaries(res);\r\n    // };\r\n  \r\n    const initialize = async () => {\r\n      await getVideo(id);\r\n      // await getCommentaries(id);\r\n  \r\n      // if (user && user.id) {\r\n      //   // await getHistorialUsers();\r\n      // }\r\n  \r\n      // solo llamar si `video.serie` y `video.temporada` están definidos\r\n      // if (video?.serie && video?.temporada) {\r\n      //   getSerieAndTemporada(video.serie, video.temporada);\r\n      // }\r\n    };\r\n  \r\n    initialize();\r\n  }, [id]);\r\n  \r\n   \r\n  /**\r\n   * Función para cambiar la calificación del video.\r\n   * @param {int} index \r\n   */\r\n  // const handleClick = async (index) => {\r\n  //   setActiveStar(index);\r\n  \r\n  //   // Evitar que se ejecute si no hay usuario\r\n  //   if (!user || !user.id) {\r\n  //     alert(\"Por favor, inicia sesión para calificar el video.\");\r\n  //     return;\r\n  //   }\r\n  \r\n  //   let cumulative_score = video.cumulative_score;\r\n  //   let number_votes = video.numberOfVotes;\r\n  \r\n  //   // Actualizar solo si el usuario tiene historial asociado\r\n  //   if (histUser.user_score) {\r\n  //     cumulative_score = cumulative_score - histUser.user_score + index + 1;\r\n  //     const score_video = cumulative_score / number_votes;\r\n  //     setHistUser({ ...histUser, user_score: index + 1 });\r\n  //     await VideoServer.partialUpdateVideo(video.id, {\r\n  //       cumulative_score,\r\n  //       score: score_video,\r\n  //     });\r\n  //   } else {\r\n  //     number_votes += 1;\r\n  //     cumulative_score = cumulative_score + index + 1;\r\n  //     const score_video = cumulative_score / number_votes;\r\n  //     setHistUser({ ...histUser, user_score: index + 1 });\r\n  //     await VideoServer.partialUpdateVideo(video.id, {\r\n  //       cumulative_score,\r\n  //       numberOfVotes: number_votes,\r\n  //       score: score_video,\r\n  //     });\r\n  //   }\r\n  \r\n  //   // Solo actualiza el historial si el usuario está autenticado\r\n  //   if (user?.id) {\r\n  //     await HistorialUserServer.updateHistorialUser(histUser.id, {\r\n  //       user_score: index + 1,\r\n  //     });\r\n  //   }\r\n  // };\r\n  \r\n  \r\n  \r\n  \r\n  const classes = useStyles();\r\n\r\n    return (\r\n      <Container>\r\n        {appState.loading  ?  <VideoLoading isLoading={appState.loading} video={video} /> :\"\"}\r\n        <div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button  onClick={() => window.history.back()} className=\"btn btn-light mt-4 my-2\" value=\"Volver\">Volver</button>\r\n          </div>\r\n        </div>\r\n        <div className={classes.paper}>\r\n          <h3>\r\n            {video.title_espanol}\r\n          </h3>\r\n        </div>\r\n        <br></br>\r\n        <div className=\"row\">\r\n          <div className=\"col-8 iframe1\">\r\n            <IframeVideo\r\n              video={video}\r\n              webinarCondition={true}\r\n              >\r\n            </IframeVideo>\r\n          </div>\r\n          <div className=\"col infoVideo\" >\r\n           <div className=\"d-flex justify-content-between\">\r\n              <Typography component=\"h5\" variant=\"h6\" style={{color:\"white\",borderBottom:\"3px solid white\",paddingBottom:'5px'}} align=\"center\">\r\n                {video.duration}\r\n              </Typography>\r\n              <div className=\"d-flex justify-content-end text-capitalize  \">\r\n                <Box sx={{'& > legend': { mt: 2 }}} className={classes.containerRating}>\r\n                  <div className=\"bg-secondary d-inline pt-2 px-1 rounded-2\">\r\n                    <Rating name=\"read-only\" value={parseFloat(video.score)} precision={0.5} readOnly />\r\n                  </div>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n            <br></br>\r\n            {/* {user.is_superuser &&\r\n              <div className=\"d-flex justify-content-between mb-2\">\r\n                \r\n                <button\r\n                  onClick={() => history(`/updateVideo/${video.id}`)}\r\n                  className=\"btn  btn-outline-primary form-control mx-1\"\r\n                  \r\n                  >\r\n                  Actualizar\r\n                </button>\r\n                \r\n                <button\r\n                  // onClick={() => video.id && handleDelete(video.id)}\r\n                  className=\" btn  btn-outline-danger form-control mx-1\"\r\n                  >\r\n                  Eliminar\r\n                </button>\r\n              </div>\r\n            } */}\r\n  \r\n            <div className=\"d-flex justify-content-center flex-column align-items-center\">\r\n            {/* <Typography component=\"h5\" variant=\"h6\">\r\n              Ayúdanos a calificar   &nbsp;\r\n              <Box \r\n                sx={{\r\n                  display: \"inline-flex\",\r\n                  position: \"relative\",\r\n                  cursor: \"pointer\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                {[...new Array(totalStars)].map((arr, index) => {\r\n                  return (\r\n                    <Box \r\n                    key={index} \r\n                    position=\"relative\"\r\n                    sx={{\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    // onClick={(e) => handleClick(index)}\r\n                    >\r\n                      <Box \r\n                        sx={{\r\n                          width: index <= activeStar ? \"100%\" : \"0%\",\r\n                          overflow: \"hidden\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                      >\r\n                        <StarIcon />\r\n                      </Box>\r\n                      <Box>\r\n                        <StarBorderIcon />\r\n                      </Box>\r\n                    </Box>\r\n                  )\r\n                })}\r\n              </Box>\r\n            </Typography> */}\r\n            <br></br>\r\n           \r\n            <div className=\"mt-3\">\r\n  \r\n              <div className=\"table-responsive \">\r\n                <table className=\"table  text-light \">\r\n                  <thead>\r\n                    <tr className=\"\">\r\n                      <td scope=\"\">Autores</td>\r\n                      <td>\r\n                      {video.autor && (\r\n                        video.autor.map(autor => (\r\n                          <li key={autor.id}><small className=\"\">{capitalizarNombre(autor.autor)}</small></li>\r\n                        ))\r\n                      )}\r\n                      </td>\r\n                    </tr>\r\n                    {video.tipe_of_video === 2 && (\r\n                      <>\r\n                        <tr>\r\n                          <th scope=\"col\">Serie</th>\r\n                          <th scope=\"col\">\r\n                            <a \r\n                              className=\"text-primary\" \r\n                              style={{ cursor: \"pointer\" }} \r\n                              // onClick={() => entrarSerie(serie.id)}\r\n                            >\r\n                              {serie.serie}\r\n                            </a>\r\n                          </th>\r\n                        </tr>\r\n                        <tr>\r\n                          <th scope=\"col\">Temporada</th>\r\n                          <th scope=\"col\">\r\n                            <a \r\n                              className=\"text-primary\" \r\n                              style={{ cursor: \"pointer\" }} \r\n                              // onClick={() => entrarTemporada(temporada.id)}\r\n                            >\r\n                              {temporada.temporada}\r\n                            </a>\r\n                          </th>\r\n                        </tr>\r\n                      </>\r\n                    )}\r\n  \r\n  \r\n                  </thead>\r\n                </table>\r\n              </div>\r\n              \r\n              \r\n              \r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div>\r\n              <h5>Descripción</h5>\r\n            <p className=\"mt-3\">\r\n                {video.description_esp}\r\n            </p>\r\n          </div>\r\n          <br/>\r\n          <div className=\"table-responsive \">\r\n            <table className=\"table  text-light \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Categorías</th>\r\n                  <th scope=\"col\">Especialidades</th>\r\n                  <th scope=\"col\">Subespecialidades</th>\r\n                  {/* <th scope=\"col\">Autores</th> */}\r\n                  <th scope=\"col\">Palabras claves</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                  {video.categorias && (\r\n                    video.categorias.map(categoria => (\r\n                      <li key={categoria.id}><small className=\"\">{categoria.categoria}</small></li>\r\n                    ))\r\n                  )}\r\n                  </td>\r\n                  <td>\r\n                    {video.especialidad && (\r\n                      video.especialidad.map(especialidad => (\r\n                        <li key={especialidad.id}><small className=\"\">{especialidad.especialidad}</small></li>\r\n                      ))\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                  {video.subEspecialidad && (\r\n                    video.subEspecialidad.map(subEspecialidad => (\r\n                      <li key={subEspecialidad.id}><small className=\"\">{subEspecialidad.subEspecialidad}</small></li>\r\n                    ))\r\n                  )}\r\n                  </td>\r\n                  {/* <td>\r\n                  {video.autor && (\r\n                    video.autor.map(autor => (\r\n                      <li key={autor.id}><small className=\"\">{autor.autor}</small></li>\r\n                    ))\r\n                  )}\r\n                  </td> */}\r\n                  <td>\r\n                    {video.palabraClave && (\r\n                        video.palabraClave.map(palabraClave => (\r\n                          <li key={palabraClave.id}><small className=\"\">{palabraClave.palabraClave}</small></li>\r\n                        ))\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                \r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n        {/* <ModalComentario\r\n          handleClose={handleClose}\r\n          show={show}\r\n          histUser={histUser}\r\n          videoID ={id}\r\n        ></ModalComentario>\r\n        <ModalComentarios\r\n          handleClose={handleClose2}\r\n          show={show2}\r\n          histUser={histUser}\r\n          commentaries = {commentaries}\r\n          videoID= {id}\r\n        ></ModalComentarios> */}\r\n      </Container>\r\n      );\r\n    }\r\n  \r\n  \r\n\r\nexport default WebinarDetail;\r\n"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","useNavigate","useModal","useState","location","useLocation","id","useParams","video","setVideo","serie","temporada","setDuracion","setUploadDate","state","loading","appState","setAppState","VideoLoading","VideoLoadingComponent","changeDuration","duration","tiempo","split","new_duration","trim","useEffect","getVideo","videoID","VideoServer","res","Date","upload_date","toDateString","dur","initialize","classes","isLoading","className","onClick","window","history","back","value","title_espanol","webinarCondition","component","variant","style","color","borderBottom","paddingBottom","align","sx","mt","containerRating","name","parseFloat","score","precision","readOnly","scope","autor","map","capitalizarNombre","tipe_of_video","cursor","description_esp","categorias","categoria","especialidad","subEspecialidad","palabraClave"],"sourceRoot":""}