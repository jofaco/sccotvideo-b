{"version":3,"file":"static/js/400.d89a57b3.chunk.js","mappings":"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","sources":["axios.js","components/categories/categoryModal.js","components/categories/listCategories.js","components/admin/Categorias.js","components/videos/videoLoading.js","hooks/useModal.js","services/category.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//toc贸 cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Funci贸n que valida si existe y es valido un access_token para manejo de sesi贸n\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as categoryServer from \"../../services/category\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalComentario = ({ handleClose, show, category_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!category_id) {\r\n        formData.append(\"categoria\", newData.categoria);\r\n        await categoryServer.RegisterCategory(formData);\r\n      } else {\r\n        formData.append(\"categoria\", newData.categoria);\r\n        await categoryServer.updateCategory(category_id, formData);        \r\n      }\r\n      const res = await categoryServer.ListCategorias();\r\n      const data = await res;\r\n      props.setCategories(data);\r\n    } catch (error) {\r\n      /* console.log(error);   */  \r\n      console.log(error);  \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" ><h2>{category_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"categoria\"\r\n            value={newData.categoria || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {category_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalComentario;","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as categoryServer from \"../../services/category\";\r\nimport CategoryModal from \"./categoryModal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\nimport * as videoServer from \"../../services/videoServer\";\r\n\r\n\r\nconst CategoryList = ({ categories }) => {\r\n  const history = useNavigate();\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [listCategories, setCategories] = useState(categories);\r\n  const initialFormData = {categoria:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const [videos,setVideos] = useState([])\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n \r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ categoria: item.categoria });\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({categoria:\"\"});\r\n    handleShow(true)\r\n  };\r\n  \r\n\r\n\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await categoryServer.ListCategorias();\r\n      const data = await res;\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getVideosByCategory = async ()=>{\r\n\r\n    try {\r\n      const res = await videoServer.ListVideos();\r\n      const data = await res;\r\n      setVideos(data.videos);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    if (user) {\r\n      getVideosByCategory()\r\n      getCategorias();\r\n      setId(null)\r\n      \r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  \r\n  if (user) {\r\n    \r\n    return (\r\n      <Container> \r\n        <div className={classes.paper}>\r\n              <h1 className=\"mt-4\">Categor铆as</h1>\r\n        </div>\r\n        <div  className=\"d-flex justify-content-between\">\r\n          <div>\r\n          <span className=\"border border-light p-2 rounded text-light\">{videos.length} Videos</span>\r\n          </div>\r\n          <div>\r\n\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar Categor铆a\r\n          </Button>\r\n            </div>\r\n        </div>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 15, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>Categor铆a</th>\r\n                  <th>Cantidad de videos</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listCategories.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listCategories.map((Categoria, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{Categoria.id}</td>\r\n                      <td>{Categoria.id}</td>\r\n                      <td>{Categoria.categoria}</td>\r\n                      <td>{videos.filter((video) => (\r\n      video.categorias.some((element) => Categoria.categoria === element.categoria))).length}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-primary p-1 btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(Categoria)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                       \r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <CategoryModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          category_id ={id}\r\n          currentItem={currentItem}\r\n          setCategories = {setCategories}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></CategoryModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import  { useEffect, useState } from \"react\";\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport ListCategories from \"../categories/listCategories\"\r\nimport * as categoryServer from \"../../services/category\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst  Principal = () =>{\r\n    const CategoryLoading = VideoLoadingComponent(ListCategories);\r\n    const { user } = useContext(Context);\r\n\r\n    const [appState, setAppState] = useState({\r\n      loading: true,\r\n      categories: null,\r\n    });   \r\n    \r\n    useEffect(() => {\r\n        categoryServer.ListCategorias().then((res) => {\r\n        const allCategories = res;\r\n        setAppState({ loading: false, categories: allCategories });\r\n      });\r\n    }, [setAppState]);\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <CategoryLoading isLoading={appState.loading} categories={appState.categories} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n}\r\n\r\nexport default Principal;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la funci贸n main de lo contrario retorna mensaje indicando que a煤n se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //funci贸n para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //funci贸n para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Funci贸n para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Funci贸n para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Funci贸n para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Funci贸n para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  console.log(\"listar videos de la serie\" + temporadaId);\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/${temporadaId}`);\r\n  console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Funci贸n para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Funci贸n para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Funci贸n para consultar con el backend un video con el id espec铆fico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Funci贸n para consultar con el backend un video con el id espec铆fico. Esta funci贸n se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Funci贸n Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Funci贸n para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Funci贸n para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","category_id","setFormData","currentItem","newData","props","handleSubmit","e","preventDefault","formData","FormData","append","categoria","categoryServer","res","setCategories","classes","Modal","onHide","contentClassName","cloud","centered","closeButton","id","Form","onSubmit","className","controlId","type","rows","name","value","onChange","target","variant","onClick","categories","history","useNavigate","useModal","handleShow","useState","setId","setCurrentItem","listCategories","videos","setVideos","user","useContext","Context","paper","marginTop","spacing","marginBottom","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getCategorias","getVideosByCategory","videoServer","useEffect","Container","length","Button","style","fontSize","backgroundColor","colSpan","map","Categoria","index","filter","video","categorias","some","element","CategoryLoading","VideoLoadingComponent","ListCategories","loading","appState","setAppState","isLoading","Component","justifyContent","role","initialValue","setShow","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","ListVideos","ListPeliculas","ListCasos","getVideo","videoID","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}