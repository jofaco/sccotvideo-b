{"version":3,"file":"static/js/346.1a5f0952.chunk.js","mappings":"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","sources":["components/videos/comentarioModal.js","services/ubicacion.js","services/fechaRepro.js","services/historialVideo.js","components/videos/iframeVideo.js","components/videos/listComentariosModal.js","hooks/useModal.js","services/commentary.js","services/serie.js","services/temporada.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n//dependencias\r\nimport * as commentaryServer from \"../../services/commentary\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 10,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  cloud: {\r\n    width: \"25rem\",\r\n    background: \"white\",\r\n    color:\"black\",\r\n    borderRadius: 10,\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"white\",\r\n    color:\"black\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 10,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalComentario = ({histUser, handleClose, show, commentary_id, ...props}) => {\r\n  const initialFormData = {commentary:\"\", historial_user:histUser, video:props.videoID};\r\n  const [commentary, setCommentary] = useState(initialFormData);\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setCommentary({...commentary, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!commentary_id) {\r\n        formData.append(\"commentary\", commentary.commentary);\r\n        formData.append(\"historial_user\", commentary.historial_user.id);\r\n        formData.append(\"video\", commentary.video);\r\n        await commentaryServer.RegisterCommentary(formData);\r\n      } else {\r\n        formData.append(\"commentary\", commentary.commentary);\r\n        await commentaryServer.updateCommentary(commentary_id, formData);        \r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const getCommentary = async (commentary_id) => {\r\n      try {\r\n        const res = await commentaryServer.getCommentary(commentary_id)\r\n        setCommentary({...commentary, commentary: res.commentary})\r\n        console.log(res);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    if (commentary_id) {\r\n      getCommentary(commentary_id)      \r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [commentary_id])\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {\"cloud \"+ classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" >Ingrese su Comentario</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control as=\"textarea\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"commentary\"\r\n            value={commentary.commentary || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n              Crear\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalComentario;","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/ubicaciones/\";\r\n\r\n/**\r\n * Función para registrar una ubicación.\r\n * @param {formData} newUbicacion\r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const RegisterUbicacion = async (newUbicacion) => {\r\n    const response = await axiosInstance.post(API_URL, newUbicacion);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las ubicaciones\r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const ListUbicacion = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las ubicaciones de un historial de usuario en específico.\r\n * @param {fk} histUser_id \r\n * @returns data enviada desde el backend.\r\n */\r\nexport const ListUbicacionHist = async (histUser_id) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_historial/`,histUser_id);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actulizar una ubicación.\r\n * @param {pk} id\r\n * @param {formData} updateUbicacion \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const updateUbicacion = async(id,updateUbicacion) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updateUbicacion);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/fechaReprods/\";\r\n\r\n/**\r\n * Función para registrar una nueva fecha de reproducción, este tiene relación con el historial de video e historial de usuario.\r\n * @param {formdata} newFecha \r\n * @returns data enviada desde el backend.\r\n */\r\nexport const RegisterFechaRepro = async (newFecha) => {\r\n    const response = await axiosInstance.post(API_URL, newFecha);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las fechas de reproduccion.\r\n * @returns data enviada desde el backend-\r\n */\r\nexport const ListFechaRepro = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar una fecha de reproducción en específico.\r\n * @param {pk} histID primary key\r\n * @returns data enviada desde el backend\r\n */\r\nexport const getFechaRepro = async (histID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${histID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar la fecha de reproducción correspondiente a un usuario y video.\r\n * @param {formdata} data \r\n * @returns data enviada desde el backend\r\n */\r\nexport const ListFechaReprox2 = async (data) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_user_video/`,data);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actualizar una fecha de reproducción.\r\n * @param {pk} id \r\n * @param {formdata} updateHU \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateHistorialVideo = async(id,updateHU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updateHU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/historialVideo/\";\r\n\r\n/**\r\n * Función para registrar un historial de video.\r\n * @param {dataform} newHistorial\r\n * @returns data enviada desde el backend.\r\n */\r\nexport const RegisterHistorialVideo = async (newHistorial) => {\r\n    const response = await axiosInstance.post(API_URL, newHistorial);\r\n    if (response.status === 200) {\r\n      console.log(response.data);\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todos los historiales.\r\n * @returns data enviada desde el backend.\r\n */\r\nexport const ListHistorial = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para obtener un historial en específico.\r\n * @param {pk} histID \r\n * @returns data enviada desde el backend.\r\n */\r\nexport const getHistorial = async (histID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${histID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para obtener el historial de un video en específico.\r\n * @param {fk} idVideo \r\n * @returns data enviada desde el backend.\r\n */\r\nexport const ListHistorialVideo = async (idVideo) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_video/`,idVideo);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actualizar un historial de video.\r\n * @param {pk} id \r\n * @param {formdata} updateHU \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateHistorialVideo = async(id,updateHU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updateHU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Player from \"@vimeo/player\";\r\n\r\n// Servicios\r\nimport * as UbicacionServer from \"../../services/ubicacion\";\r\nimport * as FechareproServer from \"../../services/fechaRepro\";\r\nimport * as HistorialUserServer from \"../../services/historialUser\";\r\nimport * as HistorialVideoServer from \"../../services/historialVideo\";\r\n\r\nimport \"../../styles/styles.css\";\r\n\r\nconst URL_API = \"https://ipwho.is/\";\r\n\r\nconst IframeVideo = ({ video, webinarCondition}) => {\r\n  const [ubicacionUsers, setUbicacionUsers] = useState(null);\r\n  const [histUser, setHistUser] = useState(null);\r\n  const [histVideo, setHistVideo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { id } = useParams();\r\n  const location = useLocation();\r\n  const iframeRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  const getUbication = async () => {\r\n    try {\r\n      const res = await fetch(URL_API);\r\n      const data = await res.json();\r\n      setUbicacionUsers(data);\r\n    } catch (err) {\r\n      console.error(\"Error al obtener ubicación:\", err);\r\n    }\r\n  };\r\n\r\n  const getHistUser = async () => {\r\n    try {\r\n      const userId = location?.state?.id || location?.state?.usuario;\r\n      if (!userId) return console.warn(\"No hay datos suficientes para historial\");\r\n      const res = await HistorialUserServer.getHistorial(userId);\r\n      setHistUser(res);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener historial:\", error);\r\n    }\r\n  };\r\n\r\n  const getHistorialVideo = async () => {\r\n    const res = await HistorialVideoServer.ListHistorialVideo({ video_id: id });\r\n    if (res.length > 0) {\r\n      setHistVideo(res);\r\n    } else {\r\n      const formData = new FormData();\r\n      formData.append(\"video\", id);\r\n      const nuevo = await HistorialVideoServer.RegisterHistorialVideo(formData);\r\n      setHistVideo(nuevo);\r\n    }\r\n  };\r\n\r\n  const convertTime = (tiempo) => {\r\n    let [h, m, s] = tiempo.split(\":\").map(Number);\r\n    return (h * 3600 + m * 60 + s);\r\n  };\r\n\r\n  const obtenerFecha = () => {\r\n    const f = new Date();\r\n    const day = `${f.getDate()}`.padStart(2, \"0\");\r\n    const month = `${f.getMonth() + 1}`.padStart(2, \"0\");\r\n    const year = f.getFullYear();\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const repetirCada10Segundos = (player) => {\r\n    intervalRef.current = setInterval(() => saveTime(player), 10000);\r\n  };\r\n\r\n  const saveTime = async (player) => {\r\n    try {\r\n      const duracion = await player.getDuration();\r\n      const tiempo = await player.getCurrentTime();\r\n\r\n      if (tiempo !== 0 && histUser?.id) {\r\n        const validacion = parseInt((duracion * 90) / 100);\r\n        let cont1 = histUser.counter_repro;\r\n        let cont2 = histVideo[0].reproducciones;\r\n\r\n        if (tiempo >= validacion) {\r\n          cont1 += 1;\r\n          cont2 += 1;\r\n          await HistorialUserServer.updateHistorialUser(histUser.id, {\r\n            tiempo: 0,\r\n            visto: true,\r\n            counter_repro: cont1,\r\n          });\r\n          await HistorialVideoServer.updateHistorialVideo(histVideo[0].id, {\r\n            reproducciones: cont2,\r\n          });\r\n        } else {\r\n          await HistorialUserServer.updateHistorialUser(histUser.id, {\r\n            tiempo: parseInt(tiempo),\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al guardar tiempo:\", error);\r\n    }\r\n  };\r\n  const getVimeoVideo = useCallback(() => {\r\n    if (!iframeRef.current || !video.code_esp || (!histUser && !webinarCondition)) return;\r\n  \r\n    const player = new Player(iframeRef.current, {\r\n      id: video.code_esp,\r\n      playsinline: true,\r\n    });\r\n  \r\n    if (!webinarCondition && histUser?.tiempo !== null) {\r\n      const segundos = convertTime(histUser.tiempo);\r\n      player.setCurrentTime(segundos);\r\n    }\r\n  \r\n    if (!webinarCondition) {\r\n      player.on(\"play\", async () => {\r\n        try {\r\n          const ubicaciones = await UbicacionServer.ListUbicacionHist({\r\n            histUser_id: histUser.id,\r\n          });\r\n          const fechaActual = obtenerFecha();\r\n          const dataFecha = new FormData();\r\n          dataFecha.append(\"historial_user\", histUser.id);\r\n          dataFecha.append(\"historial_Video\", histVideo[0].id);\r\n          const fechasRepro = await FechareproServer.ListFechaReprox2(dataFecha);\r\n  \r\n          if (ubicacionUsers) {\r\n            const ubicForm = new FormData();\r\n            ubicForm.append(\"direccionIP\", ubicacionUsers.ip);\r\n            ubicForm.append(\"ciudad\", ubicacionUsers.city);\r\n            ubicForm.append(\"pais\", ubicacionUsers.country);\r\n            ubicForm.append(\"historial_user\", histUser.id);\r\n            ubicForm.append(\"historial_Video\", histVideo[0].id);\r\n  \r\n            const yaExisteUbicacion = ubicaciones.some(\r\n              (u) =>\r\n                u.direccionIP === ubicacionUsers.ip &&\r\n                u.ciudad === ubicacionUsers.city &&\r\n                u.pais === ubicacionUsers.country\r\n            );\r\n  \r\n            if (!yaExisteUbicacion) {\r\n              await UbicacionServer.RegisterUbicacion(ubicForm);\r\n            }\r\n  \r\n            const yaExisteFecha = fechasRepro.some((f) => f.fecha === fechaActual);\r\n  \r\n            if (!yaExisteFecha) {\r\n              await FechareproServer.RegisterFechaRepro({\r\n                historial_user: histUser.id,\r\n                historial_Video: histVideo[0].id,\r\n              });\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error en evento play:\", err);\r\n        }\r\n      });\r\n  \r\n      if (document.URL.includes(\"/seeVideo/\")) {\r\n        repetirCada10Segundos(player);\r\n      }\r\n    }\r\n    setLoading(false);\r\n\r\n  }, [video.code_esp, histUser, histVideo, ubicacionUsers, webinarCondition]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (!webinarCondition && video.code_esp && histUser && histVideo && ubicacionUsers) {\r\n      getVimeoVideo();\r\n    } else if (webinarCondition && video.code_esp) {\r\n      // En caso de webinar, si igual quieres reproducir el video, llama sin datos de usuario\r\n      getVimeoVideo();\r\n    }\r\n  }, [video.code_esp, histUser, histVideo, ubicacionUsers, getVimeoVideo, webinarCondition]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (video.code_esp && histVideo && (!webinarCondition && histUser && ubicacionUsers)) {\r\n      getVimeoVideo();\r\n    } else if (video.code_esp && webinarCondition) {\r\n      getVimeoVideo(); // el callback se encarga de ignorar si es webinar\r\n    }\r\n    \r\n  }, [video.code_esp, histUser, histVideo, ubicacionUsers, getVimeoVideo, webinarCondition]);\r\n  \r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(intervalRef.current);\r\n\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div className=\"mt-5 d-flex justify-content-center align-items-center\">\r\n          <div className=\"spinner-grow text-light\" role=\"status\">\r\n            <span className=\"sr-only\"></span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div id=\"iframe1\" ref={iframeRef}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IframeVideo;\r\n","import {useEffect, useState}from \"react\";\r\n//dependencias\r\n//import * as commentaryServer from \"../../services/commentary\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport ModalComentario from \"./comentarioModal\";\r\n\r\n//components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Button } from \"@mui/material\";\r\nimport Stack from '@mui/material/Stack';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title:{\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n  nameUser:{\r\n    color:\"Gray\",\r\n    fontSize:\"15px\"\r\n  },\r\n  containerModal:{\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerComment: {\r\n    maxWidth: 720,\r\n    margin: \"auto\",\r\n    marginBottom: 20,\r\n  },\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ModalComentarios = ({ handleClose, show, histUser, commentaries,  ...props}) => {\r\n  const [showEdit, handleShowEdit, handleCloseEdit] = useModal(false);\r\n  const classes = useStyles();\r\n  \r\n  if (commentaries) {\r\n    return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.containerModal}\r\n      centered\r\n      scrollable\r\n      \r\n    >\r\n      <Modal.Header closeButton  >\r\n        <Modal.Title id=\"titleModal\" className={classes.title} >Comentarios de usuarios</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" className={classes.containerModal}>\r\n      {commentaries && commentaries.length > 0 ? (\r\n  commentaries.map((element, index) => (\r\n    <Container key={index} className={classes.containerComment}>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <p>{new Date(element.created_date).toLocaleDateString()}</p>\r\n          <h5 className={classes.nameUser}>{element.historial_user.usuario.name}</h5>\r\n          <h6>{element.commentary}</h6>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          {element.historial_user.usuario.id === histUser?.usuario?.id && (\r\n            <Stack alignItems=\"center\">\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"info\"\r\n                onClick={handleShowEdit}>\r\n                EDITAR \r\n              </Button>\r\n              <ModalComentario\r\n                handleClose={handleCloseEdit}\r\n                show={showEdit}\r\n                commentary_id={element.id}\r\n              />\r\n            </Stack>\r\n          )}\r\n        </div>\r\n        <hr/>\r\n      </div>\r\n    </Container>\r\n  ))\r\n) : (\r\n  <p className=\"text-center text-muted\">No hay comentarios aún.</p>\r\n)}\r\n\r\n      </Modal.Body>\r\n    </Modal>\r\n    )\r\n  }\r\n  \r\n};\r\n\r\nexport default ModalComentarios;","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/commentaries/\";\r\n\r\n/**\r\n * Función para agregar un nuevo comentario a un video.\r\n * @param {formdata} newCommentary \r\n * @returns data enviada desde el backend\r\n */\r\nexport const RegisterCommentary = async (newCommentary) => {\r\n    const response = await axiosInstance.post(API_URL, newCommentary);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para entontrar todos los comentarios realizados.\r\n * @returns data enviada desde el backend-\r\n */\r\nexport const ListCommentaries = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\nexport const ListCommentaryVideo = async (idVideo) => {\r\n    const response = await axiosInstance.post(`${API_URL}list_by_video/`,idVideo);\r\n    //console.log(response);\r\n    \r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n    else { \r\n        console.log(\"error\");\r\n        return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para obtener un comentario en específico.\r\n * @param {pk} commentaryID \r\n * @returns data enviada desde el backend\r\n */\r\nexport const getCommentary = async (commentaryID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${commentaryID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n\r\n/**\r\n * Función para actualizar un comentario .\r\n * @param {pk} id \r\n * @param {formdata} updCommentary \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateCommentary = async(id,updCommentary) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updCommentary);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Función para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/temporadas/\";\r\n\r\n/**\r\n * Función para consultar todas las temporadas registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListTemporadas = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterTemporada = async (newTemporada) => {\r\n  const response = await axiosInstance.post(API_URL, newTemporada);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getTemporada = async (temporadaID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${temporadaID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateTemporada = async(id,updTemporada) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updTemporada);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","cloud","width","background","color","containerForm","height","root","display","histUser","handleClose","show","commentary_id","initialFormData","commentary","historial_user","video","videoID","useState","setCommentary","handleSubmit","e","preventDefault","formData","FormData","append","id","commentaryServer","console","log","useEffect","getCommentary","res","classes","onHide","contentClassName","centered","closeButton","onSubmit","className","controlId","as","rows","name","value","onChange","target","variant","onClick","type","API_URL","RegisterUbicacion","newUbicacion","axiosInstance","response","status","data","ListUbicacionHist","histUser_id","RegisterFechaRepro","newFecha","ListFechaReprox2","updateHistorialVideo","updateHU","webinarCondition","ubicacionUsers","histVideo","loading","setLoading","iframeRef","useParams","useLocation","useRef","intervalRef","obtenerFecha","f","Date","day","getDate","padStart","month","getMonth","year","getFullYear","saveTime","player","getDuration","duracion","getCurrentTime","tiempo","validacion","parseInt","cont1","counter_repro","cont2","reproducciones","HistorialUserServer","visto","HistorialVideoServer","error","getVimeoVideo","useCallback","current","code_esp","Player","playsinline","segundos","split","map","Number","convertTime","setCurrentTime","on","UbicacionServer","ubicaciones","fechaActual","dataFecha","FechareproServer","fechasRepro","ubicForm","ip","city","country","some","u","direccionIP","ciudad","pais","fecha","historial_Video","document","URL","includes","setInterval","repetirCada10Segundos","clearInterval","role","ref","title","textAlign","nameUser","fontSize","containerComment","maxWidth","margin","marginBottom","commentaries","useModal","showEdit","handleShowEdit","handleCloseEdit","scrollable","length","element","index","created_date","toLocaleDateString","usuario","alignItems","initialValue","setShow","handleShow","RegisterCommentary","newCommentary","ListCommentaryVideo","idVideo","commentaryID","updateCommentary","updCommentary","ListSeries","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie","ListTemporadas","RegisterTemporada","newTemporada","getTemporada","temporadaID","updateTemporada","updTemporada"],"sourceRoot":""}