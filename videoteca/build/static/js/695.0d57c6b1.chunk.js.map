{"version":3,"file":"static/js/695.0d57c6b1.chunk.js","mappings":"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","sources":["axios.js","components/especialidades/listPalabrasClaves.js","components/admin/PalabrasClaves.js","components/especialidades/palabraclaveModal.js","components/videos/videoLoading.js","hooks/useModal.js","services/palabraClave.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//tocó cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Función que valida si existe y es valido un access_token para manejo de sesión\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\nimport PalabraClaveModal from \"./palabraclaveModal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n\r\n\r\nconst PalabraClaveList = ({palabrasClaves}) => {\r\n  const history = useNavigate();\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [listPalabrasClaves, setPalabrasClaves] = useState(palabrasClaves);\r\n  const initialFormData = {palabraClave:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ palabraClave: item.palabraClave });\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({palabraClave:\"\"});\r\n    handleShow(true)\r\n  };\r\n\r\n\r\n  const getPalabrasClaves = async () => {\r\n    try {\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.is_superuser) {\r\n        getPalabrasClaves();\r\n      setId(null)\r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  \r\n  if (user) {\r\n    \r\n    return (\r\n      <Container> \r\n        \r\n        <div className={classes.paper}>\r\n            <h1 className=\"mt-4 text-center\">Palabras Claves</h1>\r\n        </div>\r\n        <Stack  alignItems=\"center\">\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar PalabraClave\r\n          </Button>\r\n        </Stack>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 11, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>PalabraClave</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listPalabrasClaves.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listPalabrasClaves.map((PalabraClave, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{PalabraClave.id}</td>\r\n                      <td>{PalabraClave.id}</td>\r\n                      <td>{PalabraClave.palabraClave}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-primary p-1 btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(PalabraClave)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <PalabraClaveModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          palabraclave_id ={id}\r\n          currentItem={currentItem}\r\n          setPalabrasClaves = {setPalabrasClaves}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></PalabraClaveModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default PalabraClaveList;\r\n","import { useEffect, useState } from \"react\";\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport ListPalabrasClaves from \"../especialidades/listPalabrasClaves\"\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst  Principal = () =>{\r\n    const PalabraClaveLoading = VideoLoadingComponent(ListPalabrasClaves);\r\n    const { user } = useContext(Context);\r\n\r\n    const [appState, setAppState] = useState({\r\n      loading: true,\r\n      palabrasClaves: null,\r\n    });   \r\n    \r\n    useEffect(() => {\r\n        palabraClaveServer.ListPalabrasClaves().then((res) => {\r\n        const allPalabrasClaves = res;\r\n        setAppState({ loading: false, palabrasClaves: allPalabrasClaves });\r\n      });\r\n    }, [setAppState]);\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <PalabraClaveLoading isLoading={appState.loading} palabrasClaves={appState.palabrasClaves} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n}\r\n\r\nexport default Principal;\r\n","import React from \"react\";\r\n//dependencias\r\nimport * as palabraClaveServer from \"../../services/palabraClave\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalPalabraClave = ({ handleClose, show, palabraclave_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!palabraclave_id) {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.RegisterPalabraClave(formData);\r\n      } else {\r\n        formData.append(\"palabraClave\", newData.palabraClave);\r\n        await palabraClaveServer.updatePalabraClave(palabraclave_id, formData);        \r\n      }\r\n      const res = await palabraClaveServer.ListPalabrasClaves();\r\n      const data = await res;\r\n      props.setPalabrasClaves(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" className=\"text-dark mx-2 mt-2\" ><h4>{palabraclave_id? 'Editar Registro' : 'Registrar'} Palabra clave</h4></Modal.Title>\r\n\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"palabraClave\"\r\n            value={newData.palabraClave || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {palabraclave_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalPalabraClave;","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la función main de lo contrario retorna mensaje indicando que aún se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/palabrasclaves/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListPalabrasClaves = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterPalabraClave = async (newPalabraClave) => {\r\n  const response = await axiosInstance.post(API_URL, newPalabraClave);\r\n  console.log(\"registrar palabras claves\");\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getPalabraClave = async (PalabraClaveID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${PalabraClaveID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updatePalabraClave = async(id,updPalabraClave) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updPalabraClave);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n  const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","palabrasClaves","history","useNavigate","useModal","show","handleShow","handleClose","useState","id","setId","currentItem","setCurrentItem","listPalabrasClaves","setPalabrasClaves","palabraClave","newData","setFormData","user","useContext","Context","useStyles","makeStyles","theme","paper","marginTop","spacing","marginBottom","display","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getPalabrasClaves","palabraClaveServer","res","useEffect","is_superuser","classes","Container","className","Stack","Button","variant","type","onClick","name","style","fontSize","backgroundColor","length","colSpan","map","PalabraClave","index","palabraclave_id","PalabraClaveLoading","VideoLoadingComponent","ListPalabrasClaves","loading","appState","setAppState","isLoading","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","props","handleSubmit","e","preventDefault","formData","FormData","append","onHide","contentClassName","cloud","centered","closeButton","onSubmit","controlId","rows","value","onChange","target","Component","justifyContent","role","initialValue","setShow","RegisterPalabraClave","newPalabraClave","updatePalabraClave","updPalabraClave","_excluded","joinChildren","children","separator","childrenArray","React","filter","Boolean","reduce","output","child","push","key","StackRoot","styled","slot","overridesResolver","styles","ownerState","_extends","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","inProps","ref","themeProps","useThemeProps","extendSxProp","component","divider","other","_objectWithoutPropertiesLoose","_jsx","as","finalSx","inSx","sx","_props$theme$unstable","_props$theme","result","systemProps","otherProps","unstable_sxConfig","defaultSxConfig","prop","splitProps","Array","isArray","isPlainObject"],"sourceRoot":""}