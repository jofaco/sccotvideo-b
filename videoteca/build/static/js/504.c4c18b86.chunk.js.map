{"version":3,"file":"static/js/504.c4c18b86.chunk.js","mappings":"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","sources":["axios.js","components/users/modalPreferencia.js","components/users/modalImagen.js","components/users/profilePref.js","components/users/profile.js","hooks/useModal.js","services/auth.js","services/category.js","services/preferenciasUser.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Lista de endpoints que no requieren autenticación\r\n * Puedes ajustar esto según los endpoints de tu backend que son públicos.\r\n */\r\nconst PUBLIC_ENDPOINTS = [\r\n  \"free/\",\r\n  \"free\",         // Para GET general de videos\r\n           // Para GET general de series\r\n];\r\n\r\n/**\r\n * Instancia de Axios para hacer peticiones al backend\r\n */\r\nconst token = localStorage.getItem(\"access_token\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",  // Cambiado según tu observación\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * Interceptor de request para agregar el token solo si la ruta NO es pública\r\n */\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // Detectar si la URL es pública\r\n  const isPublic = PUBLIC_ENDPOINTS.some(endpoint => config.url.includes(endpoint));\r\n\r\n  if (token && !isPublic) {\r\n    config.headers[\"Authorization\"] = \"JWT \" + token;\r\n  } else {\r\n    delete config.headers[\"Authorization\"]; // Asegura que no se mande nada si no es necesario\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n/**\r\n * Interceptor de respuesta para manejar expiración del token\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n        \"Looks like CORS might be the problem.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/userlogin1/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken) {\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n\r\n        const now = Math.ceil(Date.now() / 1000);\r\n\r\n        if (tokenParts.exp > now) {\r\n          try {\r\n            const response = await axiosInstance.post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            });\r\n\r\n            localStorage.setItem(\"access_token\", response.data.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.data.refresh_token);\r\n\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n            originalRequest.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n\r\n            return axiosInstance(originalRequest);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          localStorage.clear();\r\n          window.location.href = \"/userlogin2/\";\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n        localStorage.clear();\r\n        window.location.href = \"/userlogin3/\";\r\n      }\r\n    }\r\n\r\n    if (error.response.status === 401) {\r\n      localStorage.clear();\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//dependencias\r\nimport * as PreferenciasUserServer from \"../../services/preferenciasUser\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n//styles\r\nimport \"../../styles/modalsProfile.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/**\r\n * Componente modal Preferencias con formulario para actualizar las preferencias(gustos) de un usuario.\r\n * @param {Object} categorias\r\n * @param {Function} handleClose\r\n * @returns Componente modal Preferencias\r\n */\r\nconst ModalPreferencias = ({categorias, handleClose, show, ...props}) => {\r\n  const history = useNavigate();\r\n  const [preferencias, setPreferencias] = useState({\r\n    categoria: null,\r\n  });\r\n  \r\n   /**\r\n   * Verifica cambios en el formulario y agrega los valores a preferencias\r\n   * @param {*} e \r\n   */\r\n  const handleSelectCategory = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    //here\r\n    let value = Array.from(target.selectedOptions, (option) => option.value);\r\n    console.log(value);\r\n    setPreferencias({ ...preferencias, [name]: value });\r\n  };\r\n\r\n  /**\r\n   * Evento de submit del formulario para agregar las preferencias de usuario.\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    console.log(props.user.id);\r\n    try {\r\n        formData.append(\"usuario\", props.user.id);\r\n        formData.append(\"categoria\", preferencias.categoria);\r\n        const res = await PreferenciasUserServer.RegisterPreferenciaUser(formData);\r\n        \r\n        Swal.fire({\r\n          title:res.message,\r\n          icon:'success'\r\n        }).then((res)=>{\r\n\r\n          history(\"/Perfil\");\r\n          window.location.reload();\r\n        })\r\n    } catch (error) {\r\n        console.log(error);      \r\n      }\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" >Ingrese una preferencia</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Categorías</Form.Label>\r\n          <Form.Select\r\n            name=\"categoria\"\r\n            autoFocus\r\n            onChange={handleSelectCategory}\r\n          >\r\n            <option>Seleccione una Categoría</option>\r\n            {categorias && categorias.map((categ, index) => (\r\n              <option key={index} value={categ.id}>\r\n                {categ.categoria}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n      </Form>\r\n      </Modal.Body>\r\n      \r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default ModalPreferencias;","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//dependencias\r\nimport * as UserServer from \"../../services/auth\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n//styles\r\nimport \"../../styles/modalsProfile.css\";\r\n\r\n/**\r\n * Componente modal Imagen con formulario para actualizar la imagen de perfil.\r\n * @param {Function} handleClose\r\n * @param {state} show\r\n * @returns Componente modal Imagen\r\n */\r\nconst ModalPreferencias = ({handleClose, show, ...props}) => {\r\n  const history = useNavigate();\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  \r\n  /**\r\n   * Verifica cambios en el formulario y agrega los valores a selectedFile\r\n   * @param {*} e \r\n   */\r\n  const handleInputChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  /**\r\n   * Evento de submit del formulario para actualizar la imagen de perfil.\r\n   * @param {*} e \r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    try {\r\n        formData.append(\"image\", selectedFile);\r\n        const res = await UserServer.updateImage(props.user.id,formData);\r\n        console.log(res.message);\r\n        history(\"/Perfil\");\r\n        window.location.reload();\r\n    } catch (error) {\r\n        console.log(error);      \r\n      }\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" >Cambiar Imagen de Perfil</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n          <Form.Label>Imagen de Perfil</Form.Label>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"min_image\"\r\n            name=\"min_image\"\r\n            onChange={handleInputChange}\r\n            type=\"file\"\r\n            placeholder=\"Imagen para Email\"                \r\n          />\r\n        </Form.Group>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n      </Form>\r\n      </Modal.Body>\r\n      \r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default ModalPreferencias;","import React from \"react\";\r\n\r\n//MaterialUI\r\nimport Box from \"@mui/material/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { deletePreferencia } from \"../../services/preferenciasUser\";\r\n//styles\r\nimport \"../../styles/modalsProfile.css\";\r\n\r\n/**\r\n * Componente para mostrar las preferencias del usuario y el boton de agregar mas preferencias.\r\n * @param {object} prefUsers\r\n * @param {Function} handleShow\r\n * @returns Componente con preferencias y boton de agregar.\r\n */\r\nconst Preferencias = ({ prefUsers, handleShow, ...props }) => {\r\n  const handleEliminarPreferencia = async (id) => {\r\n    console.log(id);\r\n    console.log(prefUsers);\r\n    const response = await deletePreferencia(id)\r\n    console.log(response);\r\n     /* return await deletePreferencia(id); */\r\n\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n   \r\n    title1: {\r\n      textAlign: \"center\",\r\n    },\r\n    \"@media only screen and (max-width: 1000px)\": {\r\n      imagenPerfil: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"container container1\">\r\n      <h3 className={classes.title1}>Preferencias</h3>\r\n      \r\n      {!prefUsers ? (\r\n        <Box display=\"flex\" mt={5} justifyContent=\"space-between\">\r\n          <div className=\"d-grid  col-8  mx-auto\">\r\n            <button\r\n              className=\"btn btn-secondary btn-lg\"\r\n              type=\"submit\"\r\n              onClick={handleShow}\r\n            >\r\n              Ingresar Preferencia\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <div className=\"container \">\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n              className=\"btn-group btn-group-lg\"\r\n            >\r\n              <div className=\"d-flex flex-wrap\">\r\n              {prefUsers &&\r\n                prefUsers.map((categ, index) => (\r\n                  <span\r\n                    sx={{ color: \"#fff\" }}\r\n                    key={index}\r\n                    className={\"bg-white px-3 py-2 rounded m-2 border-0 text-dark d-flex justify-content-between align-items-center \" + classes.botonList}\r\n                    >\r\n                      \r\n                    <h6 className=\"pt-2 pe-4\">{categ.categoria}</h6> <button className=\"btn btn-danger\" onClick={ ()=>{handleEliminarPreferencia(categ.id)}}>✕</button>\r\n                  </span>\r\n                ))}\r\n                </div>\r\n            </Box>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"container\">\r\n            <div className=\"d-grid  col-8  mx-auto\">\r\n              <button\r\n                className=\"btn btn-secondary btn-lg\"\r\n                type=\"submit\"\r\n                onClick={handleShow}\r\n              >\r\n                Ingresar Preferencia\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preferencias;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//dependencias\r\nimport Context from \"../context/UserContext\";\r\nimport { getUser } from \"../../services/auth\";\r\nimport imgDeault from \"../../imgs/logosccot.png\";\r\nimport * as PreferenciasUserServer from \"../../services/preferenciasUser\";\r\nimport * as CategoriaServer from \"../../services/category\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\n//components\r\nimport ModalPreferencias from \"./modalPreferencia\";\r\nimport ModalImagen from \"./modalImagen\";\r\nimport Preferencias from \"./profilePref\";\r\n\r\n//MaterialUI\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Image } from \"react-bootstrap\";\r\n//styles\r\nimport \"../../styles/modalsProfile.css\";\r\n\r\n/**\r\n * Componente para el perfil de usuario\r\n * @returns Componentes necesario para la vista del perfil\r\n */\r\nconst UserProfile = () => {\r\n  const history = useNavigate();\r\n\r\n  const { user } = useContext(Context);\r\n  const [dataUser, setDataUser] = useState(null);\r\n  const [prefUsers, setPrefUsers] = useState(null);\r\n  const [categorias, setCategorias] = useState();\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [showImg, handleShowImg, handleCloseImg] = useModal(false);\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    imagenPerfil: {\r\n      display: \"flex\",\r\n      maxWidth: 200,\r\n      marginBottom: theme.spacing(2),\r\n      margin:\"auto\",\r\n      borderRadius: 1000,\r\n    },\r\n    contenedorImg: {\r\n      flexWrap: \"wrap\",\r\n    },\r\n    botonList: {\r\n      margin: theme.spacing(3, 1),\r\n      color: \"black\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n    },\r\n    \"@media only screen and (max-width: 1000px)\": {\r\n      imagenPerfil: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  /**\r\n   * Función para consultar la información del usuario\r\n   * @param {id} userId\r\n   */\r\n  const GetUser = async (userId) => {\r\n    const res = await getUser(userId);\r\n    console.log(res);\r\n    \r\n    setDataUser(res);\r\n  };\r\n\r\n  /**\r\n   * Función para consultar las preferencias del usuario.\r\n   */\r\n  const getPreferenciasUser = async () => {\r\n    try {\r\n      const res = await PreferenciasUserServer.ListPreferenciaUser({\r\n        user_id: user.id,\r\n      });\r\n      setPrefUsers(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Función para consultar las categorias de los videos.\r\n   */\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await CategoriaServer.ListCategorias();\r\n      const data = await res;\r\n      setCategorias(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Hook para ejectutar las funciones GetUser, getPreferenciasUser y getCategorias\r\n   */\r\n  useEffect(() => {\r\n    if (user) {\r\n      GetUser(user.id);\r\n      getPreferenciasUser();\r\n      getCategorias();\r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  if (user) {\r\n    return (\r\n    <Container>\r\n      {dataUser && dataUser.image ? (\r\n        <div>\r\n          <h1 id=\"tituloName\" >\r\n            <center>{dataUser.name_odoo} </center>\r\n          </h1>\r\n          <div className={\"col-md-5 \" + classes.contenedorImg}>\r\n            <Image\r\n              src={\"https://sccotview.com\" + dataUser.image}\r\n              className={classes.imagenPerfil}\r\n            ></Image>\r\n            <div className=\"d-grid  col-8  mx-auto\">\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                id=\"submitButton\"\r\n                type=\"submit\"\r\n                onClick={handleShowImg}\r\n              >\r\n                Actualizar\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-7\">\r\n          \r\n            <Preferencias prefUsers={prefUsers} handleShow={handleShow} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          \r\n          <h3 id=\"tituloName\" className=\"mt-4\">\r\n            <center>{user.name_odoo}</center>\r\n          </h3>\r\n          <div className={\"col-md-5 \" + classes.contenedorImg}>\r\n            <Image src='https://sccotview.com/media/perfil/default.jpg' className={classes.imagenPerfil}></Image>\r\n            <div className=\"d-grid  col-8  mx-auto\">\r\n              <button\r\n                className=\"btn btn-primary \"\r\n                type=\"submit\"\r\n                onClick={handleShowImg}\r\n              >\r\n                Actualizar\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-7\">\r\n            \r\n            <Preferencias prefUsers={prefUsers} handleShow={handleShow} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ModalPreferencias\r\n        categorias={categorias}\r\n        handleClose={handleClose}\r\n        show={show}\r\n        user={dataUser}\r\n      ></ModalPreferencias>\r\n      <ModalImagen\r\n        handleClose={handleCloseImg}\r\n        show={showImg}\r\n        user={dataUser}\r\n      ></ModalImagen>\r\n    </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Función para realizar login\r\n * @param {formdata} credentials \r\n * @returns data enviada desde el backend\r\n */\r\nexport const Login = async (credentials) => {\r\n  \r\n  const data = await axios.post(API_URL + \"login/\", credentials);\r\n \r\n  console.log(credentials);\r\n  return data;\r\n};\r\n/**\r\n * Función para consultar un usuario en específico.\r\n * @param {pk} userID\r\n * @returns data enviada desde el backend\r\n */\r\nexport const getUser = async (userID) => {\r\n  const response = await axiosInstance.get(`${API_URL}users/${userID}`);\r\n  if (response.status === 200) {\r\n    console.log(response)\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar la imagen de perfil de un usuario.\r\n * @param {id} userID \r\n * @param {img} updateImg \r\n * @returns data enviada desde el backend\r\n */\r\nexport const updateImage = async (userID,updateImg) => {\r\n  const response = await axiosInstance.patch(`${API_URL}users/${userID}/`,updateImg);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(API_URL);\r\n    return response.data; // no es necesario el await aquí\r\n  } catch (error) {\r\n    console.error(\"Error en ListCategorias:\", error);\r\n    throw error; // para que el componente lo capture\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/gustos_by_users/\";\r\n\r\n/**\r\n * Función para agregar preferencias(gustos) de un usuario.\r\n * @param {formData} newPreferencia \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const RegisterPreferenciaUser = async (newPreferencia) => {\r\n    const response = await axiosInstance.post(API_URL, newPreferencia);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n/**\r\n * Función para consultar todas las preferencias de usuario.\r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const ListPreferencia = async () => {\r\n    const response = await axiosInstance.get(`${API_URL}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia en específico.\r\n   * @param {pk} histID \r\n   * @returns La data enviada desde el backend.\r\n   */\r\nexport const getPreferencia = async (ID) => {\r\n    const response = await axiosInstance.get(`${API_URL}${ID}`);\r\n    if (response.status === 200) {\r\n      return await response.data;\r\n    }\r\n  };\r\n  /**\r\n   * función para obtener una preferencia de un usuario en específico.\r\n   * @param {fk} idUser \r\n   * @returns La data enviada desde el backend.\r\n   */\r\n  export const ListPreferenciaUser = async (idUser) => {\r\n    try {\r\n      const response = await axiosInstance.post(`${API_URL}list_by_user/`, { id: idUser });\r\n  \r\n      if (response.status === 200) {\r\n        return response.data;\r\n      } else {\r\n        console.warn(\"Respuesta inesperada:\", response.status);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error en ListPreferenciaUser:\", error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n\r\n/**\r\n * función para obtener actualizar la preferencia de un usuario.\r\n * @param {*} id \r\n * @param {*} updatePU \r\n * @returns La data enviada desde el backend.\r\n */\r\nexport const updatePreferenciaUser = async(id,updatePU) =>{\r\n    const response = await axiosInstance.patch(API_URL+id+\"/\",updatePU);\r\n    if (response.status === 200) {\r\n        return response.data;\r\n    }\r\n}\r\nexport const deletePreferencia = async (id) => {\r\n  const response = await axiosInstance.delete(`${API_URL}${id}`);\r\n  if (response.status === 200) {\r\n    Swal.fire({\r\n      title: response.data.message,\r\n      icon: \"success\"\r\n    }).then(res=>{\r\n      window.location.reload();\r\n    }).catch(()=>{\r\n      Swal.fire({\r\n        title: \"Lo sentimos no fue posible eliminar la preferencia, intenta nuevamente mas tarde\",\r\n        icon: \"warning\"\r\n      })\r\n    })\r\n    \r\n    return await response.data;\r\n  }\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;"],"names":["API_URL","PUBLIC_ENDPOINTS","axiosInstance","localStorage","getItem","axios","baseURL","timeout","headers","accept","interceptors","request","use","config","token","isPublic","some","endpoint","url","includes","response","error","originalRequest","console","warn","Promise","reject","status","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","exp","post","refresh","setItem","access_token","refresh_token","defaults","log","clear","categorias","handleClose","show","props","history","useNavigate","useState","categoria","preferencias","setPreferencias","handleSubmit","e","preventDefault","formData","FormData","user","id","append","PreferenciasUserServer","res","Swal","title","message","icon","then","reload","Modal","onHide","centered","closeButton","Form","onSubmit","className","controlId","name","autoFocus","onChange","target","value","Array","from","selectedOptions","option","map","categ","index","Button","variant","onClick","type","selectedFile","setSelectedFile","UserServer","files","placeholder","prefUsers","handleShow","handleEliminarPreferencia","deletePreferencia","classes","makeStyles","theme","title1","textAlign","imagenPerfil","width","useStyles","Box","sx","display","justifyContent","flexWrap","color","botonList","mt","useContext","Context","dataUser","setDataUser","setPrefUsers","setCategorias","useModal","showImg","handleShowImg","handleCloseImg","maxWidth","marginBottom","spacing","margin","borderRadius","contenedorImg","GetUser","userId","getUser","getPreferenciasUser","user_id","getCategorias","CategoriaServer","useEffect","Container","image","name_odoo","Image","src","style","fontSize","initialValue","setShow","Login","credentials","userID","updateImage","updateImg","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","RegisterPreferenciaUser","newPreferencia","ListPreferenciaUser","idUser","catch","_excluded","options","defaultTheme","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","finalSx","inSx","_props$theme$unstable","_props$theme","result","systemProps","otherProps","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","splitProps","isArray","isPlainObject","PropTypes","bsPrefix","fluid","rounded","roundedCircle","thumbnail","useBootstrapPrefix","classNames","displayName","defaultProps"],"sourceRoot":""}