{"version":3,"file":"static/js/400.5983bd3c.chunk.js","mappings":"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","sources":["axios.js","components/categories/categoryModal.js","components/categories/listCategories.js","components/admin/Categorias.js","components/videos/videoLoading.js","hooks/useModal.js","services/category.js","services/videoServer.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Lista de endpoints que no requieren autenticación\r\n * Puedes ajustar esto según los endpoints de tu backend que son públicos.\r\n */\r\nconst PUBLIC_ENDPOINTS = [\r\n  \"free/\",\r\n  \"free\",         // Para GET general de videos\r\n           // Para GET general de series\r\n];\r\n\r\n/**\r\n * Instancia de Axios para hacer peticiones al backend\r\n */\r\nconst token = localStorage.getItem(\"access_token\");\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\",  // Cambiado según tu observación\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * Interceptor de request para agregar el token solo si la ruta NO es pública\r\n */\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n\r\n  // Detectar si la URL es pública\r\n  const isPublic = PUBLIC_ENDPOINTS.some(endpoint => config.url.includes(endpoint));\r\n\r\n  if (token && !isPublic) {\r\n    config.headers[\"Authorization\"] = \"JWT \" + token;\r\n  } else {\r\n    delete config.headers[\"Authorization\"]; // Asegura que no se mande nada si no es necesario\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n/**\r\n * Interceptor de respuesta para manejar expiración del token\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n        \"Looks like CORS might be the problem.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/userlogin1/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n      if (refreshToken) {\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n\r\n        const now = Math.ceil(Date.now() / 1000);\r\n\r\n        if (tokenParts.exp > now) {\r\n          try {\r\n            const response = await axiosInstance.post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            });\r\n\r\n            localStorage.setItem(\"access_token\", response.data.access_token);\r\n            localStorage.setItem(\"refresh_token\", response.data.refresh_token);\r\n\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n            originalRequest.headers[\"Authorization\"] =\r\n              \"JWT \" + response.data.access_token;\r\n\r\n            return axiosInstance(originalRequest);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          localStorage.clear();\r\n          window.location.href = \"/userlogin2/\";\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n        localStorage.clear();\r\n        window.location.href = \"/userlogin3/\";\r\n      }\r\n    }\r\n\r\n    if (error.response.status === 401) {\r\n      localStorage.clear();\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;","import React from \"react\";\r\n//dependencias\r\nimport * as categoryServer from \"../../services/category\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalComentario = ({ handleClose, show, category_id,currentItem, setFormData, newData, ...props}) => {\r\n\r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    try {\r\n      if (!category_id) {\r\n        formData.append(\"categoria\", newData.categoria);\r\n        await categoryServer.RegisterCategory(formData);\r\n      } else {\r\n        formData.append(\"categoria\", newData.categoria);\r\n        await categoryServer.updateCategory(category_id, formData);        \r\n      }\r\n      const res = await categoryServer.ListCategorias();\r\n      const data = await res;\r\n      props.setCategories(data);\r\n    } catch (error) {\r\n      /* console.log(error);   */  \r\n      console.log(error);  \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" ><h2>{category_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\" \r\n            className={classes.containerForm}\r\n            rows={1} \r\n            name=\"categoria\"\r\n            value={newData.categoria || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {category_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalComentario;","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as categoryServer from \"../../services/category\";\r\nimport CategoryModal from \"./categoryModal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\n\r\nimport * as videoServer from \"../../services/videoServer\";\r\n\r\n\r\nconst CategoryList = ({ categories }) => {\r\n  const history = useNavigate();\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [listCategories, setCategories] = useState(categories);\r\n  const initialFormData = {categoria:\"\"};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const [videos,setVideos] = useState([])\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n \r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ categoria: item.categoria });\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({categoria:\"\"});\r\n    handleShow(true)\r\n  };\r\n  \r\n\r\n\r\n  const getCategorias = async () => {\r\n    try {\r\n      const res = await categoryServer.ListCategorias();\r\n      const data = await res;\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getVideosByCategory = async ()=>{\r\n\r\n    try {\r\n      const res = await videoServer.ListVideos();\r\n      const data = await res;\r\n      setVideos(data.videos);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    if (user) {\r\n      getVideosByCategory()\r\n      getCategorias();\r\n      setId(null)\r\n      \r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  \r\n  if (user) {\r\n    \r\n    return (\r\n      <Container> \r\n        <div className={classes.paper}>\r\n              <h1 className=\"mt-4\">Categorías</h1>\r\n        </div>\r\n        <div  className=\"d-flex justify-content-between\">\r\n          <div>\r\n          <span className=\"border border-light p-2 rounded text-light\">{videos.length} Videos</span>\r\n          </div>\r\n          <div>\r\n\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"success\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar Categoría\r\n          </Button>\r\n            </div>\r\n        </div>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 15, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>Categoría</th>\r\n                  <th>Cantidad de videos</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listCategories.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listCategories.map((Categoria, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{Categoria.id}</td>\r\n                      <td>{Categoria.id}</td>\r\n                      <td>{Categoria.categoria}</td>\r\n                      <td>{videos.filter((video) => (\r\n      video.categorias.some((element) => Categoria.categoria === element.categoria))).length}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-primary p-1 btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(Categoria)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                       \r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <CategoryModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          category_id ={id}\r\n          currentItem={currentItem}\r\n          setCategories = {setCategories}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></CategoryModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import  { useEffect, useState } from \"react\";\r\nimport {  useContext } from \"react\";\r\n\r\n//dependencies\r\nimport ListCategories from \"../categories/listCategories\"\r\nimport * as categoryServer from \"../../services/category\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst  Principal = () =>{\r\n    const CategoryLoading = VideoLoadingComponent(ListCategories);\r\n    const { user } = useContext(Context);\r\n\r\n    const [appState, setAppState] = useState({\r\n      loading: true,\r\n      categories: null,\r\n    });   \r\n    \r\n    useEffect(() => {\r\n        categoryServer.ListCategorias().then((res) => {\r\n        const allCategories = res;\r\n        setAppState({ loading: false, categories: allCategories });\r\n      });\r\n    }, [setAppState]);\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <CategoryLoading isLoading={appState.loading} categories={appState.categories} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesión para ver todos los videos!</p>\r\n  );\r\n}\r\n\r\nexport default Principal;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la función main de lo contrario retorna mensaje indicando que aún se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //función para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //función para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/categorias/\";\r\n\r\n/**\r\n * Función para consultar todas las categorias registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListCategorias = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(API_URL);\r\n    return response.data; // no es necesario el await aquí\r\n  } catch (error) {\r\n    console.error(\"Error en ListCategorias:\", error);\r\n    throw error; // para que el componente lo capture\r\n  }\r\n};\r\n\r\nexport const RegisterCategory = async (newCategory) => {\r\n  const response = await axiosInstance.post(API_URL, newCategory);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getCategory = async (categoryID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${categoryID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async(id,updCategory) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updCategory);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/videos/\";\r\n\r\n/**\r\n * Función para consultar con el backend la lista de todos los videos sin filtrar.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\nexport const ListWebinars = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}public/webinars/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\nexport const ListVideosPublic = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}public/`);\r\n  if (response.status === 200) {\r\n    //console.log(response.data);\r\n    \r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListPeliculas = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listPeliculas/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Peliculas.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListVideosPorTemporada = async (temporadaId) => {\r\n  const response = await axiosInstance.get(`${API_URL}videostemporada/${temporadaId}`);\r\n  //console.log(response.data);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Series.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listSeries/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend la lista de videos con el tipo Casos.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const ListCasos = async () => {\r\n  const response = await axiosInstance.get(`${API_URL}listCasos/`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n}\r\n/**\r\n * Función para consultar con el backend un video con el id específico.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideo = async (videoID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${videoID}`);\r\n  //console.log(response.data);\r\n  \r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para consultar con el backend un video con el id específico. Esta función se usa para tener los datos del video en el formulario de update.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const getVideoDT = async (videoID) => {\r\n  const response = await axiosInstance.get(API_URL + \"retrieve/\" + videoID);\r\n  if (response.status === 200) {\r\n    return response.data;\r\n  }\r\n};\r\n/**\r\n * Función Post para enviar los datos del formulario de registro de un nuevo video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const RegisterVideo = async (newVideo) => {\r\n  const response = await axiosInstance.post(API_URL, newVideo);\r\n // console.log(response);\r\n  \r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n  else if(response.status === 409) {\r\n    return await response.data;\r\n  }\r\n};\r\n/**\r\n * Función para actualizar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const UpdateVideo = async (videoID, updateVideo) => {\r\n  const response = await axiosInstance.put(\r\n    API_URL + videoID + \"/\",\r\n    updateVideo\r\n  );\r\n  //console.log(response);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const partialUpdateVideo = async(id,PupdateVideo) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",PupdateVideo);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}\r\n/**\r\n * Función para eliminar un video.\r\n * @returns La data enviada desde el backend. \r\n */\r\nexport const DeleteVideo = async (videoID) => {\r\n  return await axiosInstance.delete(`${API_URL}${videoID}`);\r\n\r\n};\r\n"],"names":["API_URL","PUBLIC_ENDPOINTS","axiosInstance","localStorage","getItem","axios","baseURL","timeout","headers","accept","interceptors","request","use","config","token","isPublic","some","endpoint","url","includes","response","error","originalRequest","console","warn","Promise","reject","status","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","exp","post","refresh","setItem","access_token","refresh_token","defaults","log","clear","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","category_id","setFormData","currentItem","newData","props","handleSubmit","e","preventDefault","formData","FormData","append","categoria","categoryServer","res","setCategories","classes","Modal","onHide","contentClassName","cloud","centered","closeButton","id","Form","onSubmit","className","controlId","type","rows","name","value","onChange","target","variant","onClick","categories","history","useNavigate","useModal","handleShow","useState","setId","setCurrentItem","listCategories","videos","setVideos","user","useContext","Context","paper","marginTop","spacing","marginBottom","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getCategorias","getVideosByCategory","videoServer","useEffect","Container","length","Button","style","fontSize","backgroundColor","colSpan","map","Categoria","index","filter","video","categorias","element","CategoryLoading","VideoLoadingComponent","ListCategories","loading","appState","setAppState","then","isLoading","Component","justifyContent","role","initialValue","setShow","ListCategorias","RegisterCategory","newCategory","updateCategory","updCategory","ListVideos","ListWebinars","ListVideosPublic","ListPeliculas","ListCasos","getVideo","videoID","getVideoDT","RegisterVideo","newVideo","UpdateVideo","updateVideo","partialUpdateVideo","PupdateVideo","DeleteVideo"],"sourceRoot":""}