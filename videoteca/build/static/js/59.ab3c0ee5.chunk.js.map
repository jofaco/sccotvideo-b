{"version":3,"file":"static/js/59.ab3c0ee5.chunk.js","mappings":"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","sources":["axios.js","components/series/serieModal.js","components/series/listSeries.js","components/admin/SeriesAdmin.js","components/videos/videoLoading.js","hooks/useModal.js","services/serie.js"],"sourcesContent":["import axios from \"axios\";\r\n//import jwt from \"jwt-decode\"\r\nimport {Buffer} from 'buffer';\r\n\r\nconst API_URL = \"https://sccotview.com/api/\";\r\n\r\n/**\r\n * Funci贸n para realizar las peticiones al backend enviando headers con el token \r\n */\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 5000,\r\n  headers: {  \r\n    Authorization: localStorage.getItem(\"access_token\")\r\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\r\n      : null,\r\n    \"Content-Type\": \"multipart/form-data\",//toc贸 cambiarlo antes estaba \"Content-Type\": \"application/json\"\r\n    accept: \"application/json\",\r\n  },\r\n});\r\n\r\n/**\r\n * Funci贸n que valida si existe y es valido un access_token para manejo de sesi贸n\r\n */\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (typeof error.response === \"undefined\") {\r\n      console.warn(\r\n        \"A server/network error occurred. \" +\r\n          \"Looks like CORS might be the problem. \" +\r\n          \"Sorry about this - we will get it fixed shortly.\"\r\n      );\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/refresh/\"\r\n    ) {\r\n      window.location.href = \"/loginuser/\";\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n      error.response.data.code === \"token_not_valid\" &&\r\n      error.response.status === 401 &&\r\n      error.response.statusText === \"Unauthorized\"\r\n    ) {\r\n      const refreshToken = localStorage.getItem(\"refresh_token\");\r\n      if (refreshToken) {\r\n        //const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const tokenParts = JSON.parse(\r\n          Buffer.from(refreshToken.split(\".\")[1], \"base64\").toString()\r\n        );\r\n        /* const tokenParts = jwt(refreshToken, {\r\n\t\t\t\t\tcompleted: true\r\n\t\t\t\t  }) */\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n        console.log(tokenParts.exp);\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axiosInstance\r\n            .post(\"api/token/refresh/\", {\r\n              refresh: refreshToken,\r\n            })\r\n            .then((response) => {\r\n              localStorage.setItem(\"access_token\", response.data.access_token);\r\n              localStorage.setItem(\r\n                \"refresh_token\",\r\n                response.data.refresh_token\r\n              );\r\n\r\n              axiosInstance.defaults.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n              originalRequest.headers[\"Authorization\"] =\r\n                \"JWT \" + response.data.access_token;\r\n\r\n              return axiosInstance(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n          window.localStorage.removeItem(\"access_token\")\r\n          window.localStorage.removeItem(\"refresh_token\")\r\n          window.localStorage.removeItem(\"user\")\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba\");\r\n        }\r\n      } else {\r\n        console.log(\"Refresh token not available.\");\r\n          window.location.href = \"/loginuser/\";\r\n          //alert(\"Prueba2\");\r\n      }\r\n    }\r\n    if (error.response.status === 401)\r\n    {\r\n      window.location.href = \"/loginuser/\";\r\n    }\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","import { useState } from \"react\";\r\n//dependencias\r\nimport * as serieServer from \"../../services/serie\";\r\n\r\n//components\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../../styles/cloud.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  containerModal:{\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n  containerForm: {\r\n    height:\"3rem\",\r\n    background: \"#BFF\",\r\n    border: \"2px solid #ccc\",\r\n    borderRadius: 50,\r\n    boxShadow: \"4px 4px 4px 0px #5a28e550\",\r\n  },\r\n\r\n  \"@media (max-width: 720px)\": {\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nconst ModalSerie = ({ handleClose, show, serie_id, currentItem, setFormData, newData, ...props}) => {\r\n  const [selectedFileSerie,setSelectedFileSerie] = useState(null)\r\n  \r\n  const handleInputChange = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    setFormData({...newData, [name]: e.target.value });\r\n  };\r\n  const handleInputChangeImg = (e) => {\r\n    let target = e.target;\r\n    let name = target.name;\r\n    if (name === \"imgSerie\") {\r\n      setSelectedFileSerie(e.target.files[0]);\r\n    }\r\n   \r\n    \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    console.log(selectedFileSerie);\r\n    try {\r\n      if (!serie_id) {\r\n        formData.append(\"serie\", newData.serie);\r\n        formData.append(\"description\", newData.description);\r\n        formData.append(\"quantity\", newData.quantity);\r\n        if(selectedFileSerie){\r\n          formData.append(\"featured_image\", selectedFileSerie);\r\n        }\r\n\r\n        await serieServer.RegisterSerie(formData);\r\n      } else {\r\n        formData.append(\"serie\", newData.serie);\r\n        formData.append(\"description\", newData.description);\r\n        formData.append(\"quantity\", newData.quantity);\r\n        if(selectedFileSerie){\r\n          formData.append(\"featured_image\", selectedFileSerie);\r\n        }\r\n        await serieServer.updateSerie(serie_id, formData);        \r\n      }\r\n      const res = await serieServer.ListSeries();\r\n      const data = await res;\r\n      console.log(data);\r\n      console.log(formData);\r\n      props.setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);      \r\n    }\r\n  }\r\n  \r\n  const classes = useStyles();\r\n  return (\r\n    <Modal \r\n      show={show} \r\n      onHide={handleClose}\r\n      aria-labelledby=\"example-custom-modal-styling-title\"\r\n      contentClassName = {classes.cloud}\r\n      centered\r\n    >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"tituloModal\" ><h2>{serie_id? 'Editar Registro' : 'Crear Registro'}</h2></Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body id=\"bodyModal\" >\r\n        <Form onSubmit={handleSubmit}  >\r\n          <Form.Group className={\"mb-2 \"} controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Control type=\"text\"\r\n            name=\"serie\"\r\n            placeholder=\"Nombre de la serie\"\r\n            value={newData.serie || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n            \r\n            <br />\r\n            <Form.Control as=\"textarea\" rows={3}\r\n            name=\"description\"\r\n            placeholder=\"Descripci贸n de la serie\"\r\n            value={newData.description || \"\"}\r\n            onChange={handleInputChange} \r\n            />\r\n            <br />\r\n            <Form.Control type=\"number\"\r\n            name=\"quantity\"\r\n            placeholder=\"Cantidad de videos\"\r\n            value={newData.quantity || null}\r\n            onChange={handleInputChange} \r\n            />\r\n            <input type=\"file\" className=\"form-control mt-3\" name=\"imgSerie\" onChange={handleInputChangeImg}  />\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\r\n            {serie_id ? 'Guardar Cambios' : 'Crear'}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    \r\n  )\r\n};\r\n\r\nexport default ModalSerie;","/* eslint-disable array-callback-return */\r\nimport { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Components\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport \"../../index.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n//dependencies\r\nimport Context from \"../context/UserContext\";\r\nimport * as serieServer from \"../../services/serie\";\r\nimport SerieModal from \"./serieModal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css'\r\n\r\n\r\n\r\n\r\n\r\nconst SerieList = ({series}) => {\r\n  const history = useNavigate();\r\n\r\n  const [show, handleShow, handleClose] = useModal(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState({});\r\n  const [listSeries, setSeries] = useState(series);\r\n  const initialFormData = {serie:\"\", description:\"\", quantity:0};\r\n  const [newData, setFormData] = useState(initialFormData);\r\n  const { user } = useContext(Context);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        marginBottom: theme.spacing(10),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    title1: {\r\n      textAlign: \"center\",\r\n      color: \"white\"\r\n    }\r\n  }));\r\n\r\n  \r\n  const editar = async (item) => {\r\n    setId(item.id);\r\n    setCurrentItem(item);\r\n    setFormData({ serie: item.serie, description:item.description, quantity:item.quantity});\r\n    handleShow(true)\r\n  };\r\n\r\n  const registrar = async () => {\r\n    setId(null);\r\n    setCurrentItem({});\r\n    setFormData({serie:\"\", description:\"\", quantity:0});\r\n    handleShow(true)\r\n  };\r\n\r\n\r\n  const getSeries = async () => {\r\n    try {\r\n      const res = await serieServer.ListSeries();\r\n      const data = await res;\r\n      console.log(data);\r\n      setSeries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.is_superuser) {\r\n      getSeries();\r\n      setId(null)\r\n    } else {\r\n    history(\"/loginuser\");\r\n      \r\n    }\r\n    \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const classes = useStyles();\r\n  \r\n  if (user) {\r\n    \r\n    return (\r\n      <Container> \r\n        \r\n        <div className={classes.paper}>\r\n              <h1 className=\"mt-4 text-center\">Series</h1>\r\n        </div>\r\n        <Stack  alignItems=\"center\">\r\n          <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={()=>registrar()}>\r\n            Registrar Series\r\n          </Button>\r\n        </Stack>\r\n        <br/><br/> <br/>     \r\n        <div>\r\n          <section className=\"content\">\r\n          <div className=\"table-responsive table-condensed table-sm tabla\">\r\n            <table\r\n              className=\"table table-hover\"\r\n              id=\"dataTableData\"\r\n              name=\"dataTableData\"\r\n              style={{ fontSize: 11, textAlign: \"center\" }}\r\n            >\r\n              <thead className={classes.title1}>\r\n                <tr>\r\n                  <th style={{ display: \"none\" }}>Id</th>\r\n                  <th>Codigo</th>\r\n                  <th>Serie</th>\r\n                  <th>Descripci贸n</th>\r\n                  <th>Cantidad de videos</th>\r\n                  <th>Imagen</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style={{ backgroundColor: \"white\" }}>\r\n                {listSeries.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={11}>No hay datos</td>\r\n                  </tr>\r\n                ) : (\r\n                  listSeries.map((serie, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ display: \"none\" }}>{serie.id}</td>\r\n                      <td>{serie.id}</td>\r\n                      <td>{serie.serie}</td>\r\n                      <td>{serie.description}</td>\r\n                      <td>{serie.quantity}</td>\r\n                      <td><LazyLoadImage effect=\"blur\"    src={\"https://sccotview.com\"+serie.featured_image} alt=\"\" className=\"img-fluid img-thumbnail\"/></td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-outline-primary p-1 btn-sm float-right\"\r\n                          type=\"submit\"\r\n                          onClick={()=>editar(serie)}\r\n                        >\r\n                          editar\r\n                        </button>\r\n                        \r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n        </div>\r\n        <SerieModal\r\n          handleClose={handleClose}\r\n          show={show}\r\n          serie_id ={id}\r\n          currentItem={currentItem}\r\n          setSeries = {setSeries}\r\n          setFormData = {setFormData}\r\n          newData={newData}\r\n        ></SerieModal>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n};\r\n\r\nexport default SerieList;\r\n","import {  useEffect, useState,useContext } from \"react\";\r\n\r\n//dependencies\r\nimport ListSeries from \"../series/listSeries\"\r\nimport * as SerieServer from \"../../services/serie\";\r\nimport VideoLoadingComponent from \"../videos/videoLoading\";\r\nimport Context from \"../context/UserContext\";\r\n//components\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n/**\r\n * Carga todos los videos que sean 'Series' para el modulo Series de la aplicaci贸n\r\n */\r\nfunction AppSeries() {\r\n  const SerieLoading = VideoLoadingComponent(ListSeries);\r\n  const { user } = useContext(Context);\r\n\r\n  const [appState, setAppState] = useState({\r\n    loading: true,\r\n    series: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    SerieServer.ListSeries().then((res) => {\r\n      const allSeries = res;\r\n      setAppState({ loading: false, series: allSeries });\r\n    });\r\n  }, [setAppState]);\r\n\r\n  if (user) {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          <SerieLoading isLoading={appState.loading} series={appState.series} />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <p style={{ fontSize: \"25px\" }}>Inicia sesi贸n para ver todos los videos!</p>\r\n  );\r\n}\r\nexport default AppSeries;\r\n","import React from \"react\";\r\n\r\n/**\r\n * Verifica si los videos ya fueron cargados.\r\n * @param {component} Component \r\n * @returns\r\n */\r\nfunction VideoLoading(Component) {\r\n  /**\r\n    * @param {boolean} isLoading \r\n    * @param {Object} props\r\n    * @returns  Si ya cargaron los videos se retorna un componente recibido en la funci贸n main de lo contrario retorna mensaje indicando que a煤n se estan cargando.\r\n  */\r\n  return function VideoLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <div  className=\"mt-4\" style={{ fontSize: \"25px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\",flexDirection:\"column\",alignItems:\"center\" }}>\r\n        <div className=\"spinner-grow text-light\" role=\"status\">\r\n          <span className=\"sr-only\"></span>\r\n        </div>\r\n          Espera por favor\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default VideoLoading;\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [show, setShow] = useState(initialValue);\r\n\r\n  const handleShow = () => setShow(true); //funci贸n para mostrar el modal de comentario.\r\n  const handleClose = () => setShow(false); //funci贸n para cerrar el modal de comentario.\r\n\r\n  return [show, handleShow, handleClose];\r\n}\r\n\r\n\r\n","import axiosInstance from \"../axios\";\r\n\r\nconst API_URL = \"https://sccotview.com/api/series/\";\r\n\r\n/**\r\n * Funci贸n para consultar todas las series registradas en la base de datos.\r\n * @returns Data enviada desde el backend\r\n */\r\nexport const ListSeries = async () => {\r\n  const response = await axiosInstance.get(API_URL);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const RegisterSerie = async (newSerie) => {\r\n  const response = await axiosInstance.post(API_URL, newSerie);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\nexport const getSerie = async (serieID) => {\r\n  const response = await axiosInstance.get(`${API_URL}${serieID}`);\r\n  if (response.status === 200) {\r\n    return await response.data;\r\n  }\r\n};\r\n\r\n\r\nexport const updateSerie = async(id,updSerie) =>{\r\n  const response = await axiosInstance.patch(API_URL+id+\"/\",updSerie);\r\n  if (response.status === 200) {\r\n      return response.data;\r\n  }\r\n}"],"names":["API_URL","axiosInstance","axios","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","console","warn","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","Buffer","split","toString","now","Math","ceil","Date","log","exp","post","refresh","then","setItem","access_token","refresh_token","defaults","catch","err","removeItem","useStyles","makeStyles","theme","containerModal","border","borderRadius","boxShadow","containerForm","height","background","root","display","handleClose","show","serie_id","setFormData","currentItem","newData","props","useState","selectedFileSerie","setSelectedFileSerie","handleInputChange","e","name","target","value","handleSubmit","preventDefault","formData","FormData","append","serie","description","quantity","serieServer","res","setSeries","classes","Modal","onHide","contentClassName","cloud","centered","closeButton","id","Form","onSubmit","className","controlId","type","placeholder","onChange","as","rows","files","variant","onClick","series","history","useNavigate","useModal","handleShow","setId","setCurrentItem","listSeries","user","useContext","Context","paper","marginTop","spacing","marginBottom","flexDirection","alignItems","title1","textAlign","color","editar","item","registrar","getSeries","useEffect","is_superuser","Container","Stack","Button","style","fontSize","backgroundColor","length","colSpan","map","index","LazyLoadImage","effect","src","featured_image","alt","SerieLoading","VideoLoadingComponent","ListSeries","loading","appState","setAppState","SerieServer","isLoading","Component","justifyContent","role","initialValue","setShow","RegisterSerie","newSerie","getSerie","serieID","updateSerie","updSerie"],"sourceRoot":""}